import { take } from "rxjs";
import { Injectable } from "../dependency-injection/Injectable";
import { Namespace } from "../generated-proto/pb_schema/cdp/cof/namespace";
import { lensCoreFactory } from "../lens-core-module";
import { remoteConfigurationFactory } from "./remoteConfiguration";
export const setPreloadedConfiguration = Injectable("setPreloadedConfiguration", [lensCoreFactory.token, remoteConfigurationFactory.token], (lensCore, remoteConfiguration) => {
    remoteConfiguration
        .getNamespace(Namespace.LENS_CORE_CONFIG)
        .pipe(take(1))
        .subscribe((configs) => {
        const inputs = configs.map(({ configId, value }) => ({ configId, value }));
        lensCore.setPreloadedConfiguration(inputs);
    });
});
//# sourceMappingURL=preloadConfiguration.js.map