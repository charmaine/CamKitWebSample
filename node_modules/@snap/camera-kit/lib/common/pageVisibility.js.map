{"version":3,"file":"pageVisibility.js","sourceRoot":"","sources":["../../src/common/pageVisibility.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from \"../dependency-injection/Injectable\";\n\nexport class PageVisibility {\n    private onHiddenHandlers = new Set<() => void>();\n    private onVisibleHandlers = new Set<() => void>();\n\n    private previousVisibilityState = document.visibilityState;\n    private visibilityTransition: false | DocumentVisibilityState = false;\n\n    constructor() {\n        this.onVisibilityChange = this.onVisibilityChange.bind(this);\n        this.isDuringVisibilityTransition = this.isDuringVisibilityTransition.bind(this);\n        this.onPageHidden = this.onPageHidden.bind(this);\n        this.onPageVisible = this.onPageVisible.bind(this);\n        this.destroy = this.destroy.bind(this);\n        document.addEventListener(\"visibilitychange\", this.onVisibilityChange);\n    }\n\n    isDuringVisibilityTransition(test: DocumentVisibilityState): boolean {\n        return test === this.visibilityTransition;\n    }\n\n    /**\n     * Run a function when the page is hidden. If this occurs due to tab / browser closure,\n     * only synchronous functions will run to completion.\n     *\n     * If the given handler throws an error, it will be silently swallowed.\n     *\n     * @param handler\n     * @returns A function which, when called, removes the function from the set of visibility change handlers.\n     */\n    onPageHidden(handler: () => void): () => void {\n        this.onHiddenHandlers.add(handler);\n        return () => this.onHiddenHandlers.delete(handler);\n    }\n\n    /**\n     * Run a function when the page is made visible.\n     *\n     * If the given handler throws an error, it will be silently swallowed.\n     *\n     * @param handler\n     * @returns A function which, when called, removes the function from the set of visibility change handlers.\n     */\n    onPageVisible(handler: () => void): () => void {\n        this.onVisibleHandlers.add(handler);\n        return () => this.onVisibleHandlers.delete(handler);\n    }\n\n    destroy() {\n        document.removeEventListener(\"visibilitychange\", this.onVisibilityChange);\n        this.onHiddenHandlers.clear();\n        this.onVisibleHandlers.clear();\n    }\n\n    private onVisibilityChange() {\n        const handlers =\n            this.previousVisibilityState === \"visible\" && document.visibilityState === \"hidden\"\n                ? this.onHiddenHandlers\n                : this.previousVisibilityState === \"hidden\" && document.visibilityState === \"visible\"\n                ? this.onVisibleHandlers\n                : new Set<() => void>();\n\n        this.visibilityTransition = document.visibilityState;\n\n        for (const handler of handlers) {\n            try {\n                handler();\n            } catch (error) {\n                // We'll do the same thing here that we would do if the handler was added directly as an event\n                // listener and dispatch an error event if we can.\n                if (typeof window !== \"undefined\") window.dispatchEvent(new CustomEvent(\"error\", { detail: error }));\n            }\n        }\n\n        this.previousVisibilityState = this.visibilityTransition;\n        this.visibilityTransition = false;\n    }\n}\n\nexport const pageVisibilityFactory = Injectable(\"pageVisibility\", () => new PageVisibility());\n"]}