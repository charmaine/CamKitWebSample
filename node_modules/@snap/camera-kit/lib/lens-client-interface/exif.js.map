{"version":3,"file":"exif.js","sourceRoot":"","sources":["../../src/lens-client-interface/exif.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,GAAG,MAAM,CAAC;AACvB,MAAM,WAAW,GAAG,MAAM,CAAC;AAC3B,MAAM,OAAO,GAAG,UAAU,CAAC;AAC3B,MAAM,aAAa,GAAG,MAAM,CAAC;AAC7B,MAAM,sBAAsB,GAAG,MAAM,CAAC;AAEtC,oDAAoD;AACpD,MAAM,CAAN,IAAkB,WASjB;AATD,WAAkB,WAAW;IACzB,mDAAW,CAAA;IACX,qDAAY,CAAA;IACZ,2DAAe,CAAA;IACf,yDAAc,CAAA;IACd,mDAAW,CAAA;IACX,qDAAY,CAAA;IACZ,2DAAe,CAAA;IACf,yDAAc,CAAA;AAClB,CAAC,EATiB,WAAW,KAAX,WAAW,QAS5B;AAED;;;;;;;;GAQG;AACH,MAAM,UAAU,yBAAyB,CAAC,IAAiB;IACvD,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;IAEhC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,OAAO;QAAE,OAAO,SAAS,CAAC;IAE3D,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;IAC/B,IAAI,MAAM,GAAG,CAAC,CAAC;IAEf,OAAO,MAAM,GAAG,MAAM,EAAE;QACpB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC;YAAE,OAAO,SAAS,CAAC;QAC7D,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC3C,MAAM,IAAI,CAAC,CAAC;QAEZ,IAAI,MAAM,KAAK,WAAW,EAAE;YACxB,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,OAAO,EAAE;gBAClD,OAAO,SAAS,CAAC;aACpB;YAED,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,aAAa,CAAC;YACpE,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;YAC7C,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAC1C,MAAM,IAAI,CAAC,CAAC;YACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;gBAC3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK,sBAAsB,EAAE;oBACpE,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,MAAM,CAAgB,CAAC;iBACrE;aACJ;SACJ;aAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,MAAM,EAAE;YACrC,MAAM;SACT;aAAM;YACH,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC3C;KACJ;IACD,OAAO,SAAS,CAAC;AACrB,CAAC","sourcesContent":["const JPEG_ID = 0xffd8;\nconst APP1_MARKER = 0xffe1;\nconst EXIF_ID = 0x45786966;\nconst LITTLE_ENDIAN = 0x4949;\nconst ORIENTATION_TAG_OFFSET = 0x0112;\n\n// http://sylvana.net/jpegcrop/exif_orientation.html\nexport const enum Orientation {\n    TopLeft = 1,\n    TopRight = 2,\n    BottomRight = 3,\n    BottomLeft = 4,\n    LeftTop = 5,\n    RightTop = 6,\n    RightBottom = 7,\n    LeftBottom = 8,\n}\n\n/**\n * Parses JPEG EXIF metadata and returns Orientation tag of it, or undefined if not applicable.\n *\n * Adopted from https://stackoverflow.com/a/32490603\n *\n * @internal\n * @param data JPEG binary.\n * @returns Orientation tag value or undefined.\n */\nexport function extractJpegOrientationTag(data: ArrayBuffer): Orientation | undefined {\n    const view = new DataView(data);\n\n    if (view.getUint16(0, false) !== JPEG_ID) return undefined;\n\n    const length = view.byteLength;\n    let offset = 2;\n\n    while (offset < length) {\n        if (view.getUint16(offset + 2, false) <= 8) return undefined;\n        let marker = view.getUint16(offset, false);\n        offset += 2;\n\n        if (marker === APP1_MARKER) {\n            if (view.getUint32((offset += 2), false) !== EXIF_ID) {\n                return undefined;\n            }\n\n            let little = view.getUint16((offset += 6), false) === LITTLE_ENDIAN;\n            offset += view.getUint32(offset + 4, little);\n            let tags = view.getUint16(offset, little);\n            offset += 2;\n            for (let i = 0; i < tags; i++) {\n                if (view.getUint16(offset + i * 12, little) === ORIENTATION_TAG_OFFSET) {\n                    return view.getUint16(offset + i * 12 + 8, little) as Orientation;\n                }\n            }\n        } else if ((marker & 0xff00) !== 0xff00) {\n            break;\n        } else {\n            offset += view.getUint16(offset, false);\n        }\n    }\n    return undefined;\n}\n"]}