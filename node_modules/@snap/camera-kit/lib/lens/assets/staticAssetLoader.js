import { __awaiter } from "tslib";
import { Injectable } from "../../dependency-injection/Injectable";
import { createArrayBufferParsingHandler } from "../../handlers/arrayBufferParsingHandler";
import { defaultFetchHandlerFactory } from "../../handlers/defaultFetchHandler";
import { HandlerChainBuilder } from "../../handlers/HandlerChainBuilder";
/**
 * @internal
 */
export const staticAssetLoaderFactory = Injectable("staticAssetLoader", [defaultFetchHandlerFactory.token], (fetchHandler) => {
    const handler = new HandlerChainBuilder(fetchHandler).map(createArrayBufferParsingHandler()).handler;
    return (asset, _lens, assetManifest) => __awaiter(void 0, void 0, void 0, function* () {
        var _a;
        const assetUrl = (_a = assetManifest === null || assetManifest === void 0 ? void 0 : assetManifest.find((manifest) => manifest.id === asset.assetId)) === null || _a === void 0 ? void 0 : _a.assetUrl;
        if (!assetUrl) {
            throw new Error(`Cannot load lens asset ${asset.assetId}. Static asset URL could not be found.`);
        }
        // TODO: remove force-cache once https://jira.sc-corp.net/browse/CAMKIT-3671 is addressed
        const [buffer, response] = yield handler(assetUrl, { cache: "force-cache" });
        if (!response.ok)
            throw response;
        return buffer;
    });
});
//# sourceMappingURL=staticAssetLoader.js.map