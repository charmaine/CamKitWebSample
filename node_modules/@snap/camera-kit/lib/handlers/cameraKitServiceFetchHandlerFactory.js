import { getCameraKitUserAgent } from "../platform/cameraKitUserAgent";
import { configurationToken } from "../configuration";
import { Injectable } from "../dependency-injection/Injectable";
import { defaultFetchHandlerFactory } from "./defaultFetchHandler";
import { HandlerChainBuilder } from "./HandlerChainBuilder";
import { createHeadersModifyingFetchHandler } from "./headersModifyingFetchHandler";
/**
 * A Fetch implementation which adds headers required to make authenticated calls to the CameraKit backend service.
 *
 * @internal
 */
export const cameraKitServiceFetchHandlerFactory = Injectable("cameraKitServiceFetchHandler", [configurationToken, defaultFetchHandlerFactory.token], ({ apiToken }, defaultFetchHandler) => {
    return new HandlerChainBuilder(defaultFetchHandler).map(createHeadersModifyingFetchHandler((headers) => {
        headers.append("x-snap-client-user-agent", getCameraKitUserAgent());
        headers.append("authorization", `Bearer ${apiToken}`);
        return headers;
    })).handler;
});
//# sourceMappingURL=cameraKitServiceFetchHandlerFactory.js.map