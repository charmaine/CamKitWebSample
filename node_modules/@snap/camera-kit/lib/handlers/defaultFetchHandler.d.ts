export type FetchHandler<R = Response> = (input: RequestInfo, init?: RequestInit) => Promise<R>;
/**
 * The default Fetch implementation, used to make a simple HTTP requests without any custom headers. This can be passed
 * to `HandlerChainBuilder` to form the basis for other Fetch implementations (e.g. with custom headers, which extract
 * the Response body, etc.)
 *
 * Has support for retries, client-side timeout, and navigating federated auth flows that may not support CORs requests.
 *
 * @internal
 */
export declare const defaultFetchHandlerFactory: {
    (): import("./HandlerChainBuilder").Handler<RequestInfo, Response, RequestInit | undefined>;
    token: "defaultFetchHandler";
    dependencies: [];
};
