import { LensKeyboard } from "../session/LensKeyboard";
import { LensRepository } from "../lens";
import { LensCore } from "../lens-core-module";
import { OperationalMetricsReporter } from "../metrics/operational/operationalMetricsReporter";
import { RemoteApiServices } from "./RemoteApiServices";
import { UriHandlers } from "./UriHandlers";
/**
 * Registers URI handlers within LensCore.
 * @internal
 */
export declare const registerUriHandlers: {
    (args_0: LensCore, args_1: import("@snap/state-management").StateMachine<import("@snap/state-management").Action<"applyLens", {
        lens: import("../lens").Lens;
        launchParams?: import("..").LensLaunchParams | undefined;
    }> | import("@snap/state-management").Action<"downloadComplete", import("../lens").Lens> | import("@snap/state-management").Action<"turnedOn", import("../lens").Lens> | import("@snap/state-management").Action<"resourcesLoaded", import("../lens").Lens> | import("@snap/state-management").Action<"firstFrameProcessed", import("../lens").Lens> | import("@snap/state-management").Action<"applyLensComplete", import("../lens").Lens> | import("@snap/state-management").Action<"applyLensFailed", {
        error: import("../session/lensState").LensErrors;
        lens: import("../lens").Lens;
    }> | import("@snap/state-management").Action<"applyLensAborted", import("../lens").Lens> | import("@snap/state-management").Action<"removeLens", undefined> | import("@snap/state-management").Action<"turnedOff", import("../lens").Lens> | import("@snap/state-management").Action<"removeLensComplete", undefined> | import("@snap/state-management").Action<"removeLensFailed", Error>, import("@snap/state-management").State<"noLensApplied", undefined> | import("@snap/state-management").State<"applyingLens", import("../lens").Lens> | import("@snap/state-management").State<"lensApplied", import("../lens").Lens>>, args_2: UriHandlers, args_3: LensKeyboard, args_4: RemoteApiServices, args_5: LensRepository, args_6: import("@snap/state-management").StateMachine<import("@snap/state-management").Action<"suspend", import("..").CameraKitSession> | import("@snap/state-management").Action<"resume", import("..").CameraKitSession> | import("@snap/state-management").Action<"destroy", undefined>, import("@snap/state-management").State<"inactive", undefined> | import("@snap/state-management").State<"active", import("..").CameraKitSession> | import("@snap/state-management").State<"destroyed", undefined>>, args_7: OperationalMetricsReporter): void;
    token: "registerUriHandlers";
    dependencies: readonly ["lensCore", "lensState", "UriHandlers", "lensKeyboard", "remoteApiServices", "LensRepository", "sessionState", "operationalMetricsReporter"];
};
