{"version":3,"file":"MediaStreamSource.js","sourceRoot":"","sources":["../../src/media-sources/MediaStreamSource.ts"],"names":[],"mappings":"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","sourcesContent":["import { ensureError } from \"../common/errorHelpers\";\nimport { Transform2D } from \"../transforms\";\nimport { CameraKitSource, CameraKitSourceOptions } from \"./CameraKitSource\";\n\nconst defaultOptions: MediaStreamSourceOptions = {\n    transform: Transform2D.Identity,\n    disableSourceAudio: false,\n};\n\nfunction closeWorklet(worklet: AudioWorkletNode | undefined) {\n    if (!worklet) return;\n    worklet.port.close();\n    worklet.port.onmessage = null;\n    worklet.disconnect();\n}\n\nasync function closeAudioContext(audioContext: AudioContext | undefined) {\n    if (!audioContext || audioContext.state === \"closed\") return;\n    return audioContext.close();\n}\n\n/** @category Rendering */\nexport interface MediaStreamSourceOptions {\n    transform: Transform2D;\n    disableSourceAudio: boolean; // defaults to false\n}\n\n/**\n * Create a {@link CameraKitSource} from a user's media device -- this calls\n * [MediaDevices.getUserMedia](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia) to get a\n * MediaStream and then calls {@link createMediaStreamSource}.\n *\n * @param constraints Specify contraints used to get a MediaStream from a media device. By default we simply request\n * a video stream.\n * @param options\n * @param options.transform By default we horizontally mirror the video stream. The most common use-case is to obtain a\n * stream from a front-facing web cam, which requires mirroring to be viewed naturally.\n * @param options.cameraType By default we set this to 'front' to indicate a camera pointed at the user (e.g. a webcam).\n * @param options.fpsLimit By default we set no limit on FPS – if the source device has a known FPS setting this limit\n * may prevent CameraKit from using more compute resources than strictly necessary.\n * @returns A Promise, resolving to {@link CameraKitSource}\n *\n * @category Rendering\n *\n * @deprecated The helper will be removed in one of the future releases.\n * Consumer apps are responsible for acquiring a media stream,\n * which can then be supplied to {@link createMediaStreamSource}.\n */\nexport async function createUserMediaSource(\n    constraints: MediaStreamConstraints = { video: true },\n    options: CameraKitSourceOptions<MediaStreamSourceOptions> = {}\n): Promise<CameraKitSource> {\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    return createMediaStreamSource(stream, { transform: Transform2D.MirrorX, cameraType: \"front\", ...options });\n}\n\n/**\n * Create a {@link CameraKitSource} from any\n * [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream).\n *\n * @param stream Any MediaStream, such as obtained via `canvas.captureStream()` or `mediaDevices.getUserMedia()`.\n * @param options\n * @param options.transform We apply no transformation by default.\n * @param options.disableSourceAudio By default we pass audio to lens. Settings this to true will disable sending audio\n * to the lens.\n * @param options.cameraType By default we set this to 'user', which is the camera type most Lenses expect.\n * @param options.fpsLimit By default we set no limit on FPS – if the MediaStream has a known FPS setting this limit\n * may prevent CameraKit from using more compute resources than strictly necessary.\n *\n * @category Rendering\n */\nexport function createMediaStreamSource(\n    stream: MediaStream,\n    options: CameraKitSourceOptions<MediaStreamSourceOptions> = {}\n): CameraKitSource {\n    const { width, height, facingMode } =\n        stream.getVideoTracks().length > 0\n            ? stream.getVideoTracks()[0].getSettings()\n            : { width: 0, height: 0, facingMode: undefined };\n\n    const detectedCameraType = facingMode === \"user\" || facingMode === \"environment\" ? facingMode : undefined;\n\n    const optionsWithDefaults = {\n        ...defaultOptions,\n        ...options,\n        cameraType: options.cameraType ?? detectedCameraType,\n    };\n\n    const enableSourceAudio: boolean = stream.getAudioTracks().length > 0 && !optionsWithDefaults.disableSourceAudio;\n\n    const simulateStereoAudio = true;\n    const sampleRate: number = 44100;\n\n    let audioContext: AudioContext | undefined = undefined;\n    let audioSource: MediaStreamAudioSourceNode | undefined = undefined;\n    let worklet: AudioWorkletNode | undefined = undefined;\n    let microphoneRecorderUrl: string;\n\n    if (enableSourceAudio) {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Using_AudioWorklet\n        const microphoneRecorderWorklet = `\n        class MicrophoneWorkletProcessor extends AudioWorkletProcessor {\n            process(inputs, outputs, parameters) {\n                this.port.postMessage({\n                    eventType: 'data',\n                    buffer: inputs\n                });\n                return true;\n            }\n        }\n        registerProcessor('microphone-worklet', MicrophoneWorkletProcessor);`;\n        const microphoneRecorderBlob = new Blob([microphoneRecorderWorklet], {\n            type: \"application/javascript\",\n        });\n        microphoneRecorderUrl = URL.createObjectURL(microphoneRecorderBlob);\n    }\n\n    return new CameraKitSource(\n        { media: stream },\n        {\n            onAttach: async (source, lensCore, reportError) => {\n                if (width !== undefined && height !== undefined) await source.setRenderSize(width, height);\n                await source.setTransform(optionsWithDefaults.transform);\n\n                if (enableSourceAudio) {\n                    // Audio paramters set has to be called before lens is applied\n                    await lensCore.setAudioParameters({\n                        parameters: {\n                            numChannels: simulateStereoAudio ? 2 : 1,\n                            sampleRate,\n                        },\n                    });\n\n                    try {\n                        // There is a possibility of the onAttach method being called twice in a row due to a bug.\n                        // To ensure there are not leaks, it is better to close any existing connections.\n                        closeWorklet(worklet);\n                        audioSource?.disconnect();\n                        await closeAudioContext(audioContext);\n                    } catch (error) {\n                        // We still want to continue if anything above failed\n                        reportError(ensureError(error));\n                    }\n\n                    audioContext = new AudioContext();\n                    audioSource = audioContext.createMediaStreamSource(stream);\n                    const scopedAudioSource = audioSource;\n                    audioContext.audioWorklet\n                        .addModule(microphoneRecorderUrl)\n                        .then(() => {\n                            if (audioContext) {\n                                worklet = new AudioWorkletNode(audioContext, \"microphone-worklet\");\n                                scopedAudioSource.connect(worklet);\n                                worklet.connect(audioContext.destination);\n                                // NOTE: We subscribe to messages here, and they will continue to arrive\n                                // even after audioContext.close() is called. To disconnect the audio worklets\n                                // created here, we need to track two variables - worklet and audioSource.\n                                // By calling disconnect() on them, we can properly\n                                // disconnect the audio worklets.\n                                worklet.port.onmessage = (e) => {\n                                    if (e.data.eventType === \"data\") {\n                                        // developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/process\n                                        // inputs[n][m] is the list of samples in the n-th input at the m-th channel.\n                                        const leftSamples = e.data.buffer[0][0] as Float32Array;\n\n                                        // Firefox might have leftSamples undefined:\n                                        // https://jira.sc-corp.net/browse/CAMKIT-5189\n                                        if (!leftSamples) return;\n\n                                        let inputBuffers = [leftSamples];\n                                        if (simulateStereoAudio) {\n                                            const rightSamples =\n                                                e.data.buffer[0].length > 1 ? e.data.buffer[0][1] : leftSamples.slice();\n                                            inputBuffers.push(rightSamples);\n                                        }\n\n                                        lensCore.processAudioSampleBuffer({ input: inputBuffers }).catch(reportError);\n                                    }\n                                };\n                            }\n                        })\n                        .catch((error: Error) => {\n                            reportError(error);\n                        });\n                }\n            },\n            onDetach: async (reportError) => {\n                if (worklet) {\n                    closeWorklet(worklet);\n                    worklet = undefined;\n                }\n                if (audioSource) {\n                    audioSource.disconnect();\n                    audioSource = undefined;\n                }\n                if (audioContext) {\n                    await closeAudioContext(audioContext).catch(reportError);\n                    audioContext = undefined;\n                }\n            },\n        },\n        optionsWithDefaults\n    );\n}\n"]}