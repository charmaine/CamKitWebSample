{"version":3,"file":"circumstance_service.js","sourceRoot":"","sources":["../../../../../src/generated-proto/pb_schema/cdp/cof/circumstance_service.ts"],"names":[],"mappings":"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","sourcesContent":["import Long from \"long\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Namespace } from \"./namespace\";\nimport { ConfigTargetingRequest } from \"./config_request\";\nimport { ConfigTargetingResponse } from \"./config_response\";\nimport { BrowserHeaders } from \"browser-headers\";\nimport { ConfigResult } from \"./config_result\";\nimport { DebugTrace } from \"./debug_info\";\nimport { Ruid } from \"../../common/ruid\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport interface GetAbConfigValuesRequest {\n    configNames: string[];\n    namespaces: Namespace[];\n    cofConfigNames: string[];\n    includeAllConfigs: boolean;\n    disableExposureLogging: boolean;\n    enableDebug: boolean;\n}\nexport interface GetAbConfigValuesResponse {\n    configResults: ConfigResult[];\n    debugTrace: DebugTrace | undefined;\n}\nexport interface ConfigSetGenerationRequest {\n    targetingParameters: ConfigTargetingRequest | undefined;\n    overrides: ConfigResult[];\n}\nexport interface ConfigSetGenerationResponse {\n    targetingResponse: ConfigTargetingResponse | undefined;\n}\nexport interface PinConfigRequest {\n    configSetToken: string;\n    userId: string;\n    ttlSeconds: number;\n}\nexport interface PinConfigResponse {\n    debug: string;\n}\nexport interface UnpinConfigRequest {\n    configSetToken: string;\n    userId: string;\n}\nexport interface UnpinConfigResponse {\n    debug: string;\n}\nexport interface ConfigWithNamespace {\n    configName: string;\n    namespace: Namespace;\n}\nexport interface GetConfigValuesByTokenRequest {\n    token: string;\n    configNames: ConfigWithNamespace[];\n    namespaces: Namespace[];\n    disableExposureLogging: boolean;\n    getAllConfigs: boolean;\n}\nexport interface GetConfigValuesByTokenResponse {\n    configResults: ConfigResult[];\n}\nexport interface GetCachedConfigResultSequenceIdsRequest {\n}\nexport interface GetCachedConfigResultSequenceIdsResponse {\n    serializedBitmap: Uint8Array;\n}\nexport interface GetConfigResultsBySequenceIdsRequest {\n    sequenceIds: number[];\n}\nexport interface ConfigResultWithSequenceId {\n    sequenceId: number;\n    configResult: ConfigResult | undefined;\n}\nexport interface GetConfigResultsBySequenceIdsResponse {\n    configResultWithSequenceIds: ConfigResultWithSequenceId[];\n}\nexport interface GetBitmapByTokenRequest {\n    token: string;\n}\nexport interface GetBitmapByTokenResponse {\n    idBitmap: Uint8Array;\n}\nexport interface GetUnevaluatedConfigResultsWithAbTargetingRequest {\n    namespaces: Namespace[];\n    edgeConfigClientVersion: string;\n}\nexport interface GetUnevaluatedConfigResultsWithAbTargetingResponse {\n    configResults: ConfigResult[];\n}\nexport interface AddRuidsForDebuggingRequest {\n    ruids: Ruid[];\n    configNames: string[];\n    maxSnapshots: number;\n}\nexport interface AddRuidsForDebuggingResponse {\n}\nfunction createBaseGetAbConfigValuesRequest(): GetAbConfigValuesRequest {\n    return {\n        configNames: [],\n        namespaces: [],\n        cofConfigNames: [],\n        includeAllConfigs: false,\n        disableExposureLogging: false,\n        enableDebug: false,\n    };\n}\nexport const GetAbConfigValuesRequest = {\n    encode(message: GetAbConfigValuesRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configNames) {\n            writer.uint32(10).string(v!);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.namespaces) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        for (const v of message.cofConfigNames) {\n            writer.uint32(26).string(v!);\n        }\n        if (message.includeAllConfigs === true) {\n            writer.uint32(32).bool(message.includeAllConfigs);\n        }\n        if (message.disableExposureLogging === true) {\n            writer.uint32(40).bool(message.disableExposureLogging);\n        }\n        if (message.enableDebug === true) {\n            writer.uint32(104).bool(message.enableDebug);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetAbConfigValuesRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetAbConfigValuesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configNames.push(reader.string());\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.namespaces.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.namespaces.push(reader.int32() as any);\n                    }\n                    break;\n                case 3:\n                    message.cofConfigNames.push(reader.string());\n                    break;\n                case 4:\n                    message.includeAllConfigs = reader.bool();\n                    break;\n                case 5:\n                    message.disableExposureLogging = reader.bool();\n                    break;\n                case 13:\n                    message.enableDebug = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetAbConfigValuesRequest>, I>>(object: I): GetAbConfigValuesRequest {\n        const message = createBaseGetAbConfigValuesRequest();\n        message.configNames = object.configNames?.map((e) => e) || [];\n        message.namespaces = object.namespaces?.map((e) => e) || [];\n        message.cofConfigNames = object.cofConfigNames?.map((e) => e) || [];\n        message.includeAllConfigs = object.includeAllConfigs ?? false;\n        message.disableExposureLogging = object.disableExposureLogging ?? false;\n        message.enableDebug = object.enableDebug ?? false;\n        return message;\n    },\n};\nfunction createBaseGetAbConfigValuesResponse(): GetAbConfigValuesResponse {\n    return { configResults: [], debugTrace: undefined };\n}\nexport const GetAbConfigValuesResponse = {\n    encode(message: GetAbConfigValuesResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.debugTrace !== undefined) {\n            DebugTrace.encode(message.debugTrace, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetAbConfigValuesResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetAbConfigValuesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.debugTrace = DebugTrace.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetAbConfigValuesResponse>, I>>(object: I): GetAbConfigValuesResponse {\n        const message = createBaseGetAbConfigValuesResponse();\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        message.debugTrace =\n            object.debugTrace !== undefined && object.debugTrace !== null\n                ? DebugTrace.fromPartial(object.debugTrace)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseConfigSetGenerationRequest(): ConfigSetGenerationRequest {\n    return { targetingParameters: undefined, overrides: [] };\n}\nexport const ConfigSetGenerationRequest = {\n    encode(message: ConfigSetGenerationRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.targetingParameters !== undefined) {\n            ConfigTargetingRequest.encode(message.targetingParameters, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.overrides) {\n            ConfigResult.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigSetGenerationRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigSetGenerationRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.targetingParameters = ConfigTargetingRequest.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.overrides.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigSetGenerationRequest>, I>>(object: I): ConfigSetGenerationRequest {\n        const message = createBaseConfigSetGenerationRequest();\n        message.targetingParameters =\n            object.targetingParameters !== undefined && object.targetingParameters !== null\n                ? ConfigTargetingRequest.fromPartial(object.targetingParameters)\n                : undefined;\n        message.overrides = object.overrides?.map((e) => ConfigResult.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseConfigSetGenerationResponse(): ConfigSetGenerationResponse {\n    return { targetingResponse: undefined };\n}\nexport const ConfigSetGenerationResponse = {\n    encode(message: ConfigSetGenerationResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.targetingResponse !== undefined) {\n            ConfigTargetingResponse.encode(message.targetingResponse, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigSetGenerationResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigSetGenerationResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.targetingResponse = ConfigTargetingResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigSetGenerationResponse>, I>>(object: I): ConfigSetGenerationResponse {\n        const message = createBaseConfigSetGenerationResponse();\n        message.targetingResponse =\n            object.targetingResponse !== undefined && object.targetingResponse !== null\n                ? ConfigTargetingResponse.fromPartial(object.targetingResponse)\n                : undefined;\n        return message;\n    },\n};\nfunction createBasePinConfigRequest(): PinConfigRequest {\n    return { configSetToken: \"\", userId: \"\", ttlSeconds: 0 };\n}\nexport const PinConfigRequest = {\n    encode(message: PinConfigRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configSetToken !== \"\") {\n            writer.uint32(10).string(message.configSetToken);\n        }\n        if (message.userId !== \"\") {\n            writer.uint32(18).string(message.userId);\n        }\n        if (message.ttlSeconds !== 0) {\n            writer.uint32(24).int32(message.ttlSeconds);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PinConfigRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePinConfigRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configSetToken = reader.string();\n                    break;\n                case 2:\n                    message.userId = reader.string();\n                    break;\n                case 3:\n                    message.ttlSeconds = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PinConfigRequest>, I>>(object: I): PinConfigRequest {\n        const message = createBasePinConfigRequest();\n        message.configSetToken = object.configSetToken ?? \"\";\n        message.userId = object.userId ?? \"\";\n        message.ttlSeconds = object.ttlSeconds ?? 0;\n        return message;\n    },\n};\nfunction createBasePinConfigResponse(): PinConfigResponse {\n    return { debug: \"\" };\n}\nexport const PinConfigResponse = {\n    encode(message: PinConfigResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.debug !== \"\") {\n            writer.uint32(10).string(message.debug);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PinConfigResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePinConfigResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.debug = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PinConfigResponse>, I>>(object: I): PinConfigResponse {\n        const message = createBasePinConfigResponse();\n        message.debug = object.debug ?? \"\";\n        return message;\n    },\n};\nfunction createBaseUnpinConfigRequest(): UnpinConfigRequest {\n    return { configSetToken: \"\", userId: \"\" };\n}\nexport const UnpinConfigRequest = {\n    encode(message: UnpinConfigRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configSetToken !== \"\") {\n            writer.uint32(10).string(message.configSetToken);\n        }\n        if (message.userId !== \"\") {\n            writer.uint32(18).string(message.userId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UnpinConfigRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUnpinConfigRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configSetToken = reader.string();\n                    break;\n                case 2:\n                    message.userId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UnpinConfigRequest>, I>>(object: I): UnpinConfigRequest {\n        const message = createBaseUnpinConfigRequest();\n        message.configSetToken = object.configSetToken ?? \"\";\n        message.userId = object.userId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseUnpinConfigResponse(): UnpinConfigResponse {\n    return { debug: \"\" };\n}\nexport const UnpinConfigResponse = {\n    encode(message: UnpinConfigResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.debug !== \"\") {\n            writer.uint32(10).string(message.debug);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UnpinConfigResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUnpinConfigResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.debug = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UnpinConfigResponse>, I>>(object: I): UnpinConfigResponse {\n        const message = createBaseUnpinConfigResponse();\n        message.debug = object.debug ?? \"\";\n        return message;\n    },\n};\nfunction createBaseConfigWithNamespace(): ConfigWithNamespace {\n    return { configName: \"\", namespace: 0 };\n}\nexport const ConfigWithNamespace = {\n    encode(message: ConfigWithNamespace, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configName !== \"\") {\n            writer.uint32(10).string(message.configName);\n        }\n        if (message.namespace !== 0) {\n            writer.uint32(16).int32(message.namespace);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigWithNamespace {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigWithNamespace();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configName = reader.string();\n                    break;\n                case 2:\n                    message.namespace = reader.int32() as any;\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigWithNamespace>, I>>(object: I): ConfigWithNamespace {\n        const message = createBaseConfigWithNamespace();\n        message.configName = object.configName ?? \"\";\n        message.namespace = object.namespace ?? 0;\n        return message;\n    },\n};\nfunction createBaseGetConfigValuesByTokenRequest(): GetConfigValuesByTokenRequest {\n    return { token: \"\", configNames: [], namespaces: [], disableExposureLogging: false, getAllConfigs: false };\n}\nexport const GetConfigValuesByTokenRequest = {\n    encode(message: GetConfigValuesByTokenRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.token !== \"\") {\n            writer.uint32(10).string(message.token);\n        }\n        for (const v of message.configNames) {\n            ConfigWithNamespace.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        writer.uint32(26).fork();\n        for (const v of message.namespaces) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.disableExposureLogging === true) {\n            writer.uint32(32).bool(message.disableExposureLogging);\n        }\n        if (message.getAllConfigs === true) {\n            writer.uint32(40).bool(message.getAllConfigs);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigValuesByTokenRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetConfigValuesByTokenRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.token = reader.string();\n                    break;\n                case 2:\n                    message.configNames.push(ConfigWithNamespace.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.namespaces.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.namespaces.push(reader.int32() as any);\n                    }\n                    break;\n                case 4:\n                    message.disableExposureLogging = reader.bool();\n                    break;\n                case 5:\n                    message.getAllConfigs = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetConfigValuesByTokenRequest>, I>>(object: I): GetConfigValuesByTokenRequest {\n        const message = createBaseGetConfigValuesByTokenRequest();\n        message.token = object.token ?? \"\";\n        message.configNames = object.configNames?.map((e) => ConfigWithNamespace.fromPartial(e)) || [];\n        message.namespaces = object.namespaces?.map((e) => e) || [];\n        message.disableExposureLogging = object.disableExposureLogging ?? false;\n        message.getAllConfigs = object.getAllConfigs ?? false;\n        return message;\n    },\n};\nfunction createBaseGetConfigValuesByTokenResponse(): GetConfigValuesByTokenResponse {\n    return { configResults: [] };\n}\nexport const GetConfigValuesByTokenResponse = {\n    encode(message: GetConfigValuesByTokenResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigValuesByTokenResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetConfigValuesByTokenResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetConfigValuesByTokenResponse>, I>>(object: I): GetConfigValuesByTokenResponse {\n        const message = createBaseGetConfigValuesByTokenResponse();\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseGetCachedConfigResultSequenceIdsRequest(): GetCachedConfigResultSequenceIdsRequest {\n    return {};\n}\nexport const GetCachedConfigResultSequenceIdsRequest = {\n    encode(_: GetCachedConfigResultSequenceIdsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetCachedConfigResultSequenceIdsRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetCachedConfigResultSequenceIdsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetCachedConfigResultSequenceIdsRequest>, I>>(_: I): GetCachedConfigResultSequenceIdsRequest {\n        const message = createBaseGetCachedConfigResultSequenceIdsRequest();\n        return message;\n    },\n};\nfunction createBaseGetCachedConfigResultSequenceIdsResponse(): GetCachedConfigResultSequenceIdsResponse {\n    return { serializedBitmap: new Uint8Array() };\n}\nexport const GetCachedConfigResultSequenceIdsResponse = {\n    encode(message: GetCachedConfigResultSequenceIdsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.serializedBitmap.length !== 0) {\n            writer.uint32(10).bytes(message.serializedBitmap);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetCachedConfigResultSequenceIdsResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetCachedConfigResultSequenceIdsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.serializedBitmap = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetCachedConfigResultSequenceIdsResponse>, I>>(object: I): GetCachedConfigResultSequenceIdsResponse {\n        const message = createBaseGetCachedConfigResultSequenceIdsResponse();\n        message.serializedBitmap = object.serializedBitmap ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseGetConfigResultsBySequenceIdsRequest(): GetConfigResultsBySequenceIdsRequest {\n    return { sequenceIds: [] };\n}\nexport const GetConfigResultsBySequenceIdsRequest = {\n    encode(message: GetConfigResultsBySequenceIdsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        writer.uint32(10).fork();\n        for (const v of message.sequenceIds) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigResultsBySequenceIdsRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetConfigResultsBySequenceIdsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.sequenceIds.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.sequenceIds.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetConfigResultsBySequenceIdsRequest>, I>>(object: I): GetConfigResultsBySequenceIdsRequest {\n        const message = createBaseGetConfigResultsBySequenceIdsRequest();\n        message.sequenceIds = object.sequenceIds?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseConfigResultWithSequenceId(): ConfigResultWithSequenceId {\n    return { sequenceId: 0, configResult: undefined };\n}\nexport const ConfigResultWithSequenceId = {\n    encode(message: ConfigResultWithSequenceId, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.sequenceId !== 0) {\n            writer.uint32(8).int32(message.sequenceId);\n        }\n        if (message.configResult !== undefined) {\n            ConfigResult.encode(message.configResult, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResultWithSequenceId {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigResultWithSequenceId();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequenceId = reader.int32();\n                    break;\n                case 2:\n                    message.configResult = ConfigResult.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigResultWithSequenceId>, I>>(object: I): ConfigResultWithSequenceId {\n        const message = createBaseConfigResultWithSequenceId();\n        message.sequenceId = object.sequenceId ?? 0;\n        message.configResult =\n            object.configResult !== undefined && object.configResult !== null\n                ? ConfigResult.fromPartial(object.configResult)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseGetConfigResultsBySequenceIdsResponse(): GetConfigResultsBySequenceIdsResponse {\n    return { configResultWithSequenceIds: [] };\n}\nexport const GetConfigResultsBySequenceIdsResponse = {\n    encode(message: GetConfigResultsBySequenceIdsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResultWithSequenceIds) {\n            ConfigResultWithSequenceId.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigResultsBySequenceIdsResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetConfigResultsBySequenceIdsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResultWithSequenceIds.push(ConfigResultWithSequenceId.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetConfigResultsBySequenceIdsResponse>, I>>(object: I): GetConfigResultsBySequenceIdsResponse {\n        const message = createBaseGetConfigResultsBySequenceIdsResponse();\n        message.configResultWithSequenceIds =\n            object.configResultWithSequenceIds?.map((e) => ConfigResultWithSequenceId.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseGetBitmapByTokenRequest(): GetBitmapByTokenRequest {\n    return { token: \"\" };\n}\nexport const GetBitmapByTokenRequest = {\n    encode(message: GetBitmapByTokenRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.token !== \"\") {\n            writer.uint32(10).string(message.token);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetBitmapByTokenRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetBitmapByTokenRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.token = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetBitmapByTokenRequest>, I>>(object: I): GetBitmapByTokenRequest {\n        const message = createBaseGetBitmapByTokenRequest();\n        message.token = object.token ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetBitmapByTokenResponse(): GetBitmapByTokenResponse {\n    return { idBitmap: new Uint8Array() };\n}\nexport const GetBitmapByTokenResponse = {\n    encode(message: GetBitmapByTokenResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.idBitmap.length !== 0) {\n            writer.uint32(10).bytes(message.idBitmap);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetBitmapByTokenResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetBitmapByTokenResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.idBitmap = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetBitmapByTokenResponse>, I>>(object: I): GetBitmapByTokenResponse {\n        const message = createBaseGetBitmapByTokenResponse();\n        message.idBitmap = object.idBitmap ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseGetUnevaluatedConfigResultsWithAbTargetingRequest(): GetUnevaluatedConfigResultsWithAbTargetingRequest {\n    return { namespaces: [], edgeConfigClientVersion: \"\" };\n}\nexport const GetUnevaluatedConfigResultsWithAbTargetingRequest = {\n    encode(message: GetUnevaluatedConfigResultsWithAbTargetingRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        writer.uint32(10).fork();\n        for (const v of message.namespaces) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.edgeConfigClientVersion !== \"\") {\n            writer.uint32(18).string(message.edgeConfigClientVersion);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetUnevaluatedConfigResultsWithAbTargetingRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.namespaces.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.namespaces.push(reader.int32() as any);\n                    }\n                    break;\n                case 2:\n                    message.edgeConfigClientVersion = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingRequest>, I>>(object: I): GetUnevaluatedConfigResultsWithAbTargetingRequest {\n        const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingRequest();\n        message.namespaces = object.namespaces?.map((e) => e) || [];\n        message.edgeConfigClientVersion = object.edgeConfigClientVersion ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetUnevaluatedConfigResultsWithAbTargetingResponse(): GetUnevaluatedConfigResultsWithAbTargetingResponse {\n    return { configResults: [] };\n}\nexport const GetUnevaluatedConfigResultsWithAbTargetingResponse = {\n    encode(message: GetUnevaluatedConfigResultsWithAbTargetingResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetUnevaluatedConfigResultsWithAbTargetingResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingResponse>, I>>(object: I): GetUnevaluatedConfigResultsWithAbTargetingResponse {\n        const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingResponse();\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseAddRuidsForDebuggingRequest(): AddRuidsForDebuggingRequest {\n    return { ruids: [], configNames: [], maxSnapshots: 0 };\n}\nexport const AddRuidsForDebuggingRequest = {\n    encode(message: AddRuidsForDebuggingRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.ruids) {\n            Ruid.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.configNames) {\n            writer.uint32(18).string(v!);\n        }\n        if (message.maxSnapshots !== 0) {\n            writer.uint32(24).int32(message.maxSnapshots);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): AddRuidsForDebuggingRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAddRuidsForDebuggingRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ruids.push(Ruid.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.configNames.push(reader.string());\n                    break;\n                case 3:\n                    message.maxSnapshots = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<AddRuidsForDebuggingRequest>, I>>(object: I): AddRuidsForDebuggingRequest {\n        const message = createBaseAddRuidsForDebuggingRequest();\n        message.ruids = object.ruids?.map((e) => Ruid.fromPartial(e)) || [];\n        message.configNames = object.configNames?.map((e) => e) || [];\n        message.maxSnapshots = object.maxSnapshots ?? 0;\n        return message;\n    },\n};\nfunction createBaseAddRuidsForDebuggingResponse(): AddRuidsForDebuggingResponse {\n    return {};\n}\nexport const AddRuidsForDebuggingResponse = {\n    encode(_: AddRuidsForDebuggingResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): AddRuidsForDebuggingResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAddRuidsForDebuggingResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<AddRuidsForDebuggingResponse>, I>>(_: I): AddRuidsForDebuggingResponse {\n        const message = createBaseAddRuidsForDebuggingResponse();\n        return message;\n    },\n};\nexport interface CircumstancesService {\n    targetingQuery(request: DeepPartial<ConfigTargetingRequest>, metadata?: grpc.Metadata): Promise<ConfigTargetingResponse>;\n    getAbConfigValues(request: DeepPartial<GetAbConfigValuesRequest>, metadata?: grpc.Metadata): Promise<GetAbConfigValuesResponse>;\n    getConfigValuesByToken(request: DeepPartial<GetConfigValuesByTokenRequest>, metadata?: grpc.Metadata): Promise<GetConfigValuesByTokenResponse>;\n    getConfigResultsBySequenceIds(request: DeepPartial<GetConfigResultsBySequenceIdsRequest>, metadata?: grpc.Metadata): Promise<GetConfigResultsBySequenceIdsResponse>;\n    getCachedConfigResultSequenceIds(request: DeepPartial<GetCachedConfigResultSequenceIdsRequest>, metadata?: grpc.Metadata): Promise<GetCachedConfigResultSequenceIdsResponse>;\n    getBitmapByToken(request: DeepPartial<GetBitmapByTokenRequest>, metadata?: grpc.Metadata): Promise<GetBitmapByTokenResponse>;\n    generateConfigSet(request: DeepPartial<ConfigSetGenerationRequest>, metadata?: grpc.Metadata): Promise<ConfigSetGenerationResponse>;\n    pinConfigSet(request: DeepPartial<PinConfigRequest>, metadata?: grpc.Metadata): Promise<PinConfigResponse>;\n    unpinConfigSet(request: DeepPartial<UnpinConfigRequest>, metadata?: grpc.Metadata): Promise<UnpinConfigResponse>;\n    getUnevaluatedConfigResultsWithAbTargeting(request: DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingRequest>, metadata?: grpc.Metadata): Promise<GetUnevaluatedConfigResultsWithAbTargetingResponse>;\n    addRuidsForDebugging(request: DeepPartial<AddRuidsForDebuggingRequest>, metadata?: grpc.Metadata): Promise<AddRuidsForDebuggingResponse>;\n}\nexport class CircumstancesServiceClientImpl implements CircumstancesService {\n    private readonly rpc: Rpc;\n    constructor(rpc: Rpc) {\n        this.rpc = rpc;\n        this.targetingQuery = this.targetingQuery.bind(this);\n        this.getAbConfigValues = this.getAbConfigValues.bind(this);\n        this.getConfigValuesByToken = this.getConfigValuesByToken.bind(this);\n        this.getConfigResultsBySequenceIds = this.getConfigResultsBySequenceIds.bind(this);\n        this.getCachedConfigResultSequenceIds = this.getCachedConfigResultSequenceIds.bind(this);\n        this.getBitmapByToken = this.getBitmapByToken.bind(this);\n        this.generateConfigSet = this.generateConfigSet.bind(this);\n        this.pinConfigSet = this.pinConfigSet.bind(this);\n        this.unpinConfigSet = this.unpinConfigSet.bind(this);\n        this.getUnevaluatedConfigResultsWithAbTargeting = this.getUnevaluatedConfigResultsWithAbTargeting.bind(this);\n        this.addRuidsForDebugging = this.addRuidsForDebugging.bind(this);\n    }\n    targetingQuery(request: DeepPartial<ConfigTargetingRequest>, metadata?: grpc.Metadata): Promise<ConfigTargetingResponse> {\n        return this.rpc.unary(CircumstancesServicetargetingQueryDesc, ConfigTargetingRequest.fromPartial(request), metadata);\n    }\n    getAbConfigValues(request: DeepPartial<GetAbConfigValuesRequest>, metadata?: grpc.Metadata): Promise<GetAbConfigValuesResponse> {\n        return this.rpc.unary(CircumstancesServicegetAbConfigValuesDesc, GetAbConfigValuesRequest.fromPartial(request), metadata);\n    }\n    getConfigValuesByToken(request: DeepPartial<GetConfigValuesByTokenRequest>, metadata?: grpc.Metadata): Promise<GetConfigValuesByTokenResponse> {\n        return this.rpc.unary(CircumstancesServicegetConfigValuesByTokenDesc, GetConfigValuesByTokenRequest.fromPartial(request), metadata);\n    }\n    getConfigResultsBySequenceIds(request: DeepPartial<GetConfigResultsBySequenceIdsRequest>, metadata?: grpc.Metadata): Promise<GetConfigResultsBySequenceIdsResponse> {\n        return this.rpc.unary(CircumstancesServicegetConfigResultsBySequenceIdsDesc, GetConfigResultsBySequenceIdsRequest.fromPartial(request), metadata);\n    }\n    getCachedConfigResultSequenceIds(request: DeepPartial<GetCachedConfigResultSequenceIdsRequest>, metadata?: grpc.Metadata): Promise<GetCachedConfigResultSequenceIdsResponse> {\n        return this.rpc.unary(CircumstancesServicegetCachedConfigResultSequenceIdsDesc, GetCachedConfigResultSequenceIdsRequest.fromPartial(request), metadata);\n    }\n    getBitmapByToken(request: DeepPartial<GetBitmapByTokenRequest>, metadata?: grpc.Metadata): Promise<GetBitmapByTokenResponse> {\n        return this.rpc.unary(CircumstancesServicegetBitmapByTokenDesc, GetBitmapByTokenRequest.fromPartial(request), metadata);\n    }\n    generateConfigSet(request: DeepPartial<ConfigSetGenerationRequest>, metadata?: grpc.Metadata): Promise<ConfigSetGenerationResponse> {\n        return this.rpc.unary(CircumstancesServicegenerateConfigSetDesc, ConfigSetGenerationRequest.fromPartial(request), metadata);\n    }\n    pinConfigSet(request: DeepPartial<PinConfigRequest>, metadata?: grpc.Metadata): Promise<PinConfigResponse> {\n        return this.rpc.unary(CircumstancesServicepinConfigSetDesc, PinConfigRequest.fromPartial(request), metadata);\n    }\n    unpinConfigSet(request: DeepPartial<UnpinConfigRequest>, metadata?: grpc.Metadata): Promise<UnpinConfigResponse> {\n        return this.rpc.unary(CircumstancesServiceunpinConfigSetDesc, UnpinConfigRequest.fromPartial(request), metadata);\n    }\n    getUnevaluatedConfigResultsWithAbTargeting(request: DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingRequest>, metadata?: grpc.Metadata): Promise<GetUnevaluatedConfigResultsWithAbTargetingResponse> {\n        return this.rpc.unary(CircumstancesServicegetUnevaluatedConfigResultsWithAbTargetingDesc, GetUnevaluatedConfigResultsWithAbTargetingRequest.fromPartial(request), metadata);\n    }\n    addRuidsForDebugging(request: DeepPartial<AddRuidsForDebuggingRequest>, metadata?: grpc.Metadata): Promise<AddRuidsForDebuggingResponse> {\n        return this.rpc.unary(CircumstancesServiceaddRuidsForDebuggingDesc, AddRuidsForDebuggingRequest.fromPartial(request), metadata);\n    }\n}\nexport const CircumstancesServiceDesc = {\n    serviceName: \"snapchat.cdp.cof.CircumstancesService\",\n};\nexport const CircumstancesServicetargetingQueryDesc: UnaryMethodDefinitionish = {\n    methodName: \"targetingQuery\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return ConfigTargetingRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...ConfigTargetingResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetAbConfigValuesDesc: UnaryMethodDefinitionish = {\n    methodName: \"getAbConfigValues\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetAbConfigValuesRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetAbConfigValuesResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetConfigValuesByTokenDesc: UnaryMethodDefinitionish = {\n    methodName: \"getConfigValuesByToken\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetConfigValuesByTokenRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetConfigValuesByTokenResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetConfigResultsBySequenceIdsDesc: UnaryMethodDefinitionish = {\n    methodName: \"getConfigResultsBySequenceIds\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetConfigResultsBySequenceIdsRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetConfigResultsBySequenceIdsResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetCachedConfigResultSequenceIdsDesc: UnaryMethodDefinitionish = {\n    methodName: \"getCachedConfigResultSequenceIds\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetCachedConfigResultSequenceIdsRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetCachedConfigResultSequenceIdsResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetBitmapByTokenDesc: UnaryMethodDefinitionish = {\n    methodName: \"getBitmapByToken\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetBitmapByTokenRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetBitmapByTokenResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegenerateConfigSetDesc: UnaryMethodDefinitionish = {\n    methodName: \"generateConfigSet\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return ConfigSetGenerationRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...ConfigSetGenerationResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicepinConfigSetDesc: UnaryMethodDefinitionish = {\n    methodName: \"pinConfigSet\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return PinConfigRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...PinConfigResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServiceunpinConfigSetDesc: UnaryMethodDefinitionish = {\n    methodName: \"unpinConfigSet\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return UnpinConfigRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...UnpinConfigResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetUnevaluatedConfigResultsWithAbTargetingDesc: UnaryMethodDefinitionish = {\n    methodName: \"getUnevaluatedConfigResultsWithAbTargeting\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetUnevaluatedConfigResultsWithAbTargetingRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetUnevaluatedConfigResultsWithAbTargetingResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServiceaddRuidsForDebuggingDesc: UnaryMethodDefinitionish = {\n    methodName: \"addRuidsForDebugging\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return AddRuidsForDebuggingRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...AddRuidsForDebuggingResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\ninterface UnaryMethodDefinitionishR extends grpc.UnaryMethodDefinition<any, any> {\n    requestStream: any;\n    responseStream: any;\n}\ntype UnaryMethodDefinitionish = UnaryMethodDefinitionishR;\ninterface Rpc {\n    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, request: any, metadata: grpc.Metadata | undefined): Promise<any>;\n}\nexport class GrpcWebImpl {\n    private host: string;\n    private options: {\n        transport?: grpc.TransportFactory;\n        debug?: boolean;\n        metadata?: grpc.Metadata;\n    };\n    constructor(host: string, options: {\n        transport?: grpc.TransportFactory;\n        debug?: boolean;\n        metadata?: grpc.Metadata;\n    }) {\n        this.host = host;\n        this.options = options;\n    }\n    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, _request: any, metadata: grpc.Metadata | undefined): Promise<any> {\n        const request = { ..._request, ...methodDesc.requestType };\n        const maybeCombinedMetadata = metadata && this.options.metadata\n            ? new BrowserHeaders({ ...this.options?.metadata.headersMap, ...metadata?.headersMap })\n            : metadata || this.options.metadata;\n        return new Promise((resolve, reject) => {\n            grpc.unary(methodDesc, {\n                request,\n                host: this.host,\n                metadata: maybeCombinedMetadata,\n                transport: this.options.transport,\n                debug: this.options.debug,\n                onEnd: function (response) {\n                    if (response.status === grpc.Code.OK) {\n                        resolve(response.message);\n                    }\n                    else {\n                        const err = new Error(response.statusMessage) as any;\n                        err.code = response.status;\n                        err.metadata = response.trailers;\n                        reject(err);\n                    }\n                },\n            });\n        });\n    }\n}\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n"]}