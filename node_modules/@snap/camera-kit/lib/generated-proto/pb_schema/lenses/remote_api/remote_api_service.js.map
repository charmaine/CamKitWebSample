{"version":3,"file":"remote_api_service.js","sourceRoot":"","sources":["../../../../../src/generated-proto/pb_schema/lenses/remote_api/remote_api_service.ts"],"names":[],"mappings":"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","sourcesContent":["import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport enum HttpRequestMethod {\n    HTTP_METHOD_UNSET = \"HTTP_METHOD_UNSET\",\n    HTTP_METHOD_GET = \"HTTP_METHOD_GET\",\n    HTTP_METHOD_POST = \"HTTP_METHOD_POST\",\n    HTTP_METHOD_PUT = \"HTTP_METHOD_PUT\",\n    HTTP_METHOD_DELETE = \"HTTP_METHOD_DELETE\",\n    HTTP_METHOD_PATCH = \"HTTP_METHOD_PATCH\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function httpRequestMethodFromJSON(object: any): HttpRequestMethod {\n    switch (object) {\n        case 0:\n        case \"HTTP_METHOD_UNSET\":\n            return HttpRequestMethod.HTTP_METHOD_UNSET;\n        case 1:\n        case \"HTTP_METHOD_GET\":\n            return HttpRequestMethod.HTTP_METHOD_GET;\n        case 2:\n        case \"HTTP_METHOD_POST\":\n            return HttpRequestMethod.HTTP_METHOD_POST;\n        case 3:\n        case \"HTTP_METHOD_PUT\":\n            return HttpRequestMethod.HTTP_METHOD_PUT;\n        case 4:\n        case \"HTTP_METHOD_DELETE\":\n            return HttpRequestMethod.HTTP_METHOD_DELETE;\n        case 5:\n        case \"HTTP_METHOD_PATCH\":\n            return HttpRequestMethod.HTTP_METHOD_PATCH;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HttpRequestMethod.UNRECOGNIZED;\n    }\n}\nexport function httpRequestMethodToNumber(object: HttpRequestMethod): number {\n    switch (object) {\n        case HttpRequestMethod.HTTP_METHOD_UNSET:\n            return 0;\n        case HttpRequestMethod.HTTP_METHOD_GET:\n            return 1;\n        case HttpRequestMethod.HTTP_METHOD_POST:\n            return 2;\n        case HttpRequestMethod.HTTP_METHOD_PUT:\n            return 3;\n        case HttpRequestMethod.HTTP_METHOD_DELETE:\n            return 4;\n        case HttpRequestMethod.HTTP_METHOD_PATCH:\n            return 5;\n        default:\n            return 0;\n    }\n}\nexport enum ResponseCode {\n    RESPONSE_CODE_UNSET = \"RESPONSE_CODE_UNSET\",\n    SUCCESS = \"SUCCESS\",\n    REDIRECTED = \"REDIRECTED\",\n    BAD_REQUEST = \"BAD_REQUEST\",\n    ACCESS_DENIED = \"ACCESS_DENIED\",\n    NOT_FOUND = \"NOT_FOUND\",\n    TIMEOUT = \"TIMEOUT\",\n    REQUEST_TOO_LARGE = \"REQUEST_TOO_LARGE\",\n    SERVER_ERROR = \"SERVER_ERROR\",\n    CANCELLED = \"CANCELLED\",\n    PROXY_ERROR = \"PROXY_ERROR\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function responseCodeFromJSON(object: any): ResponseCode {\n    switch (object) {\n        case 0:\n        case \"RESPONSE_CODE_UNSET\":\n            return ResponseCode.RESPONSE_CODE_UNSET;\n        case 1:\n        case \"SUCCESS\":\n            return ResponseCode.SUCCESS;\n        case 2:\n        case \"REDIRECTED\":\n            return ResponseCode.REDIRECTED;\n        case 3:\n        case \"BAD_REQUEST\":\n            return ResponseCode.BAD_REQUEST;\n        case 4:\n        case \"ACCESS_DENIED\":\n            return ResponseCode.ACCESS_DENIED;\n        case 5:\n        case \"NOT_FOUND\":\n            return ResponseCode.NOT_FOUND;\n        case 6:\n        case \"TIMEOUT\":\n            return ResponseCode.TIMEOUT;\n        case 7:\n        case \"REQUEST_TOO_LARGE\":\n            return ResponseCode.REQUEST_TOO_LARGE;\n        case 8:\n        case \"SERVER_ERROR\":\n            return ResponseCode.SERVER_ERROR;\n        case 9:\n        case \"CANCELLED\":\n            return ResponseCode.CANCELLED;\n        case 10:\n        case \"PROXY_ERROR\":\n            return ResponseCode.PROXY_ERROR;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseCode.UNRECOGNIZED;\n    }\n}\nexport function responseCodeToNumber(object: ResponseCode): number {\n    switch (object) {\n        case ResponseCode.RESPONSE_CODE_UNSET:\n            return 0;\n        case ResponseCode.SUCCESS:\n            return 1;\n        case ResponseCode.REDIRECTED:\n            return 2;\n        case ResponseCode.BAD_REQUEST:\n            return 3;\n        case ResponseCode.ACCESS_DENIED:\n            return 4;\n        case ResponseCode.NOT_FOUND:\n            return 5;\n        case ResponseCode.TIMEOUT:\n            return 6;\n        case ResponseCode.REQUEST_TOO_LARGE:\n            return 7;\n        case ResponseCode.SERVER_ERROR:\n            return 8;\n        case ResponseCode.CANCELLED:\n            return 9;\n        case ResponseCode.PROXY_ERROR:\n            return 10;\n        default:\n            return 0;\n    }\n}\nexport interface PerformHttpCallRequest {\n    url: string;\n    method: HttpRequestMethod;\n    headers: {\n        [key: string]: string;\n    };\n    body: Uint8Array;\n    apiSpecId: string;\n    isStudioDev: boolean;\n}\nexport interface PerformHttpCallRequest_HeadersEntry {\n    key: string;\n    value: string;\n}\nexport interface PerformHttpCallResponse {\n    code: number;\n    headers: {\n        [key: string]: string;\n    };\n    body: Uint8Array;\n}\nexport interface PerformHttpCallResponse_HeadersEntry {\n    key: string;\n    value: string;\n}\nexport interface GetOAuth2InfoRequest {\n    apiSpecId: string;\n}\nexport interface GetOAuth2InfoResponse {\n    clientId: string;\n    grantType: GetOAuth2InfoResponse_GrantType;\n    authorizationUrl: string;\n    scope: string;\n}\nexport enum GetOAuth2InfoResponse_GrantType {\n    GRANT_TYPE_UNSET = \"GRANT_TYPE_UNSET\",\n    AUTHORIZATION_CODE = \"AUTHORIZATION_CODE\",\n    AUTHORIZATION_CODE_WITH_PKCE = \"AUTHORIZATION_CODE_WITH_PKCE\",\n    IMPLICIT = \"IMPLICIT\",\n    CLIENT_CREDENTIALS = \"CLIENT_CREDENTIALS\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function getOAuth2InfoResponse_GrantTypeFromJSON(object: any): GetOAuth2InfoResponse_GrantType {\n    switch (object) {\n        case 0:\n        case \"GRANT_TYPE_UNSET\":\n            return GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET;\n        case 1:\n        case \"AUTHORIZATION_CODE\":\n            return GetOAuth2InfoResponse_GrantType.AUTHORIZATION_CODE;\n        case 2:\n        case \"AUTHORIZATION_CODE_WITH_PKCE\":\n            return GetOAuth2InfoResponse_GrantType.AUTHORIZATION_CODE_WITH_PKCE;\n        case 3:\n        case \"IMPLICIT\":\n            return GetOAuth2InfoResponse_GrantType.IMPLICIT;\n        case 4:\n        case \"CLIENT_CREDENTIALS\":\n            return GetOAuth2InfoResponse_GrantType.CLIENT_CREDENTIALS;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return GetOAuth2InfoResponse_GrantType.UNRECOGNIZED;\n    }\n}\nexport function getOAuth2InfoResponse_GrantTypeToNumber(object: GetOAuth2InfoResponse_GrantType): number {\n    switch (object) {\n        case GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET:\n            return 0;\n        case GetOAuth2InfoResponse_GrantType.AUTHORIZATION_CODE:\n            return 1;\n        case GetOAuth2InfoResponse_GrantType.AUTHORIZATION_CODE_WITH_PKCE:\n            return 2;\n        case GetOAuth2InfoResponse_GrantType.IMPLICIT:\n            return 3;\n        case GetOAuth2InfoResponse_GrantType.CLIENT_CREDENTIALS:\n            return 4;\n        default:\n            return 0;\n    }\n}\nexport interface TokenExchangeError {\n    error: TokenExchangeError_TokenExchangeErrorType;\n    errorDescription: string;\n}\nexport enum TokenExchangeError_TokenExchangeErrorType {\n    ERROR_TYPE_UNSET = \"ERROR_TYPE_UNSET\",\n    INVALID_REQUEST = \"INVALID_REQUEST\",\n    INVALID_CLIENT = \"INVALID_CLIENT\",\n    INVALID_GRANT = \"INVALID_GRANT\",\n    UNAUTHORIZED_CLIENT = \"UNAUTHORIZED_CLIENT\",\n    UNSUPPORTED_GRANT_TYPE = \"UNSUPPORTED_GRANT_TYPE\",\n    INVALID_SCOPE = \"INVALID_SCOPE\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function tokenExchangeError_TokenExchangeErrorTypeFromJSON(object: any): TokenExchangeError_TokenExchangeErrorType {\n    switch (object) {\n        case 0:\n        case \"ERROR_TYPE_UNSET\":\n            return TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET;\n        case 1:\n        case \"INVALID_REQUEST\":\n            return TokenExchangeError_TokenExchangeErrorType.INVALID_REQUEST;\n        case 2:\n        case \"INVALID_CLIENT\":\n            return TokenExchangeError_TokenExchangeErrorType.INVALID_CLIENT;\n        case 3:\n        case \"INVALID_GRANT\":\n            return TokenExchangeError_TokenExchangeErrorType.INVALID_GRANT;\n        case 4:\n        case \"UNAUTHORIZED_CLIENT\":\n            return TokenExchangeError_TokenExchangeErrorType.UNAUTHORIZED_CLIENT;\n        case 5:\n        case \"UNSUPPORTED_GRANT_TYPE\":\n            return TokenExchangeError_TokenExchangeErrorType.UNSUPPORTED_GRANT_TYPE;\n        case 6:\n        case \"INVALID_SCOPE\":\n            return TokenExchangeError_TokenExchangeErrorType.INVALID_SCOPE;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return TokenExchangeError_TokenExchangeErrorType.UNRECOGNIZED;\n    }\n}\nexport function tokenExchangeError_TokenExchangeErrorTypeToNumber(object: TokenExchangeError_TokenExchangeErrorType): number {\n    switch (object) {\n        case TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET:\n            return 0;\n        case TokenExchangeError_TokenExchangeErrorType.INVALID_REQUEST:\n            return 1;\n        case TokenExchangeError_TokenExchangeErrorType.INVALID_CLIENT:\n            return 2;\n        case TokenExchangeError_TokenExchangeErrorType.INVALID_GRANT:\n            return 3;\n        case TokenExchangeError_TokenExchangeErrorType.UNAUTHORIZED_CLIENT:\n            return 4;\n        case TokenExchangeError_TokenExchangeErrorType.UNSUPPORTED_GRANT_TYPE:\n            return 5;\n        case TokenExchangeError_TokenExchangeErrorType.INVALID_SCOPE:\n            return 6;\n        default:\n            return 0;\n    }\n}\nexport interface TokenDetails {\n    accessToken: string;\n    tokenType: string;\n    expiresInSeconds: number;\n    refreshToken: string;\n    scope: string;\n}\nexport interface PerformTokenExchangeRequest {\n    apiSpecId: string;\n    authorizationCode: string;\n    codeVerifier: string;\n}\nexport interface PerformTokenExchangeResponse {\n    response?: {\n        $case: \"tokenDetails\";\n        tokenDetails: TokenDetails;\n    } | {\n        $case: \"error\";\n        error: TokenExchangeError;\n    };\n}\nexport interface RefreshTokenRequest {\n    apiSpecId: string;\n    refreshToken: string;\n}\nexport interface RefreshTokenResponse {\n    response?: {\n        $case: \"tokenDetails\";\n        tokenDetails: TokenDetails;\n    } | {\n        $case: \"error\";\n        error: TokenExchangeError;\n    };\n}\nexport interface PerformApiCallRequest {\n    apiSpecSetId: string;\n    endpointRefId: string;\n    parameters: {\n        [key: string]: string;\n    };\n    body: Uint8Array;\n    lensId: string;\n    isStudioDev: boolean;\n    cacheTtlSec: number;\n    linkedResources: LinkedResource[];\n}\nexport interface PerformApiCallRequest_ParametersEntry {\n    key: string;\n    value: string;\n}\nexport interface PerformApiCallResponse {\n    responseCode: ResponseCode;\n    metadata: {\n        [key: string]: string;\n    };\n    body: Uint8Array;\n    userLocationUsed: boolean;\n    linkedResources: LinkedResource[];\n}\nexport interface PerformApiCallResponse_MetadataEntry {\n    key: string;\n    value: string;\n}\nexport interface LinkedResource {\n    url: string;\n    encryptionKey: Uint8Array;\n}\nfunction createBasePerformHttpCallRequest(): PerformHttpCallRequest {\n    return {\n        url: \"\",\n        method: HttpRequestMethod.HTTP_METHOD_UNSET,\n        headers: {},\n        body: new Uint8Array(),\n        apiSpecId: \"\",\n        isStudioDev: false,\n    };\n}\nexport const PerformHttpCallRequest = {\n    encode(message: PerformHttpCallRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.url !== \"\") {\n            writer.uint32(10).string(message.url);\n        }\n        if (message.method !== HttpRequestMethod.HTTP_METHOD_UNSET) {\n            writer.uint32(16).int32(httpRequestMethodToNumber(message.method));\n        }\n        Object.entries(message.headers).forEach(([key, value]) => {\n            PerformHttpCallRequest_HeadersEntry.encode({ key: key as any, value }, writer.uint32(26).fork()).ldelim();\n        });\n        if (message.body.length !== 0) {\n            writer.uint32(34).bytes(message.body);\n        }\n        if (message.apiSpecId !== \"\") {\n            writer.uint32(42).string(message.apiSpecId);\n        }\n        if (message.isStudioDev === true) {\n            writer.uint32(48).bool(message.isStudioDev);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformHttpCallRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformHttpCallRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.url = reader.string();\n                    break;\n                case 2:\n                    message.method = httpRequestMethodFromJSON(reader.int32());\n                    break;\n                case 3:\n                    const entry3 = PerformHttpCallRequest_HeadersEntry.decode(reader, reader.uint32());\n                    if (entry3.value !== undefined) {\n                        message.headers[entry3.key] = entry3.value;\n                    }\n                    break;\n                case 4:\n                    message.body = reader.bytes();\n                    break;\n                case 5:\n                    message.apiSpecId = reader.string();\n                    break;\n                case 6:\n                    message.isStudioDev = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformHttpCallRequest>, I>>(object: I): PerformHttpCallRequest {\n        const message = createBasePerformHttpCallRequest();\n        message.url = object.url ?? \"\";\n        message.method = object.method ?? HttpRequestMethod.HTTP_METHOD_UNSET;\n        message.headers = Object.entries(object.headers ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.body = object.body ?? new Uint8Array();\n        message.apiSpecId = object.apiSpecId ?? \"\";\n        message.isStudioDev = object.isStudioDev ?? false;\n        return message;\n    },\n};\nfunction createBasePerformHttpCallRequest_HeadersEntry(): PerformHttpCallRequest_HeadersEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PerformHttpCallRequest_HeadersEntry = {\n    encode(message: PerformHttpCallRequest_HeadersEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformHttpCallRequest_HeadersEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformHttpCallRequest_HeadersEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformHttpCallRequest_HeadersEntry>, I>>(object: I): PerformHttpCallRequest_HeadersEntry {\n        const message = createBasePerformHttpCallRequest_HeadersEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBasePerformHttpCallResponse(): PerformHttpCallResponse {\n    return { code: 0, headers: {}, body: new Uint8Array() };\n}\nexport const PerformHttpCallResponse = {\n    encode(message: PerformHttpCallResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.code !== 0) {\n            writer.uint32(8).int32(message.code);\n        }\n        Object.entries(message.headers).forEach(([key, value]) => {\n            PerformHttpCallResponse_HeadersEntry.encode({ key: key as any, value }, writer.uint32(18).fork()).ldelim();\n        });\n        if (message.body.length !== 0) {\n            writer.uint32(26).bytes(message.body);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformHttpCallResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformHttpCallResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.int32();\n                    break;\n                case 2:\n                    const entry2 = PerformHttpCallResponse_HeadersEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.headers[entry2.key] = entry2.value;\n                    }\n                    break;\n                case 3:\n                    message.body = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformHttpCallResponse>, I>>(object: I): PerformHttpCallResponse {\n        const message = createBasePerformHttpCallResponse();\n        message.code = object.code ?? 0;\n        message.headers = Object.entries(object.headers ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.body = object.body ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBasePerformHttpCallResponse_HeadersEntry(): PerformHttpCallResponse_HeadersEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PerformHttpCallResponse_HeadersEntry = {\n    encode(message: PerformHttpCallResponse_HeadersEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformHttpCallResponse_HeadersEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformHttpCallResponse_HeadersEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformHttpCallResponse_HeadersEntry>, I>>(object: I): PerformHttpCallResponse_HeadersEntry {\n        const message = createBasePerformHttpCallResponse_HeadersEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetOAuth2InfoRequest(): GetOAuth2InfoRequest {\n    return { apiSpecId: \"\" };\n}\nexport const GetOAuth2InfoRequest = {\n    encode(message: GetOAuth2InfoRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.apiSpecId !== \"\") {\n            writer.uint32(10).string(message.apiSpecId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetOAuth2InfoRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetOAuth2InfoRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetOAuth2InfoRequest>, I>>(object: I): GetOAuth2InfoRequest {\n        const message = createBaseGetOAuth2InfoRequest();\n        message.apiSpecId = object.apiSpecId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetOAuth2InfoResponse(): GetOAuth2InfoResponse {\n    return { clientId: \"\", grantType: GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET, authorizationUrl: \"\", scope: \"\" };\n}\nexport const GetOAuth2InfoResponse = {\n    encode(message: GetOAuth2InfoResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.grantType !== GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET) {\n            writer.uint32(16).int32(getOAuth2InfoResponse_GrantTypeToNumber(message.grantType));\n        }\n        if (message.authorizationUrl !== \"\") {\n            writer.uint32(26).string(message.authorizationUrl);\n        }\n        if (message.scope !== \"\") {\n            writer.uint32(34).string(message.scope);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetOAuth2InfoResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetOAuth2InfoResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.grantType = getOAuth2InfoResponse_GrantTypeFromJSON(reader.int32());\n                    break;\n                case 3:\n                    message.authorizationUrl = reader.string();\n                    break;\n                case 4:\n                    message.scope = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetOAuth2InfoResponse>, I>>(object: I): GetOAuth2InfoResponse {\n        const message = createBaseGetOAuth2InfoResponse();\n        message.clientId = object.clientId ?? \"\";\n        message.grantType = object.grantType ?? GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET;\n        message.authorizationUrl = object.authorizationUrl ?? \"\";\n        message.scope = object.scope ?? \"\";\n        return message;\n    },\n};\nfunction createBaseTokenExchangeError(): TokenExchangeError {\n    return { error: TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET, errorDescription: \"\" };\n}\nexport const TokenExchangeError = {\n    encode(message: TokenExchangeError, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.error !== TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET) {\n            writer.uint32(8).int32(tokenExchangeError_TokenExchangeErrorTypeToNumber(message.error));\n        }\n        if (message.errorDescription !== \"\") {\n            writer.uint32(18).string(message.errorDescription);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): TokenExchangeError {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTokenExchangeError();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = tokenExchangeError_TokenExchangeErrorTypeFromJSON(reader.int32());\n                    break;\n                case 2:\n                    message.errorDescription = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<TokenExchangeError>, I>>(object: I): TokenExchangeError {\n        const message = createBaseTokenExchangeError();\n        message.error = object.error ?? TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET;\n        message.errorDescription = object.errorDescription ?? \"\";\n        return message;\n    },\n};\nfunction createBaseTokenDetails(): TokenDetails {\n    return { accessToken: \"\", tokenType: \"\", expiresInSeconds: 0, refreshToken: \"\", scope: \"\" };\n}\nexport const TokenDetails = {\n    encode(message: TokenDetails, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.accessToken !== \"\") {\n            writer.uint32(10).string(message.accessToken);\n        }\n        if (message.tokenType !== \"\") {\n            writer.uint32(18).string(message.tokenType);\n        }\n        if (message.expiresInSeconds !== 0) {\n            writer.uint32(24).int64(message.expiresInSeconds);\n        }\n        if (message.refreshToken !== \"\") {\n            writer.uint32(34).string(message.refreshToken);\n        }\n        if (message.scope !== \"\") {\n            writer.uint32(42).string(message.scope);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): TokenDetails {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTokenDetails();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accessToken = reader.string();\n                    break;\n                case 2:\n                    message.tokenType = reader.string();\n                    break;\n                case 3:\n                    message.expiresInSeconds = longToNumber(reader.int64() as Long);\n                    break;\n                case 4:\n                    message.refreshToken = reader.string();\n                    break;\n                case 5:\n                    message.scope = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<TokenDetails>, I>>(object: I): TokenDetails {\n        const message = createBaseTokenDetails();\n        message.accessToken = object.accessToken ?? \"\";\n        message.tokenType = object.tokenType ?? \"\";\n        message.expiresInSeconds = object.expiresInSeconds ?? 0;\n        message.refreshToken = object.refreshToken ?? \"\";\n        message.scope = object.scope ?? \"\";\n        return message;\n    },\n};\nfunction createBasePerformTokenExchangeRequest(): PerformTokenExchangeRequest {\n    return { apiSpecId: \"\", authorizationCode: \"\", codeVerifier: \"\" };\n}\nexport const PerformTokenExchangeRequest = {\n    encode(message: PerformTokenExchangeRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.apiSpecId !== \"\") {\n            writer.uint32(10).string(message.apiSpecId);\n        }\n        if (message.authorizationCode !== \"\") {\n            writer.uint32(18).string(message.authorizationCode);\n        }\n        if (message.codeVerifier !== \"\") {\n            writer.uint32(26).string(message.codeVerifier);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformTokenExchangeRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformTokenExchangeRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecId = reader.string();\n                    break;\n                case 2:\n                    message.authorizationCode = reader.string();\n                    break;\n                case 3:\n                    message.codeVerifier = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformTokenExchangeRequest>, I>>(object: I): PerformTokenExchangeRequest {\n        const message = createBasePerformTokenExchangeRequest();\n        message.apiSpecId = object.apiSpecId ?? \"\";\n        message.authorizationCode = object.authorizationCode ?? \"\";\n        message.codeVerifier = object.codeVerifier ?? \"\";\n        return message;\n    },\n};\nfunction createBasePerformTokenExchangeResponse(): PerformTokenExchangeResponse {\n    return { response: undefined };\n}\nexport const PerformTokenExchangeResponse = {\n    encode(message: PerformTokenExchangeResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.response?.$case === \"tokenDetails\") {\n            TokenDetails.encode(message.response.tokenDetails, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.response?.$case === \"error\") {\n            TokenExchangeError.encode(message.response.error, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformTokenExchangeResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformTokenExchangeResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.response = { $case: \"tokenDetails\", tokenDetails: TokenDetails.decode(reader, reader.uint32()) };\n                    break;\n                case 2:\n                    message.response = { $case: \"error\", error: TokenExchangeError.decode(reader, reader.uint32()) };\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformTokenExchangeResponse>, I>>(object: I): PerformTokenExchangeResponse {\n        const message = createBasePerformTokenExchangeResponse();\n        if (object.response?.$case === \"tokenDetails\" &&\n            object.response?.tokenDetails !== undefined &&\n            object.response?.tokenDetails !== null) {\n            message.response = {\n                $case: \"tokenDetails\",\n                tokenDetails: TokenDetails.fromPartial(object.response.tokenDetails),\n            };\n        }\n        if (object.response?.$case === \"error\" && object.response?.error !== undefined && object.response?.error !== null) {\n            message.response = { $case: \"error\", error: TokenExchangeError.fromPartial(object.response.error) };\n        }\n        return message;\n    },\n};\nfunction createBaseRefreshTokenRequest(): RefreshTokenRequest {\n    return { apiSpecId: \"\", refreshToken: \"\" };\n}\nexport const RefreshTokenRequest = {\n    encode(message: RefreshTokenRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.apiSpecId !== \"\") {\n            writer.uint32(10).string(message.apiSpecId);\n        }\n        if (message.refreshToken !== \"\") {\n            writer.uint32(18).string(message.refreshToken);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): RefreshTokenRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRefreshTokenRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecId = reader.string();\n                    break;\n                case 2:\n                    message.refreshToken = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<RefreshTokenRequest>, I>>(object: I): RefreshTokenRequest {\n        const message = createBaseRefreshTokenRequest();\n        message.apiSpecId = object.apiSpecId ?? \"\";\n        message.refreshToken = object.refreshToken ?? \"\";\n        return message;\n    },\n};\nfunction createBaseRefreshTokenResponse(): RefreshTokenResponse {\n    return { response: undefined };\n}\nexport const RefreshTokenResponse = {\n    encode(message: RefreshTokenResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.response?.$case === \"tokenDetails\") {\n            TokenDetails.encode(message.response.tokenDetails, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.response?.$case === \"error\") {\n            TokenExchangeError.encode(message.response.error, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): RefreshTokenResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRefreshTokenResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.response = { $case: \"tokenDetails\", tokenDetails: TokenDetails.decode(reader, reader.uint32()) };\n                    break;\n                case 2:\n                    message.response = { $case: \"error\", error: TokenExchangeError.decode(reader, reader.uint32()) };\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<RefreshTokenResponse>, I>>(object: I): RefreshTokenResponse {\n        const message = createBaseRefreshTokenResponse();\n        if (object.response?.$case === \"tokenDetails\" &&\n            object.response?.tokenDetails !== undefined &&\n            object.response?.tokenDetails !== null) {\n            message.response = {\n                $case: \"tokenDetails\",\n                tokenDetails: TokenDetails.fromPartial(object.response.tokenDetails),\n            };\n        }\n        if (object.response?.$case === \"error\" && object.response?.error !== undefined && object.response?.error !== null) {\n            message.response = { $case: \"error\", error: TokenExchangeError.fromPartial(object.response.error) };\n        }\n        return message;\n    },\n};\nfunction createBasePerformApiCallRequest(): PerformApiCallRequest {\n    return {\n        apiSpecSetId: \"\",\n        endpointRefId: \"\",\n        parameters: {},\n        body: new Uint8Array(),\n        lensId: \"\",\n        isStudioDev: false,\n        cacheTtlSec: 0,\n        linkedResources: [],\n    };\n}\nexport const PerformApiCallRequest = {\n    encode(message: PerformApiCallRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.apiSpecSetId !== \"\") {\n            writer.uint32(10).string(message.apiSpecSetId);\n        }\n        if (message.endpointRefId !== \"\") {\n            writer.uint32(18).string(message.endpointRefId);\n        }\n        Object.entries(message.parameters).forEach(([key, value]) => {\n            PerformApiCallRequest_ParametersEntry.encode({ key: key as any, value }, writer.uint32(26).fork()).ldelim();\n        });\n        if (message.body.length !== 0) {\n            writer.uint32(34).bytes(message.body);\n        }\n        if (message.lensId !== \"\") {\n            writer.uint32(42).string(message.lensId);\n        }\n        if (message.isStudioDev === true) {\n            writer.uint32(48).bool(message.isStudioDev);\n        }\n        if (message.cacheTtlSec !== 0) {\n            writer.uint32(56).int32(message.cacheTtlSec);\n        }\n        for (const v of message.linkedResources) {\n            LinkedResource.encode(v!, writer.uint32(66).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformApiCallRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformApiCallRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecSetId = reader.string();\n                    break;\n                case 2:\n                    message.endpointRefId = reader.string();\n                    break;\n                case 3:\n                    const entry3 = PerformApiCallRequest_ParametersEntry.decode(reader, reader.uint32());\n                    if (entry3.value !== undefined) {\n                        message.parameters[entry3.key] = entry3.value;\n                    }\n                    break;\n                case 4:\n                    message.body = reader.bytes();\n                    break;\n                case 5:\n                    message.lensId = reader.string();\n                    break;\n                case 6:\n                    message.isStudioDev = reader.bool();\n                    break;\n                case 7:\n                    message.cacheTtlSec = reader.int32();\n                    break;\n                case 8:\n                    message.linkedResources.push(LinkedResource.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformApiCallRequest>, I>>(object: I): PerformApiCallRequest {\n        const message = createBasePerformApiCallRequest();\n        message.apiSpecSetId = object.apiSpecSetId ?? \"\";\n        message.endpointRefId = object.endpointRefId ?? \"\";\n        message.parameters = Object.entries(object.parameters ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.body = object.body ?? new Uint8Array();\n        message.lensId = object.lensId ?? \"\";\n        message.isStudioDev = object.isStudioDev ?? false;\n        message.cacheTtlSec = object.cacheTtlSec ?? 0;\n        message.linkedResources = object.linkedResources?.map((e) => LinkedResource.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBasePerformApiCallRequest_ParametersEntry(): PerformApiCallRequest_ParametersEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PerformApiCallRequest_ParametersEntry = {\n    encode(message: PerformApiCallRequest_ParametersEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformApiCallRequest_ParametersEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformApiCallRequest_ParametersEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformApiCallRequest_ParametersEntry>, I>>(object: I): PerformApiCallRequest_ParametersEntry {\n        const message = createBasePerformApiCallRequest_ParametersEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBasePerformApiCallResponse(): PerformApiCallResponse {\n    return {\n        responseCode: ResponseCode.RESPONSE_CODE_UNSET,\n        metadata: {},\n        body: new Uint8Array(),\n        userLocationUsed: false,\n        linkedResources: [],\n    };\n}\nexport const PerformApiCallResponse = {\n    encode(message: PerformApiCallResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.responseCode !== ResponseCode.RESPONSE_CODE_UNSET) {\n            writer.uint32(8).int32(responseCodeToNumber(message.responseCode));\n        }\n        Object.entries(message.metadata).forEach(([key, value]) => {\n            PerformApiCallResponse_MetadataEntry.encode({ key: key as any, value }, writer.uint32(18).fork()).ldelim();\n        });\n        if (message.body.length !== 0) {\n            writer.uint32(26).bytes(message.body);\n        }\n        if (message.userLocationUsed === true) {\n            writer.uint32(32).bool(message.userLocationUsed);\n        }\n        for (const v of message.linkedResources) {\n            LinkedResource.encode(v!, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformApiCallResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformApiCallResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.responseCode = responseCodeFromJSON(reader.int32());\n                    break;\n                case 2:\n                    const entry2 = PerformApiCallResponse_MetadataEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.metadata[entry2.key] = entry2.value;\n                    }\n                    break;\n                case 3:\n                    message.body = reader.bytes();\n                    break;\n                case 4:\n                    message.userLocationUsed = reader.bool();\n                    break;\n                case 5:\n                    message.linkedResources.push(LinkedResource.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformApiCallResponse>, I>>(object: I): PerformApiCallResponse {\n        const message = createBasePerformApiCallResponse();\n        message.responseCode = object.responseCode ?? ResponseCode.RESPONSE_CODE_UNSET;\n        message.metadata = Object.entries(object.metadata ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.body = object.body ?? new Uint8Array();\n        message.userLocationUsed = object.userLocationUsed ?? false;\n        message.linkedResources = object.linkedResources?.map((e) => LinkedResource.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBasePerformApiCallResponse_MetadataEntry(): PerformApiCallResponse_MetadataEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PerformApiCallResponse_MetadataEntry = {\n    encode(message: PerformApiCallResponse_MetadataEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformApiCallResponse_MetadataEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformApiCallResponse_MetadataEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformApiCallResponse_MetadataEntry>, I>>(object: I): PerformApiCallResponse_MetadataEntry {\n        const message = createBasePerformApiCallResponse_MetadataEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseLinkedResource(): LinkedResource {\n    return { url: \"\", encryptionKey: new Uint8Array() };\n}\nexport const LinkedResource = {\n    encode(message: LinkedResource, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.url !== \"\") {\n            writer.uint32(10).string(message.url);\n        }\n        if (message.encryptionKey.length !== 0) {\n            writer.uint32(18).bytes(message.encryptionKey);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LinkedResource {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLinkedResource();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.url = reader.string();\n                    break;\n                case 2:\n                    message.encryptionKey = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<LinkedResource>, I>>(object: I): LinkedResource {\n        const message = createBaseLinkedResource();\n        message.url = object.url ?? \"\";\n        message.encryptionKey = object.encryptionKey ?? new Uint8Array();\n        return message;\n    },\n};\nexport interface RemoteApiService {\n    PerformHttpCall(request: PerformHttpCallRequest): Promise<PerformHttpCallResponse>;\n    GetOAuth2Info(request: GetOAuth2InfoRequest): Promise<GetOAuth2InfoResponse>;\n    PerformTokenExchange(request: PerformTokenExchangeRequest): Promise<PerformTokenExchangeResponse>;\n    RefreshToken(request: RefreshTokenRequest): Promise<RefreshTokenResponse>;\n    PerformApiCall(request: PerformApiCallRequest): Promise<PerformApiCallResponse>;\n}\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n"]}