export function Injectable(token, dependenciesOrFn, maybeFn) {
    const dependencies = Array.isArray(dependenciesOrFn) ? dependenciesOrFn : [];
    const fn = typeof dependenciesOrFn === "function" ? dependenciesOrFn : maybeFn;
    if (!fn) {
        throw new TypeError("[Factory] Received invalid arguments. The factory function must be either the second " +
            "or third argument.");
    }
    if (fn.length !== dependencies.length) {
        throw new TypeError("[Factory] Function arity does not match the number of dependencies. Function has arity " +
            `${fn.length}, but ${dependencies.length} dependencies were specified.` +
            `\nDependencies: ${JSON.stringify(dependencies)}`);
    }
    const factory = (...args) => fn(...args);
    factory.token = token;
    factory.dependencies = dependencies;
    return factory;
}
//# sourceMappingURL=Injectable.js.map