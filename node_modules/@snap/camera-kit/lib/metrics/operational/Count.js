import { Metric, serializeMetricDimensions } from "./Metric";
/** @internal */
export class Count extends Metric {
    static count(name, n, dimensions = {}) {
        const count = new Count(name, dimensions);
        count.increment(n);
        return count;
    }
    constructor(name, dimensions = {}) {
        super(name, dimensions);
        this.name = name;
        this.count = 0;
    }
    increment(count) {
        this.count += count;
        return this.count;
    }
    toOperationalMetric() {
        return [
            {
                name: `${this.name}${serializeMetricDimensions(this.dimensions)}`,
                timestamp: new Date(),
                metric: { $case: "count", count: this.count },
            },
        ];
    }
}
//# sourceMappingURL=Count.js.map