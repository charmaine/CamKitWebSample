{"version":3,"file":"Histogram.js","sourceRoot":"","sources":["../../../src/metrics/operational/Histogram.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAoB,yBAAyB,EAAE,MAAM,UAAU,CAAC;AAO/E,gBAAgB;AAChB,MAAM,OAAO,SAAU,SAAQ,MAAM;IACjC,MAAM,CAAC,KAAK,CAAC,IAAY,EAAE,KAAa,EAAE,cAAgC,EAAE;QACxE,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACnD,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,OAAO,SAAS,CAAC;IACrB,CAAC;IAID,YAAqB,IAAY,EAAE,aAA+B,EAAE;QAChE,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QADP,SAAI,GAAJ,IAAI,CAAQ;QAFhB,WAAM,GAAa,EAAE,CAAC;IAIvC,CAAC;IAED,GAAG,CAAC,KAAa;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,mBAAmB;QACf,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC7B,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,yBAAyB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;QACzE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/G,CAAC;CACJ","sourcesContent":["import { OperationalMetric } from \"../../generated-proto/pb_schema/camera_kit/v3/operational_metrics\";\nimport { Metric, MetricDimensions, serializeMetricDimensions } from \"./Metric\";\n\n/** @internal */\nexport type HistogramMetric = OperationalMetric & {\n    metric: Extract<OperationalMetric[\"metric\"], { $case: \"histogram\" }>;\n};\n\n/** @internal */\nexport class Histogram extends Metric {\n    static level(name: string, level: number, dimsensions: MetricDimensions = {}): Histogram {\n        const histogram = new Histogram(name, dimsensions);\n        histogram.add(level);\n        return histogram;\n    }\n\n    private readonly levels: number[] = [];\n\n    constructor(readonly name: string, dimensions: MetricDimensions = {}) {\n        super(name, dimensions);\n    }\n\n    add(level: number): void {\n        this.levels.push(level);\n    }\n\n    toOperationalMetric(): HistogramMetric[] {\n        const timestamp = new Date();\n        const name = `${this.name}${serializeMetricDimensions(this.dimensions)}`;\n        return this.levels.map((level) => ({ name, timestamp, metric: { $case: \"histogram\", histogram: level } }));\n    }\n}\n"]}