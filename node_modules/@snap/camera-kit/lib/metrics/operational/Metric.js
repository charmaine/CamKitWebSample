const nameDelimiter = "_";
const dimensionDelimiter = ".";
const delimiterRegex = new RegExp(`^${nameDelimiter}+|${nameDelimiter}+$`, "g");
/** @internal */
export class Metric {
    constructor(name, dimensions = {}) {
        this.name = name;
        this.dimensions = dimensions;
    }
    child(constructor, name, dimensions = {}) {
        return new constructor(`${this.name}${nameDelimiter}${name}`, dimensions);
    }
}
/** @internal */
export function joinMetricNames(names) {
    return names.join(nameDelimiter).replace(delimiterRegex, "");
}
/** @internal */
export function serializeMetricDimensions(dimensions) {
    if (Object.keys(dimensions).length === 0)
        return "";
    return `${dimensionDelimiter}${Array.from(Object.entries(dimensions))
        .map((d) => d.join(dimensionDelimiter))
        .join(dimensionDelimiter)}`;
}
//# sourceMappingURL=Metric.js.map