import { MakeTaggedBusinessEvent } from "../businessEventsReporter";
import { MetricsEventTarget } from "../metricsEventTarget";
import { OperationalMetricsReporter } from "../operational/operationalMetricsReporter";
/**
 * The LegalPrompt metric reports each time a BIPA legal prompt is shown.
 */
export type LegalPrompt = MakeTaggedBusinessEvent<"legalPrompt">;
/**
 * @internal
 */
export declare const reportLegalState: {
    (args_0: import("@snap/state-management").StateMachine<import("@snap/state-management").Action<"requestLegalPrompt", undefined> | import("@snap/state-management").Action<"accept", string> | import("@snap/state-management").Action<"reject", string>, import("@snap/state-management").State<"unknown", undefined> | import("@snap/state-management").State<"accepted", undefined> | import("@snap/state-management").State<"rejected", undefined>>, args_1: MetricsEventTarget, args_2: OperationalMetricsReporter): void;
    token: "reportLegalState";
    dependencies: readonly ["legalState", "metricsEventTarget", "operationalMetricsReporter"];
};
