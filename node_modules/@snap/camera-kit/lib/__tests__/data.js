/* eslint-disable max-len */
import { Lens_CameraFacing } from "../lens";
export const falsyValues = [false, null, undefined, 0, ""];
export const truthyValues = [true, 1, {}, new Date(), []];
export function createLensFixture({ name, groupId = "test-group-id", content = {}, }) {
    return {
        id: name,
        groupId,
        name,
        vendorData: {},
        content: Object.assign({ iconUrlBolt: "https://bolt.com/iconUrl1", lnsSha256: "", lnsUrlBolt: "", preview: {
                imageUrl: "https://bolt.com/previewUrl1",
                imageSequenceSize: 100,
                imageSequenceWebpUrlPattern: "http://images.com/face-%d.com",
            }, assetManifest: [], defaultHintId: "", hintTranslations: {} }, content),
        scannable: {
            snapcodeImageUrl: "https://snapcodeImageUrl.com",
            snapcodeDeeplink: "https://snapcodeDeeplink.com",
        },
        isThirdParty: false,
        cameraFacingPreference: Lens_CameraFacing.UNRECOGNIZED,
        featureMetadata: [],
        lensCreator: {
            displayName: "",
        },
    };
}
// NOTE: type of the record ensures newly added asset types break compilation
export const AssetType = {
    DeviceDependent: { value: 3 },
    RemoteMediaByUrl: { value: 6 },
    Static: { value: 1 },
    URL: { value: 2 },
    BitmojiDynamicAsset: { value: 4 },
};
export function createLensCoreModule() {
    return {
        AssetType,
        CanvasType: { Preview: { value: 1 }, Capture: { value: 2 }, None: { value: 0 }, All: { value: 3 } },
        RenderLoopMode: { SetTimeout: { value: 1 }, RequestAnimationFrame: { value: 0 } },
        // https://github.sc-corp.net/Snapchat/LensCore/blob/502b54b9a663203bcdf3b90c63214cdf8cc1e713/Src/CoreManager/ClientInterfaceDelegate.hpp#L39
        InterfaceAction: { Show: { value: 3 } },
        // https://github.sc-corp.net/Snapchat/LensCore/blob/502b54b9a663203bcdf3b90c63214cdf8cc1e713/Src/CoreManager/ClientInterfaceDelegate.hpp#L21
        InterfaceControl: { ImagePicker: { value: 1 } },
        // https://github.sc-corp.net/Snapchat/LensCore/blob/2d538ecc41f67dd2c199e0ff0eefd96aac6f22dc/Src/Common/IExternalMediaFilePickedObserver.h#L21
        ExternalMediaOrientation: { CW0: { value: 0 }, CW90: { value: 1 }, CW180: { value: 2 }, CW270: { value: 3 } },
        getOutputCanvases: jest.fn(),
        initialize: jest.fn(),
        provideExternalImage: jest.fn(),
        provideExternalVideo: jest.fn(),
        provideRemoteAssetsResponse: jest.fn(),
        provideRemoteAssetsUploadResponse: jest.fn(),
        provideUriResponse: jest.fn(),
        registerSavePersistentStoreCallback: jest.fn(),
        registerUriListener: jest.fn(),
        setAllSoundsMuted: jest.fn(),
        setClientInterfaceRequestHandler: jest.fn(),
        setFPSLimit: jest.fn(),
        setOnFrameProcessedCallback: jest.fn(),
        setPreloadedConfiguration: jest.fn(),
        setRemoteAssetsProvider: jest.fn(),
        setRemoteAssetsUploadHandler: jest.fn(),
        setRenderLoopMode: jest.fn(),
        setRenderSize: jest.fn(),
        useMediaElement: jest.fn(),
        setInputTransform: jest.fn(),
    };
}
//# sourceMappingURL=data.js.map