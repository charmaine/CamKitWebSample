/**
 * Creates a promise that can be resolved/rejected manually later.
 *```ts
 * const promise = createDeferred();
 * // when some piece of code awaits the promise:
 * await promise
 * // we can resovle that promise when it is more suitable for us:
 * await promise.resolve();
 *```
 * @returns A promise wtih resolve() and reject() methods.
 */
export function createDeferred() {
    let resolve;
    let reject;
    const promise = new Promise((res, rej) => {
        resolve = res;
        reject = rej;
    });
    promise.resolve = (v) => {
        resolve(v);
        return promise;
    };
    promise.reject = (reason) => {
        reject(reason);
        return promise;
    };
    return promise;
}
//# sourceMappingURL=deferred.js.map