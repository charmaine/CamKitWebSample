/// <reference types="jest" />
import { ContentProto } from "../lens";
import { LensCoreModule, AssetType as LensCoreAssetType } from "../lens-core-module/generated-types";
import { LensProtoWithGroupId } from "../lens/Lens";
export declare const falsyValues: readonly [false, null, undefined, 0, ""];
export declare const truthyValues: readonly [true, 1, {}, Date, readonly []];
export declare function createLensFixture({ name, groupId, content, }: {
    name: string;
    groupId?: string;
    content?: Partial<ContentProto>;
}): LensProtoWithGroupId;
export type LensCoreMock = Pick<jest.Mocked<LensCoreModule>, "AssetType" | "CanvasType" | "ExternalMediaOrientation" | "InterfaceAction" | "InterfaceControl" | "RenderLoopMode" | "getOutputCanvases" | "initialize" | "provideExternalImage" | "provideExternalVideo" | "provideRemoteAssetsResponse" | "provideRemoteAssetsUploadResponse" | "provideUriResponse" | "registerSavePersistentStoreCallback" | "registerUriListener" | "setAllSoundsMuted" | "setClientInterfaceRequestHandler" | "setFPSLimit" | "setInputTransform" | "setOnFrameProcessedCallback" | "setPreloadedConfiguration" | "setRemoteAssetsProvider" | "setRemoteAssetsUploadHandler" | "setRenderLoopMode" | "setRenderSize" | "useMediaElement">;
export declare const AssetType: Record<keyof LensCoreModule["AssetType"], LensCoreAssetType>;
export declare function createLensCoreModule(): LensCoreMock;
