{
  "version": 3,
  "sources": ["../../long/src/long.js", "../../@protobufjs/aspromise/index.js", "../../@protobufjs/base64/index.js", "../../@protobufjs/eventemitter/index.js", "../../@protobufjs/float/index.js", "../../@protobufjs/inquire/index.js", "../../@protobufjs/utf8/index.js", "../../@protobufjs/pool/index.js", "../../protobufjs/src/util/longbits.js", "../../protobufjs/src/util/minimal.js", "../../protobufjs/src/writer.js", "../../protobufjs/src/writer_buffer.js", "../../protobufjs/src/reader.js", "../../protobufjs/src/reader_buffer.js", "../../protobufjs/src/rpc/service.js", "../../protobufjs/src/rpc.js", "../../protobufjs/src/roots.js", "../../protobufjs/src/index-minimal.js", "../../protobufjs/minimal.js", "../../browser-headers/dist/browser-headers.umd.js", "../../@improbable-eng/grpc-web/dist/grpc-web-client.umd.js", "../../@snap/camera-kit/lib/environment.json", "../../@snap/camera-kit/lib/lensCoreWasmVersions.json", "../../@snap/camera-kit/src/common/copyDefinedProperties.ts", "../../@snap/camera-kit/src/configurationOverrides.ts", "../../@snap/camera-kit/src/dependency-injection/Injectable.ts", "../../@snap/camera-kit/src/configuration.ts", "../../tslib/tslib.es6.mjs", "../../rxjs/src/internal/util/isFunction.ts", "../../rxjs/src/internal/util/createErrorClass.ts", "../../rxjs/src/internal/util/UnsubscriptionError.ts", "../../rxjs/src/internal/util/arrRemove.ts", "../../rxjs/src/internal/Subscription.ts", "../../rxjs/src/internal/config.ts", "../../rxjs/src/internal/scheduler/timeoutProvider.ts", "../../rxjs/src/internal/util/reportUnhandledError.ts", "../../rxjs/src/internal/util/noop.ts", "../../rxjs/src/internal/NotificationFactories.ts", "../../rxjs/src/internal/util/errorContext.ts", "../../rxjs/src/internal/Subscriber.ts", "../../rxjs/src/internal/symbol/observable.ts", "../../rxjs/src/internal/util/identity.ts", "../../rxjs/src/internal/util/pipe.ts", "../../rxjs/src/internal/Observable.ts", "../../rxjs/src/internal/util/lift.ts", "../../rxjs/src/internal/operators/OperatorSubscriber.ts", "../../rxjs/src/internal/operators/refCount.ts", "../../rxjs/src/internal/observable/ConnectableObservable.ts", "../../rxjs/src/internal/scheduler/performanceTimestampProvider.ts", "../../rxjs/src/internal/scheduler/animationFrameProvider.ts", "../../rxjs/src/internal/observable/dom/animationFrames.ts", "../../rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../rxjs/src/internal/Subject.ts", "../../rxjs/src/internal/BehaviorSubject.ts", "../../rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../rxjs/src/internal/ReplaySubject.ts", "../../rxjs/src/internal/AsyncSubject.ts", "../../rxjs/src/internal/scheduler/Action.ts", "../../rxjs/src/internal/scheduler/intervalProvider.ts", "../../rxjs/src/internal/scheduler/AsyncAction.ts", "../../rxjs/src/internal/util/Immediate.ts", "../../rxjs/src/internal/scheduler/immediateProvider.ts", "../../rxjs/src/internal/scheduler/AsapAction.ts", "../../rxjs/src/internal/Scheduler.ts", "../../rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../rxjs/src/internal/scheduler/AsapScheduler.ts", "../../rxjs/src/internal/scheduler/asap.ts", "../../rxjs/src/internal/scheduler/async.ts", "../../rxjs/src/internal/scheduler/QueueAction.ts", "../../rxjs/src/internal/scheduler/QueueScheduler.ts", "../../rxjs/src/internal/scheduler/queue.ts", "../../rxjs/src/internal/scheduler/AnimationFrameAction.ts", "../../rxjs/src/internal/scheduler/AnimationFrameScheduler.ts", "../../rxjs/src/internal/scheduler/animationFrame.ts", "../../rxjs/src/internal/scheduler/VirtualTimeScheduler.ts", "../../rxjs/src/internal/observable/empty.ts", "../../rxjs/src/internal/util/isScheduler.ts", "../../rxjs/src/internal/util/args.ts", "../../rxjs/src/internal/util/isArrayLike.ts", "../../rxjs/src/internal/util/isPromise.ts", "../../rxjs/src/internal/util/isInteropObservable.ts", "../../rxjs/src/internal/util/isAsyncIterable.ts", "../../rxjs/src/internal/util/throwUnobservableError.ts", "../../rxjs/src/internal/symbol/iterator.ts", "../../rxjs/src/internal/util/isIterable.ts", "../../rxjs/src/internal/util/isReadableStreamLike.ts", "../../rxjs/src/internal/observable/innerFrom.ts", "../../rxjs/src/internal/util/executeSchedule.ts", "../../rxjs/src/internal/operators/observeOn.ts", "../../rxjs/src/internal/operators/subscribeOn.ts", "../../rxjs/src/internal/scheduled/scheduleObservable.ts", "../../rxjs/src/internal/scheduled/schedulePromise.ts", "../../rxjs/src/internal/scheduled/scheduleArray.ts", "../../rxjs/src/internal/scheduled/scheduleIterable.ts", "../../rxjs/src/internal/scheduled/scheduleAsyncIterable.ts", "../../rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts", "../../rxjs/src/internal/scheduled/scheduled.ts", "../../rxjs/src/internal/observable/from.ts", "../../rxjs/src/internal/observable/of.ts", "../../rxjs/src/internal/observable/throwError.ts", "../../rxjs/src/internal/Notification.ts", "../../rxjs/src/internal/util/EmptyError.ts", "../../rxjs/src/internal/firstValueFrom.ts", "../../rxjs/src/internal/util/ArgumentOutOfRangeError.ts", "../../rxjs/src/internal/util/NotFoundError.ts", "../../rxjs/src/internal/util/SequenceError.ts", "../../rxjs/src/internal/util/isDate.ts", "../../rxjs/src/internal/operators/timeout.ts", "../../rxjs/src/internal/operators/map.ts", "../../rxjs/src/internal/util/mapOneOrManyArgs.ts", "../../rxjs/src/internal/util/argsArgArrayOrObject.ts", "../../rxjs/src/internal/util/createObject.ts", "../../rxjs/src/internal/observable/combineLatest.ts", "../../rxjs/src/internal/operators/mergeInternals.ts", "../../rxjs/src/internal/operators/mergeMap.ts", "../../rxjs/src/internal/operators/mergeAll.ts", "../../rxjs/src/internal/operators/concatAll.ts", "../../rxjs/src/internal/observable/concat.ts", "../../rxjs/src/internal/observable/defer.ts", "../../rxjs/src/internal/observable/forkJoin.ts", "../../rxjs/src/internal/observable/fromEvent.ts", "../../rxjs/src/internal/observable/timer.ts", "../../rxjs/src/internal/observable/merge.ts", "../../rxjs/src/internal/observable/never.ts", "../../rxjs/src/internal/util/argsOrArgArray.ts", "../../rxjs/src/internal/operators/filter.ts", "../../rxjs/src/internal/observable/race.ts", "../../rxjs/src/internal/operators/catchError.ts", "../../rxjs/src/internal/operators/scanInternals.ts", "../../rxjs/src/internal/operators/combineLatest.ts", "../../rxjs/src/internal/operators/combineLatestWith.ts", "../../rxjs/src/internal/operators/take.ts", "../../rxjs/src/internal/operators/exhaustMap.ts", "../../rxjs/src/internal/operators/finalize.ts", "../../rxjs/src/internal/operators/raceWith.ts", "../../rxjs/src/internal/operators/retry.ts", "../../rxjs/src/internal/operators/scan.ts", "../../rxjs/src/internal/operators/share.ts", "../../rxjs/src/internal/operators/shareReplay.ts", "../../rxjs/src/internal/operators/startWith.ts", "../../rxjs/src/internal/operators/switchMap.ts", "../../rxjs/src/internal/operators/takeUntil.ts", "../../rxjs/src/internal/operators/tap.ts", "../../rxjs/src/internal/operators/withLatestFrom.ts", "../../@snap/camera-kit/src/common/loadScript.ts", "../../@snap/camera-kit/src/common/typeguards.ts", "../../@snap/camera-kit/src/handlers/debugHandler.ts", "../../@snap/camera-kit/src/handlers/HandlerChainBuilder.ts", "../../@snap/camera-kit/src/common/entries.ts", "../../@snap/camera-kit/src/logger/logger.ts", "../../@snap/camera-kit/src/handlers/retryingHandler.ts", "../../@snap/camera-kit/src/handlers/noCorsRetryingFetchHandler.ts", "../../@snap/camera-kit/src/handlers/timeoutHandler.ts", "../../@snap/camera-kit/src/handlers/defaultFetchHandler.ts", "../../wasm-feature-detect/dist/esm/index.js", "../../@snap/camera-kit/src/common/memoize.ts", "../../@snap/camera-kit/src/namedErrors.ts", "../../@snap/camera-kit/src/platform/platformInfo.ts", "../../@snap/camera-kit/src/platform/platformCapabilities.ts", "../../@snap/camera-kit/src/lens-core-module/lensCoreError.ts", "../../@snap/camera-kit/src/lens-core-module/lensCore.ts", "../../@snap/camera-kit/src/lens-core-module/loader/lensCoreFactory.ts", "../../@snap/camera-kit/src/benchmark/webglUtils.ts", "../../@snap/camera-kit/src/benchmark/benchmarkGflops.ts", "../../@snap/camera-kit/src/benchmark/estimateLensPerformanceCluster.ts", "../../reflect-metadata/Reflect.js", "../../@snap/camera-kit/src/common/validate.ts", "../../@snap/camera-kit/src/platform/cameraKitUserAgent.ts", "../../@snap/camera-kit/src/handlers/headersModifyingFetchHandler.ts", "../../@snap/camera-kit/src/handlers/cameraKitServiceFetchHandlerFactory.ts", "../../@snap/camera-kit/src/extensions/LensSources.ts", "../../@snap/camera-kit/src/common/errorHelpers.ts", "../../@snap/camera-kit/src/common/time.ts", "../../@snap/camera-kit/src/events/TypedCustomEvent.ts", "../../@snap/camera-kit/src/events/TypedEventTarget.ts", "../../@snap/camera-kit/src/handlers/requestStateEmittingHandler.ts", "../../@snap/camera-kit/src/handlers/arrayBufferParsingHandler.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/lens.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/google/protobuf/any.ts", "../../@snap/camera-kit/src/logger/errorLoggingDecorator.ts", "../../@snap/camera-kit/src/common/assertions.ts", "../../@snap/camera-kit/src/lens/Lens.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/features/ranking_info.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/features/remote_api_info.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/google/protobuf/wrappers.ts", "../../@snap/camera-kit/src/common/any.ts", "../../@snap/camera-kit/src/lens/lensHttpUtil.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/export.ts", "../../@snap/camera-kit/src/lens/lensEnvelopeUtil.ts", "../../@snap/camera-kit/src/metrics/metricsEventTarget.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/cdp/cof/namespace.ts", "../../@snap/camera-kit/src/remote-configuration/cofHandler.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/cdp/cof/circumstance_service.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/cdp/cof/config_request.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/cdp/cof/benchmark.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/google/protobuf/timestamp.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/common/ruid.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/cdp/cof/config_response.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/cdp/cof/config_result.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/common/value.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/cdp/cof/debug_info.ts", "../../@snap/camera-kit/src/handlers/responseCachingHandler.ts", "../../@snap/camera-kit/src/persistence/ExpiringPersistence.ts", "../../@snap/camera-kit/src/persistence/Persistence.ts", "../../@snap/camera-kit/src/persistence/IndexedDBPersistence.ts", "../../@snap/camera-kit/src/handlers/mappingHandler.ts", "../../@snap/camera-kit/src/handlers/batchingHandler.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/service.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/ranking.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/legal_prompt.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/operational_metrics.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/business_events.ts", "../../@snap/camera-kit/src/common/pageVisibility.ts", "../../@snap/camera-kit/src/handlers/rateLimitingHandler.ts", "../../@snap/camera-kit/src/metrics/metricsHandler.ts", "../../@snap/camera-kit/src/metrics/operational/operationalMetricsReporter.ts", "../../@snap/camera-kit/src/remote-configuration/remoteConfiguration.ts", "../../@snap/camera-kit/src/lens/assets/deviceDependentAssetLoader.ts", "../../@snap/camera-kit/src/lens/assets/remoteMediaAssetLoaderFactory.ts", "../../@snap/camera-kit/src/lens/assets/staticAssetLoader.ts", "../../@snap/camera-kit/src/lens/assets/LensAssetRepository.ts", "../../@snap/camera-kit/src/lens/LensRepository.ts", "../../@snap/camera-kit/src/dependency-injection/PartialContainer.ts", "../../@snap/camera-kit/src/dependency-injection/Container.ts", "../../@snap/state-management/dist/types.js", "../../@snap/state-management/dist/actions.js", "../../@snap/state-management/dist/state-machine.js", "../../@snap/state-management/dist/states.js", "../../@snap/camera-kit/src/transforms/Transform2D.ts", "../../@snap/camera-kit/src/media-sources/CameraKitSource.ts", "../../@snap/camera-kit/src/media-sources/MediaStreamSource.ts", "../../@snap/camera-kit/src/media-sources/VideoSource.ts", "../../@snap/camera-kit/src/logger/logEntries.ts", "../../@snap/camera-kit/src/session/LensPerformanceMeasurement.ts", "../../@snap/camera-kit/src/session/LensPerformanceMetrics.ts", "../../@snap/camera-kit/src/lens/LensPersistenceStore.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/lenses/launchdata.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/lenses/snappable.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/lenses/lures.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/lenses/geocircle.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/lenses/geopoint.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/lenses/user_data.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/lenses/persistent_store.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/lenses/launch_params.ts", "../../@snap/camera-kit/src/lens/LensLaunchParams.ts", "../../@snap/camera-kit/src/common/localization.ts", "../../@snap/camera-kit/src/common/dialog.ts", "../../@snap/camera-kit/src/common/hash.ts", "../../@snap/camera-kit/src/legal/legalPrompt.ts", "../../@snap/camera-kit/src/legal/legalState.ts", "../../@snap/camera-kit/src/metrics/operational/Metric.ts", "../../@snap/camera-kit/src/metrics/operational/Timer.ts", "../../@snap/camera-kit/src/observable-operators/unsubscribed.ts", "../../@snap/camera-kit/src/session/lensState.ts", "../../@snap/camera-kit/src/session/sessionState.ts", "../../@snap/camera-kit/src/session/LensKeyboard.ts", "../../@snap/camera-kit/src/session/CameraKitSessionEvents.ts", "../../@snap/camera-kit/src/session/CameraKitSession.ts", "../../@snap/camera-kit/src/lens/assets/LensAssetsProvider.ts", "../../@snap/camera-kit/src/generated-proto/pb_schema/lenses/remote_api/remote_api_service.ts", "../../@snap/camera-kit/src/extensions/UriHandlers.ts", "../../@snap/camera-kit/src/extensions/RemoteApiServices.ts", "../../@snap/camera-kit/src/extensions/uriHandlersRegister.ts", "../../@snap/camera-kit/src/metrics/reporters/reportGlobalException.ts", "../../@snap/camera-kit/src/metrics/reporters/reportSessionException.ts", "../../@snap/camera-kit/src/metrics/reporters/reportBenchmarks.ts", "../../@snap/camera-kit/src/events/scan.ts", "../../@snap/camera-kit/src/metrics/reporters/reportLensAndAssetDownload.ts", "../../@snap/camera-kit/src/metrics/reporters/reportHttpMetrics.ts", "../../@snap/camera-kit/src/generated-proto/blizzard/cameraKitEvents.ts", "../../@snap/camera-kit/src/metrics/reporters/reportLegalState.ts", "../../@snap/camera-kit/src/metrics/reporters/reportLensValidationFailed.ts", "../../@snap/camera-kit/src/metrics/operational/Histogram.ts", "../../@snap/camera-kit/src/common/date.ts", "../../@snap/camera-kit/src/metrics/reporters/reportLensView.ts", "../../@snap/camera-kit/src/metrics/reporters/reportLensWait.ts", "../../@snap/camera-kit/src/metrics/reporters/reportUserSession.ts", "../../@snap/camera-kit/src/metrics/operational/Count.ts", "../../@snap/camera-kit/src/metrics/reporters/reportPlatformCapabilities.ts", "../../@snap/camera-kit/src/metrics/reporters/reporters.ts", "../../browser-fs-access/dist/index.modern.js", "../../@snap/camera-kit/src/lens-client-interface/exif.ts", "../../@snap/camera-kit/src/lens-client-interface/imagePicker.ts", "../../@snap/camera-kit/src/lens-client-interface/lensClientInterface.ts", "../../@snap/camera-kit/src/remote-configuration/preloadConfiguration.ts", "../../@snap/camera-kit/src/CameraKit.ts", "../../@snap/camera-kit/src/platform/assertPlatformSupported.ts", "../../uuid/dist/esm-browser/rng.js", "../../uuid/dist/esm-browser/regex.js", "../../uuid/dist/esm-browser/validate.js", "../../uuid/dist/esm-browser/stringify.js", "../../uuid/dist/esm-browser/parse.js", "../../uuid/dist/esm-browser/v35.js", "../../uuid/dist/esm-browser/md5.js", "../../uuid/dist/esm-browser/v3.js", "../../uuid/dist/esm-browser/native.js", "../../uuid/dist/esm-browser/v4.js", "../../uuid/dist/esm-browser/sha1.js", "../../uuid/dist/esm-browser/v5.js", "../../@snap/camera-kit/src/metrics/businessEventsReporter.ts", "../../@snap/camera-kit/src/logger/registerLogEntriesSubscriber.ts", "../../@snap/camera-kit/src/bootstrapCameraKit.ts", "../../@snap/camera-kit/src/extensions/extensionRequestContext.ts", "../../@snap/camera-kit/src/media-sources/FunctionSource.ts", "../../@snap/camera-kit/src/media-sources/ImageSource.ts", "../../@snap/camera-kit/src/index.ts"],
  "sourcesContent": ["module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n", "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n", "\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n", "\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n", "\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n", "\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n", "\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n", "\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n", "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n", "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n", "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n", "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n", "// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(3);\nfunction isBrowserHeaders(arg) {\n    return typeof arg === \"object\" && typeof arg.headersMap === \"object\" && typeof arg.forEach === \"function\";\n}\nvar BrowserHeaders = (function () {\n    function BrowserHeaders(init, options) {\n        if (init === void 0) { init = {}; }\n        if (options === void 0) { options = { splitValues: false }; }\n        var _this = this;\n        this.headersMap = {};\n        if (init) {\n            if (typeof Headers !== \"undefined\" && init instanceof Headers) {\n                var keys = util_1.getHeaderKeys(init);\n                keys.forEach(function (key) {\n                    var values = util_1.getHeaderValues(init, key);\n                    values.forEach(function (value) {\n                        if (options.splitValues) {\n                            _this.append(key, util_1.splitHeaderValue(value));\n                        }\n                        else {\n                            _this.append(key, value);\n                        }\n                    });\n                });\n            }\n            else if (isBrowserHeaders(init)) {\n                init.forEach(function (key, values) {\n                    _this.append(key, values);\n                });\n            }\n            else if (typeof Map !== \"undefined\" && init instanceof Map) {\n                var asMap = init;\n                asMap.forEach(function (value, key) {\n                    _this.append(key, value);\n                });\n            }\n            else if (typeof init === \"string\") {\n                this.appendFromString(init);\n            }\n            else if (typeof init === \"object\") {\n                Object.getOwnPropertyNames(init).forEach(function (key) {\n                    var asObject = init;\n                    var values = asObject[key];\n                    if (Array.isArray(values)) {\n                        values.forEach(function (value) {\n                            _this.append(key, value);\n                        });\n                    }\n                    else {\n                        _this.append(key, values);\n                    }\n                });\n            }\n        }\n    }\n    BrowserHeaders.prototype.appendFromString = function (str) {\n        var pairs = str.split(\"\\r\\n\");\n        for (var i = 0; i < pairs.length; i++) {\n            var p = pairs[i];\n            var index = p.indexOf(\":\");\n            if (index > 0) {\n                var key = p.substring(0, index).trim();\n                var value = p.substring(index + 1).trim();\n                this.append(key, value);\n            }\n        }\n    };\n    BrowserHeaders.prototype.delete = function (key, value) {\n        var normalizedKey = util_1.normalizeName(key);\n        if (value === undefined) {\n            delete this.headersMap[normalizedKey];\n        }\n        else {\n            var existing = this.headersMap[normalizedKey];\n            if (existing) {\n                var index = existing.indexOf(value);\n                if (index >= 0) {\n                    existing.splice(index, 1);\n                }\n                if (existing.length === 0) {\n                    delete this.headersMap[normalizedKey];\n                }\n            }\n        }\n    };\n    BrowserHeaders.prototype.append = function (key, value) {\n        var _this = this;\n        var normalizedKey = util_1.normalizeName(key);\n        if (!Array.isArray(this.headersMap[normalizedKey])) {\n            this.headersMap[normalizedKey] = [];\n        }\n        if (Array.isArray(value)) {\n            value.forEach(function (arrayValue) {\n                _this.headersMap[normalizedKey].push(util_1.normalizeValue(arrayValue));\n            });\n        }\n        else {\n            this.headersMap[normalizedKey].push(util_1.normalizeValue(value));\n        }\n    };\n    BrowserHeaders.prototype.set = function (key, value) {\n        var normalizedKey = util_1.normalizeName(key);\n        if (Array.isArray(value)) {\n            var normalized_1 = [];\n            value.forEach(function (arrayValue) {\n                normalized_1.push(util_1.normalizeValue(arrayValue));\n            });\n            this.headersMap[normalizedKey] = normalized_1;\n        }\n        else {\n            this.headersMap[normalizedKey] = [util_1.normalizeValue(value)];\n        }\n    };\n    BrowserHeaders.prototype.has = function (key, value) {\n        var keyArray = this.headersMap[util_1.normalizeName(key)];\n        var keyExists = Array.isArray(keyArray);\n        if (!keyExists) {\n            return false;\n        }\n        if (value !== undefined) {\n            var normalizedValue = util_1.normalizeValue(value);\n            return keyArray.indexOf(normalizedValue) >= 0;\n        }\n        else {\n            return true;\n        }\n    };\n    BrowserHeaders.prototype.get = function (key) {\n        var values = this.headersMap[util_1.normalizeName(key)];\n        if (values !== undefined) {\n            return values.concat();\n        }\n        return [];\n    };\n    BrowserHeaders.prototype.forEach = function (callback) {\n        var _this = this;\n        Object.getOwnPropertyNames(this.headersMap)\n            .forEach(function (key) {\n            callback(key, _this.headersMap[key]);\n        }, this);\n    };\n    BrowserHeaders.prototype.toHeaders = function () {\n        if (typeof Headers !== \"undefined\") {\n            var headers_1 = new Headers();\n            this.forEach(function (key, values) {\n                values.forEach(function (value) {\n                    headers_1.append(key, value);\n                });\n            });\n            return headers_1;\n        }\n        else {\n            throw new Error(\"Headers class is not defined\");\n        }\n    };\n    return BrowserHeaders;\n}());\nexports.BrowserHeaders = BrowserHeaders;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrowserHeaders_1 = __webpack_require__(0);\nexports.BrowserHeaders = BrowserHeaders_1.BrowserHeaders;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction iterateHeaders(headers, callback) {\n    var iterator = headers[Symbol.iterator]();\n    var entry = iterator.next();\n    while (!entry.done) {\n        callback(entry.value[0]);\n        entry = iterator.next();\n    }\n}\nexports.iterateHeaders = iterateHeaders;\nfunction iterateHeadersKeys(headers, callback) {\n    var iterator = headers.keys();\n    var entry = iterator.next();\n    while (!entry.done) {\n        callback(entry.value);\n        entry = iterator.next();\n    }\n}\nexports.iterateHeadersKeys = iterateHeadersKeys;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar iterateHeaders_1 = __webpack_require__(2);\nfunction normalizeName(name) {\n    if (typeof name !== \"string\") {\n        name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError(\"Invalid character in header field name\");\n    }\n    return name.toLowerCase();\n}\nexports.normalizeName = normalizeName;\nfunction normalizeValue(value) {\n    if (typeof value !== \"string\") {\n        value = String(value);\n    }\n    return value;\n}\nexports.normalizeValue = normalizeValue;\nfunction getHeaderValues(headersAsNative, key) {\n    var headers = toWindowHeaders(headersAsNative);\n    if (headers instanceof Headers && headers.getAll) {\n        return headers.getAll(key);\n    }\n    var getValue = headers.get(key);\n    if (getValue && typeof getValue === \"string\") {\n        return [getValue];\n    }\n    return getValue;\n}\nexports.getHeaderValues = getHeaderValues;\nfunction toWindowHeaders(headersAsNative) {\n    return headersAsNative;\n}\nfunction getHeaderKeys(headersAsNative) {\n    var headers = toWindowHeaders(headersAsNative);\n    var asMap = {};\n    var keys = [];\n    if (headers.keys) {\n        iterateHeaders_1.iterateHeadersKeys(headers, function (key) {\n            if (!asMap[key]) {\n                asMap[key] = true;\n                keys.push(key);\n            }\n        });\n    }\n    else if (headers.forEach) {\n        headers.forEach(function (_, key) {\n            if (!asMap[key]) {\n                asMap[key] = true;\n                keys.push(key);\n            }\n        });\n    }\n    else {\n        iterateHeaders_1.iterateHeaders(headers, function (entry) {\n            var key = entry[0];\n            if (!asMap[key]) {\n                asMap[key] = true;\n                keys.push(key);\n            }\n        });\n    }\n    return keys;\n}\nexports.getHeaderKeys = getHeaderKeys;\nfunction splitHeaderValue(str) {\n    var values = [];\n    var commaSpaceValues = str.split(\", \");\n    commaSpaceValues.forEach(function (commaSpaceValue) {\n        commaSpaceValue.split(\",\").forEach(function (commaValue) {\n            values.push(commaValue);\n        });\n    });\n    return values;\n}\nexports.splitHeaderValue = splitHeaderValue;\n\n\n/***/ })\n/******/ ]);\n});", "!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var r=t();for(var n in r)(\"object\"==typeof exports?exports:e)[n]=r[n]}}(this,(function(){return e={418:function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.i=function(e){return e},r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=1)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(3),o=function(){function e(e,t){void 0===e&&(e={}),void 0===t&&(t={splitValues:!1});var r,o=this;this.headersMap={},e&&(\"undefined\"!=typeof Headers&&e instanceof Headers?n.getHeaderKeys(e).forEach((function(r){n.getHeaderValues(e,r).forEach((function(e){t.splitValues?o.append(r,n.splitHeaderValue(e)):o.append(r,e)}))})):\"object\"==typeof(r=e)&&\"object\"==typeof r.headersMap&&\"function\"==typeof r.forEach?e.forEach((function(e,t){o.append(e,t)})):\"undefined\"!=typeof Map&&e instanceof Map?e.forEach((function(e,t){o.append(t,e)})):\"string\"==typeof e?this.appendFromString(e):\"object\"==typeof e&&Object.getOwnPropertyNames(e).forEach((function(t){var r=e[t];Array.isArray(r)?r.forEach((function(e){o.append(t,e)})):o.append(t,r)})))}return e.prototype.appendFromString=function(e){for(var t=e.split(\"\\r\\n\"),r=0;r<t.length;r++){var n=t[r],o=n.indexOf(\":\");if(o>0){var s=n.substring(0,o).trim(),i=n.substring(o+1).trim();this.append(s,i)}}},e.prototype.delete=function(e,t){var r=n.normalizeName(e);if(void 0===t)delete this.headersMap[r];else{var o=this.headersMap[r];if(o){var s=o.indexOf(t);s>=0&&o.splice(s,1),0===o.length&&delete this.headersMap[r]}}},e.prototype.append=function(e,t){var r=this,o=n.normalizeName(e);Array.isArray(this.headersMap[o])||(this.headersMap[o]=[]),Array.isArray(t)?t.forEach((function(e){r.headersMap[o].push(n.normalizeValue(e))})):this.headersMap[o].push(n.normalizeValue(t))},e.prototype.set=function(e,t){var r=n.normalizeName(e);if(Array.isArray(t)){var o=[];t.forEach((function(e){o.push(n.normalizeValue(e))})),this.headersMap[r]=o}else this.headersMap[r]=[n.normalizeValue(t)]},e.prototype.has=function(e,t){var r=this.headersMap[n.normalizeName(e)];if(!Array.isArray(r))return!1;if(void 0!==t){var o=n.normalizeValue(t);return r.indexOf(o)>=0}return!0},e.prototype.get=function(e){var t=this.headersMap[n.normalizeName(e)];return void 0!==t?t.concat():[]},e.prototype.forEach=function(e){var t=this;Object.getOwnPropertyNames(this.headersMap).forEach((function(r){e(r,t.headersMap[r])}),this)},e.prototype.toHeaders=function(){if(\"undefined\"!=typeof Headers){var e=new Headers;return this.forEach((function(t,r){r.forEach((function(r){e.append(t,r)}))})),e}throw new Error(\"Headers class is not defined\")},e}();t.BrowserHeaders=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(0);t.BrowserHeaders=n.BrowserHeaders},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.iterateHeaders=function(e,t){for(var r=e[Symbol.iterator](),n=r.next();!n.done;)t(n.value[0]),n=r.next()},t.iterateHeadersKeys=function(e,t){for(var r=e.keys(),n=r.next();!n.done;)t(n.value),n=r.next()}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(2);t.normalizeName=function(e){if(\"string\"!=typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(e))throw new TypeError(\"Invalid character in header field name\");return e.toLowerCase()},t.normalizeValue=function(e){return\"string\"!=typeof e&&(e=String(e)),e},t.getHeaderValues=function(e,t){var r=e;if(r instanceof Headers&&r.getAll)return r.getAll(t);var n=r.get(t);return n&&\"string\"==typeof n?[n]:n},t.getHeaderKeys=function(e){var t=e,r={},o=[];return t.keys?n.iterateHeadersKeys(t,(function(e){r[e]||(r[e]=!0,o.push(e))})):t.forEach?t.forEach((function(e,t){r[t]||(r[t]=!0,o.push(t))})):n.iterateHeaders(t,(function(e){var t=e[0];r[t]||(r[t]=!0,o.push(t))})),o},t.splitHeaderValue=function(e){var t=[];return e.split(\", \").forEach((function(e){e.split(\",\").forEach((function(e){t.push(e)}))})),t}}]))},617:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ChunkParser=t.ChunkType=t.encodeASCII=t.decodeASCII=void 0;var n,o=r(65);function s(e){return 9===(t=e)||10===t||13===t||e>=32&&e<=126;var t}function i(e){for(var t=0;t!==e.length;++t)if(!s(e[t]))throw new Error(\"Metadata is not valid (printable) ASCII\");return String.fromCharCode.apply(String,Array.prototype.slice.call(e))}function a(e){return 128==(128&e.getUint8(0))}function u(e){return e.getUint32(1,!1)}function d(e,t,r){return e.byteLength-t>=r}function c(e,t,r){if(e.slice)return e.slice(t,r);var n=e.length;void 0!==r&&(n=r);for(var o=new Uint8Array(n-t),s=0,i=t;i<n;i++)o[s++]=e[i];return o}t.decodeASCII=i,t.encodeASCII=function(e){for(var t=new Uint8Array(e.length),r=0;r!==e.length;++r){var n=e.charCodeAt(r);if(!s(n))throw new Error(\"Metadata contains invalid ASCII\");t[r]=n}return t},function(e){e[e.MESSAGE=1]=\"MESSAGE\",e[e.TRAILERS=2]=\"TRAILERS\"}(n=t.ChunkType||(t.ChunkType={}));var p=function(){function e(){this.buffer=null,this.position=0}return e.prototype.parse=function(e,t){if(0===e.length&&t)return[];var r,s=[];if(null==this.buffer)this.buffer=e,this.position=0;else if(this.position===this.buffer.byteLength)this.buffer=e,this.position=0;else{var p=this.buffer.byteLength-this.position,h=new Uint8Array(p+e.byteLength),f=c(this.buffer,this.position);h.set(f,0);var l=new Uint8Array(e);h.set(l,p),this.buffer=h,this.position=0}for(;;){if(!d(this.buffer,this.position,5))return s;var g=c(this.buffer,this.position,this.position+5),b=new DataView(g.buffer,g.byteOffset,g.byteLength),y=u(b);if(!d(this.buffer,this.position,5+y))return s;var v=c(this.buffer,this.position+5,this.position+5+y);if(this.position+=5+y,a(b))return s.push({chunkType:n.TRAILERS,trailers:(r=v,new o.Metadata(i(r)))}),s;s.push({chunkType:n.MESSAGE,data:v})}},e}();t.ChunkParser=p},8:function(e,t){\"use strict\";var r;Object.defineProperty(t,\"__esModule\",{value:!0}),t.httpStatusToCode=t.Code=void 0,function(e){e[e.OK=0]=\"OK\",e[e.Canceled=1]=\"Canceled\",e[e.Unknown=2]=\"Unknown\",e[e.InvalidArgument=3]=\"InvalidArgument\",e[e.DeadlineExceeded=4]=\"DeadlineExceeded\",e[e.NotFound=5]=\"NotFound\",e[e.AlreadyExists=6]=\"AlreadyExists\",e[e.PermissionDenied=7]=\"PermissionDenied\",e[e.ResourceExhausted=8]=\"ResourceExhausted\",e[e.FailedPrecondition=9]=\"FailedPrecondition\",e[e.Aborted=10]=\"Aborted\",e[e.OutOfRange=11]=\"OutOfRange\",e[e.Unimplemented=12]=\"Unimplemented\",e[e.Internal=13]=\"Internal\",e[e.Unavailable=14]=\"Unavailable\",e[e.DataLoss=15]=\"DataLoss\",e[e.Unauthenticated=16]=\"Unauthenticated\"}(r=t.Code||(t.Code={})),t.httpStatusToCode=function(e){switch(e){case 0:return r.Internal;case 200:return r.OK;case 400:return r.InvalidArgument;case 401:return r.Unauthenticated;case 403:return r.PermissionDenied;case 404:return r.NotFound;case 409:return r.Aborted;case 412:return r.FailedPrecondition;case 429:return r.ResourceExhausted;case 499:return r.Canceled;case 500:return r.Unknown;case 501:return r.Unimplemented;case 503:return r.Unavailable;case 504:return r.DeadlineExceeded;default:return r.Unknown}}},934:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.client=void 0;var n=r(65),o=r(617),s=r(8),i=r(346),a=r(57),u=r(882);t.client=function(e,t){return new d(e,t)};var d=function(){function e(e,t){this.started=!1,this.sentFirstMessage=!1,this.completed=!1,this.closed=!1,this.finishedSending=!1,this.onHeadersCallbacks=[],this.onMessageCallbacks=[],this.onEndCallbacks=[],this.parser=new o.ChunkParser,this.methodDefinition=e,this.props=t,this.createTransport()}return e.prototype.createTransport=function(){var e=this.props.host+\"/\"+this.methodDefinition.service.serviceName+\"/\"+this.methodDefinition.methodName,t={methodDefinition:this.methodDefinition,debug:this.props.debug||!1,url:e,onHeaders:this.onTransportHeaders.bind(this),onChunk:this.onTransportChunk.bind(this),onEnd:this.onTransportEnd.bind(this)};this.props.transport?this.transport=this.props.transport(t):this.transport=a.makeDefaultTransport(t)},e.prototype.onTransportHeaders=function(e,t){if(this.props.debug&&i.debug(\"onHeaders\",e,t),this.closed)this.props.debug&&i.debug(\"grpc.onHeaders received after request was closed - ignoring\");else if(0===t);else{this.responseHeaders=e,this.props.debug&&i.debug(\"onHeaders.responseHeaders\",JSON.stringify(this.responseHeaders,null,2));var r=c(e);this.props.debug&&i.debug(\"onHeaders.gRPCStatus\",r);var n=r&&r>=0?r:s.httpStatusToCode(t);this.props.debug&&i.debug(\"onHeaders.code\",n);var o=e.get(\"grpc-message\")||[];if(this.props.debug&&i.debug(\"onHeaders.gRPCMessage\",o),this.rawOnHeaders(e),n!==s.Code.OK){var a=this.decodeGRPCStatus(o[0]);this.rawOnError(n,a,e)}}},e.prototype.onTransportChunk=function(e){var t=this;if(this.closed)this.props.debug&&i.debug(\"grpc.onChunk received after request was closed - ignoring\");else{var r=[];try{r=this.parser.parse(e)}catch(e){return this.props.debug&&i.debug(\"onChunk.parsing error\",e,e.message),void this.rawOnError(s.Code.Internal,\"parsing error: \"+e.message)}r.forEach((function(e){if(e.chunkType===o.ChunkType.MESSAGE){var r=t.methodDefinition.responseType.deserializeBinary(e.data);t.rawOnMessage(r)}else e.chunkType===o.ChunkType.TRAILERS&&(t.responseHeaders?(t.responseTrailers=new n.Metadata(e.trailers),t.props.debug&&i.debug(\"onChunk.trailers\",t.responseTrailers)):(t.responseHeaders=new n.Metadata(e.trailers),t.rawOnHeaders(t.responseHeaders)))}))}},e.prototype.onTransportEnd=function(){if(this.props.debug&&i.debug(\"grpc.onEnd\"),this.closed)this.props.debug&&i.debug(\"grpc.onEnd received after request was closed - ignoring\");else if(void 0!==this.responseTrailers){var e=c(this.responseTrailers);if(null!==e){var t=this.responseTrailers.get(\"grpc-message\"),r=this.decodeGRPCStatus(t[0]);this.rawOnEnd(e,r,this.responseTrailers)}else this.rawOnError(s.Code.Internal,\"Response closed without grpc-status (Trailers provided)\")}else{if(void 0===this.responseHeaders)return void this.rawOnError(s.Code.Unknown,\"Response closed without headers\");var n=c(this.responseHeaders),o=this.responseHeaders.get(\"grpc-message\");if(this.props.debug&&i.debug(\"grpc.headers only response \",n,o),null===n)return void this.rawOnEnd(s.Code.Unknown,\"Response closed without grpc-status (Headers only)\",this.responseHeaders);var a=this.decodeGRPCStatus(o[0]);this.rawOnEnd(n,a,this.responseHeaders)}},e.prototype.decodeGRPCStatus=function(e){if(!e)return\"\";try{return decodeURIComponent(e)}catch(t){return e}},e.prototype.rawOnEnd=function(e,t,r){var n=this;this.props.debug&&i.debug(\"rawOnEnd\",e,t,r),this.completed||(this.completed=!0,this.onEndCallbacks.forEach((function(o){if(!n.closed)try{o(e,t,r)}catch(e){setTimeout((function(){throw e}),0)}})))},e.prototype.rawOnHeaders=function(e){this.props.debug&&i.debug(\"rawOnHeaders\",e),this.completed||this.onHeadersCallbacks.forEach((function(t){try{t(e)}catch(e){setTimeout((function(){throw e}),0)}}))},e.prototype.rawOnError=function(e,t,r){var o=this;void 0===r&&(r=new n.Metadata),this.props.debug&&i.debug(\"rawOnError\",e,t),this.completed||(this.completed=!0,this.onEndCallbacks.forEach((function(n){if(!o.closed)try{n(e,t,r)}catch(e){setTimeout((function(){throw e}),0)}})))},e.prototype.rawOnMessage=function(e){var t=this;this.props.debug&&i.debug(\"rawOnMessage\",e.toObject()),this.completed||this.closed||this.onMessageCallbacks.forEach((function(r){if(!t.closed)try{r(e)}catch(e){setTimeout((function(){throw e}),0)}}))},e.prototype.onHeaders=function(e){this.onHeadersCallbacks.push(e)},e.prototype.onMessage=function(e){this.onMessageCallbacks.push(e)},e.prototype.onEnd=function(e){this.onEndCallbacks.push(e)},e.prototype.start=function(e){if(this.started)throw new Error(\"Client already started - cannot .start()\");this.started=!0;var t=new n.Metadata(e||{});t.set(\"content-type\",\"application/grpc-web+proto\"),t.set(\"x-grpc-web\",\"1\"),this.transport.start(t)},e.prototype.send=function(e){if(!this.started)throw new Error(\"Client not started - .start() must be called before .send()\");if(this.closed)throw new Error(\"Client already closed - cannot .send()\");if(this.finishedSending)throw new Error(\"Client already finished sending - cannot .send()\");if(!this.methodDefinition.requestStream&&this.sentFirstMessage)throw new Error(\"Message already sent for non-client-streaming method - cannot .send()\");this.sentFirstMessage=!0;var t=u.frameRequest(e);this.transport.sendMessage(t)},e.prototype.finishSend=function(){if(!this.started)throw new Error(\"Client not started - .finishSend() must be called before .close()\");if(this.closed)throw new Error(\"Client already closed - cannot .send()\");if(this.finishedSending)throw new Error(\"Client already finished sending - cannot .finishSend()\");this.finishedSending=!0,this.transport.finishSend()},e.prototype.close=function(){if(!this.started)throw new Error(\"Client not started - .start() must be called before .close()\");if(this.closed)throw new Error(\"Client already closed - cannot .close()\");this.closed=!0,this.props.debug&&i.debug(\"request.abort aborting request\"),this.transport.cancel()},e}();function c(e){var t=e.get(\"grpc-status\")||[];if(t.length>0)try{var r=t[0];return parseInt(r,10)}catch(e){return null}return null}},346:function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.debug=void 0,t.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];console.debug?console.debug.apply(null,e):console.log.apply(null,e)}},607:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.grpc=void 0;var n,o=r(418),s=r(57),i=r(229),a=r(540),u=r(210),d=r(859),c=r(8),p=r(938),h=r(35),f=r(934);(n=t.grpc||(t.grpc={})).setDefaultTransport=s.setDefaultTransportFactory,n.CrossBrowserHttpTransport=d.CrossBrowserHttpTransport,n.FetchReadableStreamTransport=i.FetchReadableStreamTransport,n.XhrTransport=u.XhrTransport,n.WebsocketTransport=a.WebsocketTransport,n.Code=c.Code,n.Metadata=o.BrowserHeaders,n.client=function(e,t){return f.client(e,t)},n.invoke=p.invoke,n.unary=h.unary},938:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.invoke=void 0;var n=r(934);t.invoke=function(e,t){if(e.requestStream)throw new Error(\".invoke cannot be used with client-streaming methods. Use .client instead.\");var r=n.client(e,{host:t.host,transport:t.transport,debug:t.debug});return t.onHeaders&&r.onHeaders(t.onHeaders),t.onMessage&&r.onMessage(t.onMessage),t.onEnd&&r.onEnd(t.onEnd),r.start(t.metadata),r.send(t.request),r.finishSend(),{close:function(){r.close()}}}},65:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Metadata=void 0;var n=r(418);Object.defineProperty(t,\"Metadata\",{enumerable:!0,get:function(){return n.BrowserHeaders}})},57:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.makeDefaultTransport=t.setDefaultTransportFactory=void 0;var n=r(859),o=function(e){return n.CrossBrowserHttpTransport({withCredentials:!1})(e)};t.setDefaultTransportFactory=function(e){o=e},t.makeDefaultTransport=function(e){return o(e)}},229:function(e,t,r){\"use strict\";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,\"__esModule\",{value:!0}),t.detectFetchSupport=t.FetchReadableStreamTransport=void 0;var o=r(65),s=r(346);t.FetchReadableStreamTransport=function(e){return function(t){return function(e,t){return e.debug&&s.debug(\"fetchRequest\",e),new i(e,t)}(t,e)}};var i=function(){function e(e,t){this.cancelled=!1,this.controller=self.AbortController&&new AbortController,this.options=e,this.init=t}return e.prototype.pump=function(e,t){var r=this;if(this.reader=e,this.cancelled)return this.options.debug&&s.debug(\"Fetch.pump.cancel at first pump\"),void this.reader.cancel().catch((function(e){r.options.debug&&s.debug(\"Fetch.pump.reader.cancel exception\",e)}));this.reader.read().then((function(e){if(e.done)return r.options.onEnd(),t;r.options.onChunk(e.value),r.pump(r.reader,t)})).catch((function(e){r.cancelled?r.options.debug&&s.debug(\"Fetch.catch - request cancelled\"):(r.cancelled=!0,r.options.debug&&s.debug(\"Fetch.catch\",e.message),r.options.onEnd(e))}))},e.prototype.send=function(e){var t=this;fetch(this.options.url,n(n({},this.init),{headers:this.metadata.toHeaders(),method:\"POST\",body:e,signal:this.controller&&this.controller.signal})).then((function(e){if(t.options.debug&&s.debug(\"Fetch.response\",e),t.options.onHeaders(new o.Metadata(e.headers),e.status),!e.body)return e;t.pump(e.body.getReader(),e)})).catch((function(e){t.cancelled?t.options.debug&&s.debug(\"Fetch.catch - request cancelled\"):(t.cancelled=!0,t.options.debug&&s.debug(\"Fetch.catch\",e.message),t.options.onEnd(e))}))},e.prototype.sendMessage=function(e){this.send(e)},e.prototype.finishSend=function(){},e.prototype.start=function(e){this.metadata=e},e.prototype.cancel=function(){var e=this;this.cancelled?this.options.debug&&s.debug(\"Fetch.cancel already cancelled\"):(this.cancelled=!0,this.controller?(this.options.debug&&s.debug(\"Fetch.cancel.controller.abort\"),this.controller.abort()):this.options.debug&&s.debug(\"Fetch.cancel.missing abort controller\"),this.reader?(this.options.debug&&s.debug(\"Fetch.cancel.reader.cancel\"),this.reader.cancel().catch((function(t){e.options.debug&&s.debug(\"Fetch.cancel.reader.cancel exception\",t)}))):this.options.debug&&s.debug(\"Fetch.cancel before reader\"))},e}();t.detectFetchSupport=function(){return\"undefined\"!=typeof Response&&Response.prototype.hasOwnProperty(\"body\")&&\"function\"==typeof Headers}},859:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CrossBrowserHttpTransport=void 0;var n=r(229),o=r(210);t.CrossBrowserHttpTransport=function(e){if(n.detectFetchSupport()){var t={credentials:e.withCredentials?\"include\":\"same-origin\"};return n.FetchReadableStreamTransport(t)}return o.XhrTransport({withCredentials:e.withCredentials})}},210:function(e,t,r){\"use strict\";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.stringToArrayBuffer=t.MozChunkedArrayBufferXHR=t.XHR=t.XhrTransport=void 0;var s=r(65),i=r(346),a=r(849);t.XhrTransport=function(e){return function(t){if(a.detectMozXHRSupport())return new d(t,e);if(a.detectXHROverrideMimeTypeSupport())return new u(t,e);throw new Error(\"This environment's XHR implementation cannot support binary transfer.\")}};var u=function(){function e(e,t){this.options=e,this.init=t}return e.prototype.onProgressEvent=function(){this.options.debug&&i.debug(\"XHR.onProgressEvent.length: \",this.xhr.response.length);var e=this.xhr.response.substr(this.index);this.index=this.xhr.response.length;var t=p(e);this.options.onChunk(t)},e.prototype.onLoadEvent=function(){this.options.debug&&i.debug(\"XHR.onLoadEvent\"),this.options.onEnd()},e.prototype.onStateChange=function(){this.options.debug&&i.debug(\"XHR.onStateChange\",this.xhr.readyState),this.xhr.readyState===XMLHttpRequest.HEADERS_RECEIVED&&this.options.onHeaders(new s.Metadata(this.xhr.getAllResponseHeaders()),this.xhr.status)},e.prototype.sendMessage=function(e){this.xhr.send(e)},e.prototype.finishSend=function(){},e.prototype.start=function(e){var t=this;this.metadata=e;var r=new XMLHttpRequest;this.xhr=r,r.open(\"POST\",this.options.url),this.configureXhr(),this.metadata.forEach((function(e,t){r.setRequestHeader(e,t.join(\", \"))})),r.withCredentials=Boolean(this.init.withCredentials),r.addEventListener(\"readystatechange\",this.onStateChange.bind(this)),r.addEventListener(\"progress\",this.onProgressEvent.bind(this)),r.addEventListener(\"loadend\",this.onLoadEvent.bind(this)),r.addEventListener(\"error\",(function(e){t.options.debug&&i.debug(\"XHR.error\",e),t.options.onEnd(e.error)}))},e.prototype.configureXhr=function(){this.xhr.responseType=\"text\",this.xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")},e.prototype.cancel=function(){this.options.debug&&i.debug(\"XHR.abort\"),this.xhr.abort()},e}();t.XHR=u;var d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.configureXhr=function(){this.options.debug&&i.debug(\"MozXHR.configureXhr: setting responseType to 'moz-chunked-arraybuffer'\"),this.xhr.responseType=\"moz-chunked-arraybuffer\"},t.prototype.onProgressEvent=function(){var e=this.xhr.response;this.options.debug&&i.debug(\"MozXHR.onProgressEvent: \",new Uint8Array(e)),this.options.onChunk(new Uint8Array(e))},t}(u);function c(e,t){var r=e.charCodeAt(t);if(r>=55296&&r<=56319){var n=e.charCodeAt(t+1);n>=56320&&n<=57343&&(r=65536+(r-55296<<10)+(n-56320))}return r}function p(e){for(var t=new Uint8Array(e.length),r=0,n=0;n<e.length;n++){var o=String.prototype.codePointAt?e.codePointAt(n):c(e,n);t[r++]=255&o}return t}t.MozChunkedArrayBufferXHR=d,t.stringToArrayBuffer=p},849:function(e,t){\"use strict\";var r;function n(){if(void 0!==r)return r;if(XMLHttpRequest){r=new XMLHttpRequest;try{r.open(\"GET\",\"https://localhost\")}catch(e){}}return r}function o(e){var t=n();if(!t)return!1;try{return t.responseType=e,t.responseType===e}catch(e){}return!1}Object.defineProperty(t,\"__esModule\",{value:!0}),t.detectXHROverrideMimeTypeSupport=t.detectMozXHRSupport=t.xhrSupportsResponseType=void 0,t.xhrSupportsResponseType=o,t.detectMozXHRSupport=function(){return\"undefined\"!=typeof XMLHttpRequest&&o(\"moz-chunked-arraybuffer\")},t.detectXHROverrideMimeTypeSupport=function(){return\"undefined\"!=typeof XMLHttpRequest&&XMLHttpRequest.prototype.hasOwnProperty(\"overrideMimeType\")}},540:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.WebsocketTransport=void 0;var n,o=r(346),s=r(617);!function(e){e[e.FINISH_SEND=1]=\"FINISH_SEND\"}(n||(n={}));var i=new Uint8Array([1]);t.WebsocketTransport=function(){return function(e){return function(e){e.debug&&o.debug(\"websocketRequest\",e);var t,r=function(e){if(\"https://\"===e.substr(0,8))return\"wss://\"+e.substr(8);if(\"http://\"===e.substr(0,7))return\"ws://\"+e.substr(7);throw new Error(\"Websocket transport constructed with non-https:// or http:// host.\")}(e.url),a=[];function u(e){if(e===n.FINISH_SEND)t.send(i);else{var r=e,o=new Int8Array(r.byteLength+1);o.set(new Uint8Array([0])),o.set(r,1),t.send(o)}}return{sendMessage:function(e){t&&t.readyState!==t.CONNECTING?u(e):a.push(e)},finishSend:function(){t&&t.readyState!==t.CONNECTING?u(n.FINISH_SEND):a.push(n.FINISH_SEND)},start:function(n){(t=new WebSocket(r,[\"grpc-websockets\"])).binaryType=\"arraybuffer\",t.onopen=function(){var r;e.debug&&o.debug(\"websocketRequest.onopen\"),t.send((r=\"\",n.forEach((function(e,t){r+=e+\": \"+t.join(\", \")+\"\\r\\n\"})),s.encodeASCII(r))),a.forEach((function(e){u(e)}))},t.onclose=function(t){e.debug&&o.debug(\"websocketRequest.onclose\",t),e.onEnd()},t.onerror=function(t){e.debug&&o.debug(\"websocketRequest.onerror\",t)},t.onmessage=function(t){e.onChunk(new Uint8Array(t.data))}},cancel:function(){e.debug&&o.debug(\"websocket.abort\"),t.close()}}}(e)}}},35:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.unary=void 0;var n=r(65),o=r(934);t.unary=function(e,t){if(e.responseStream)throw new Error(\".unary cannot be used with server-streaming methods. Use .invoke or .client instead.\");if(e.requestStream)throw new Error(\".unary cannot be used with client-streaming methods. Use .client instead.\");var r=null,s=null,i=o.client(e,{host:t.host,transport:t.transport,debug:t.debug});return i.onHeaders((function(e){r=e})),i.onMessage((function(e){s=e})),i.onEnd((function(e,o,i){t.onEnd({status:e,statusMessage:o,headers:r||new n.Metadata,message:s,trailers:i})})),i.start(t.metadata),i.send(t.request),i.finishSend(),{close:function(){i.close()}}}},882:function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.frameRequest=void 0,t.frameRequest=function(e){var t=e.serializeBinary(),r=new ArrayBuffer(t.byteLength+5);return new DataView(r,1,4).setUint32(0,t.length,!1),new Uint8Array(r,5).set(t),new Uint8Array(r)}}},t={},function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}(607);var e,t}));", "{ \"PACKAGE_VERSION\": \"0.14.0-alpha.1\" }\n", "{\n    \"version\": \"239\",\n    \"buildNumber\": \"148\",\n    \"baseUrl\": \"https://cf-st.sc-cdn.net/d/vzrhSjRylX02Y8J6eVgUV?go=IgsKCTIBBEgBUFxgAQ%3D%3D&uc=92\"\n}\n", "/**\n * Copy only those properties of an object which are not undefined.\n *\n * This can be useful when using `Object.assign(foo, bar)` or `{ ...foo, ...bar }` to copy values from one object to\n * another. There's a (rather annoying) difference between a property not existing in an object and that property\n * existing but having an undefined value. When copying values using either of the methods above, it's generally\n * expected that undefined properties won't overwrite defined properties. But that's not the behavior – this helper\n * function is needed to ensure undefined properties in `bar` don't clobber corresponding properties in `foo`.\n *\n * @param obj Any object, possibly with properties whose values are undefined.\n * @returns A copy of the input object, without keys whose values were undefined.\n */\nexport function copyDefinedProperties<T extends {}>(obj: T): T {\n    return Object.fromEntries(Object.entries(obj).filter(([_, value]) => value !== undefined)) as T;\n}\n", "import { CameraKitConfiguration } from \"./configuration\";\n\n/**\n * Prefix of override key on window object.\n */\nconst windowFieldPrefix = \"__snap_camkit_override__\";\n\n/**\n * Configuration overrides that are stored in session storage.\n */\ntype StoredOverrides = Pick<CameraKitConfiguration, \"wasmEndpointOverride\" | \"logger\" | \"logLevel\" | \"userAgentFlavor\">;\n\nconst configPropertiesToOverride: Array<keyof StoredOverrides> = [\n    \"wasmEndpointOverride\",\n    \"logger\",\n    \"logLevel\",\n    \"userAgentFlavor\",\n];\n\nconfigPropertiesToOverride.forEach((fieldToOverride) => {\n    defineWindowField(fieldToOverride);\n});\n\nfunction defineWindowField(propertyToOverride: keyof StoredOverrides) {\n    if (typeof window === \"undefined\") return;\n\n    Object.defineProperty(window, `${windowFieldPrefix}${propertyToOverride}`, {\n        get() {\n            return getConfigurationOverrides()?.[propertyToOverride];\n        },\n        set(value: any) {\n            const storedOverrides = { ...getConfigurationOverrides(), [propertyToOverride]: value };\n            if (Object.values(storedOverrides).every((value) => typeof value === \"undefined\")) {\n                sessionStorage.removeItem(windowFieldPrefix);\n            } else {\n                sessionStorage.setItem(windowFieldPrefix, JSON.stringify(storedOverrides));\n            }\n        },\n        enumerable: false,\n        configurable: true,\n    });\n}\n\n/**\n * Checks whether there are configuration overrides stored, and if yes, returns them.\n *\n * @internal\n */\nexport function getConfigurationOverrides(): StoredOverrides | undefined {\n    if (!sessionStorage) return undefined;\n    const overridesString = sessionStorage.getItem(windowFieldPrefix);\n    return overridesString && JSON.parse(overridesString);\n}\n", "import { InjectableFunction, ServicesFromTokenizedParams } from \"./types\";\n\n/**\n * Create an Injectable function with no dependencies (i.e. arguments).\n *\n * Ex:\n * ```ts\n * const createMyService = Factory(\n *   'MyService',\n *   () => { ... },\n * )\n * ```\n *\n * @param token A unique string Token which will correspond to the created Service.\n * @param fn A function with no arguments which returns the Service.\n */\nexport function Injectable<Token extends string, Service>(\n    token: Token,\n    fn: () => Service\n): InjectableFunction<any, [], Token, Service>;\n\n/**\n * Create an Injectable function with dependencies (i.e. arguments).\n *\n * **Note:** the list of dependencies must be readonly – that is, a literal tuple marked `as const`. This tuple must\n * contain only string literals or string consts.\n *\n * Ex:\n * ```ts\n * const DependencyB = 'DependencyB'\n * const createMyService = Factory(\n *   'MyService',\n *   ['DependencyA', DependencyB] as const,\n *   (a: A, b: B) => { ... },\n * )\n * ```\n *\n * @param token A unique string Token which will correspond to the created Service.\n * @param dependencies A *readonly* list of Tokens corresponding to dependencies (i.e. arguments to the Factory), which\n * will be resolved by the Container to which this Factory is provided.\n * @param fn A function with arguments matching in type and length to the given list of dependencies. When called, it\n * must return the Service.\n */\nexport function Injectable<\n    Token extends string,\n    Tokens extends readonly string[],\n    Params extends readonly any[],\n    Service\n>(\n    token: Token,\n    dependencies: Tokens,\n    // The function arity (number of arguments) must match the number of dependencies specified – if they don't, we'll\n    // force a compiler error by saying the arguments should be `void[]`. We'll also throw at runtime, so the return\n    // type will be `never`.\n    fn: (...args: Tokens[\"length\"] extends Params[\"length\"] ? Params : void[]) => Service\n): Tokens[\"length\"] extends Params[\"length\"]\n    ? InjectableFunction<ServicesFromTokenizedParams<Tokens, Params>, Tokens, Token, Service>\n    : never;\n\nexport function Injectable(\n    token: string,\n    dependenciesOrFn?: readonly string[] | (() => any),\n    maybeFn?: (...args: any[]) => any\n): InjectableFunction<any, readonly string[], string, any> {\n    const dependencies: string[] = Array.isArray(dependenciesOrFn) ? dependenciesOrFn : [];\n    const fn = typeof dependenciesOrFn === \"function\" ? dependenciesOrFn : maybeFn;\n\n    if (!fn) {\n        throw new TypeError(\n            \"[Factory] Received invalid arguments. The factory function must be either the second \" +\n                \"or third argument.\"\n        );\n    }\n\n    if (fn.length !== dependencies.length) {\n        throw new TypeError(\n            \"[Factory] Function arity does not match the number of dependencies. Function has arity \" +\n                `${fn.length}, but ${dependencies.length} dependencies were specified.` +\n                `\\nDependencies: ${JSON.stringify(dependencies)}`\n        );\n    }\n\n    const factory = (...args: any[]) => fn(...args);\n    factory.token = token;\n    factory.dependencies = dependencies;\n    return factory;\n}\n", "import { EstimatedLensPerformance } from \"./benchmark/estimateLensPerformanceCluster\";\nimport { copyDefinedProperties } from \"./common/copyDefinedProperties\";\nimport { getConfigurationOverrides } from \"./configurationOverrides\";\nimport { Injectable } from \"./dependency-injection/Injectable\";\nimport { LogLevelName } from \"./logger/logger\";\n\n/**\n * From T, pick the set of properties whose values are optional. Create a new type containing only those properties.\n */\ntype PickOptionals<T> = {\n    [K in keyof T as T[K] extends Exclude<T[K], undefined> ? never : K]: T[K];\n};\n\n/**\n * Defaults are provided for runtime configuration and any optional bootstrap configuration properties which require\n * defaults.\n */\nconst defaultConfiguration: CameraKitRuntimeConfiguration & PickOptionals<CameraKitBootstrapConfiguration> = {\n    // If the applications doesn't provide performance data (e.g. via estimateLensPerformance), we'll use 0 to indicate\n    // no performance estimation occurred. This is indicative of typical performance-targeting logic, which often\n    // defaults to the lowest-tier experience in the absense of performance cluster data.\n    lensPerformance: { cluster: 0, benchmarks: [], webglRendererInfo: \"unknown\" },\n    logger: \"noop\",\n    logLevel: \"info\",\n    shouldUseWorker: true,\n    apiHostname: \"camera-kit-api.snapar.com\",\n    userAgentFlavor: \"release\",\n};\n\ninterface CameraKitRuntimeConfiguration {\n    lensPerformance: EstimatedLensPerformance | Promise<EstimatedLensPerformance>;\n    logger: \"noop\" | \"console\";\n    logLevel: LogLevelName;\n    shouldUseWorker: boolean;\n    apiHostname: CameraKitApiHostname;\n    userAgentFlavor: \"release\" | \"debug\";\n}\n\nexport type CameraKitApiHostname = \"camera-kit-api.snapar.com\" | \"api-kit.snapchat.com\";\n\n/**\n * Configuration which must be provided when calling {@link bootstrapCameraKit}. These values are used to create various\n * CameraKit components.\n *\n * @category Bootstrapping and Configuration\n */\nexport interface CameraKitBootstrapConfiguration {\n    /**\n     * Long-lived token granting your application access to CameraKit APIs. This is found in the SnapKit Dev Portal,\n     * where it's called the API Token.\n     */\n    apiToken: string;\n\n    /**\n     * Determine where to print CameraKit log messages. By default no logs will be printed.\n     *\n     * CameraKit emits log messages to help diagnose and root cause issues that may occur during the development of a\n     * host application. The printing of these can be controlled via the following\n     * options:\n     *  - `noop`: log messages are ignored.\n     *  - `console`: log messages are printed to console.\n     */\n    logger?: \"noop\" | \"console\";\n\n    /**\n     * Log only if a logged entry level is greater than or equal to this level. Here is the order of levels:\n     * error > warn > log = info > debug. Default value is \"info\".\n     */\n    logLevel?: LogLevelName;\n\n    /**\n     * Some lenses may decide to modify their behavior based on the performance of the current environment. If you are\n     * using such lenses, providing an estimation of lens performance may lead to better user experience (especially on\n     * low-performance devices).\n     *\n     * Running the {@link estimateLensPerformance} function will run benchmarks and estimate an appropriate lens\n     * performance cluster (i.e. a performance rating) based on the current environment.\n     *\n     * Lower cluster = worse expected performance capability.\n     *\n     * @example\n     * ```ts\n     * import { bootstrapCameraKit, estimateLensPerformance } from '@snap/camera-kit`\n     *\n     * const cameraKit = await bootstrapCameraKit({\n     *   apiToken: '...',\n     *   lensPerformance: estimateLensPerformance(),\n     * })\n     * ```\n     */\n    lensPerformance?: EstimatedLensPerformance | Promise<EstimatedLensPerformance>;\n\n    /**\n     * In recommended production deployments, the WebAssembly assets required by CameraKit will be downloaded from an\n     * optimized CDN. But sometimes (e.g. during development or within a CI pipeline), it may be necessary to download\n     * these assets from somewhere else.\n     *\n     * This configuration option allows the application to specify URLs to be used for both the WebAssembly and JS glue\n     * file that are used to run and interact with CameraKit's rendering engine.\n     */\n    lensCoreOverrideUrls?: { wasm: string; js: string };\n\n    /**\n     * In recommended production deployments, the WebAssembly assets required by CameraKit will be downloaded from an\n     * optimized CDN. But sometimes during development or within a CI pipeline, it may be necessary to download these\n     * assets from somewhere else. With a provided `wasmEndpointOverride`, asset URLs will be automatically generated\n     * based on this root endpoint.\n     */\n    wasmEndpointOverride?: string;\n\n    /**\n     * Applications may optionally provide a unique identifier called analyticsId. This ID would enable Camera Kit to\n     * improve data reporting and accuracy and to better support potential needs related to an application's lens and\n     * user analytics.\n     */\n    analyticsId?: string;\n}\n\n/**\n * This type represents the result of merging user-supplied config with default config -- as such, it has no nullable\n * fields, making it a more convenient type for other components to use.\n *\n * @internal\n */\nexport type CameraKitConfiguration = CameraKitRuntimeConfiguration & CameraKitBootstrapConfiguration;\n\n/** @internal */\nexport const configurationToken = \"configuration\";\n\n/** @internal */\nexport const createCameraKitConfigurationFactory = (configuration: CameraKitBootstrapConfiguration) => {\n    // always leave debug mode warning about overrides in console\n    const overrides = getConfigurationOverrides();\n    if (overrides) {\n        console.warn(\"Configuration overrides applied\", overrides);\n    }\n    return Injectable(configurationToken, (): CameraKitConfiguration => {\n        // We'll ensure that we handle errors on any Promises passed as config values, otherwise we either must\n        // handle them separately wherever they're used, or rejections would go unhandled.\n        const safeConfig: CameraKitBootstrapConfiguration = {\n            ...configuration,\n            lensPerformance:\n                configuration.lensPerformance instanceof Promise\n                    ? // Safety: defaultConfiguration.lensPerformance is defined (it's hardcoded above).\n                      configuration.lensPerformance.catch(() => defaultConfiguration.lensPerformance!)\n                    : configuration.lensPerformance,\n        };\n        return {\n            ...defaultConfiguration,\n            ...copyDefinedProperties(safeConfig),\n            ...copyDefinedProperties(overrides ?? {}),\n        };\n    });\n};\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n", "/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n", "/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n", "/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n", "import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n", "/* tslint:disable:no-empty */\nexport function noop() { }\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n", "import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n", "/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n", "/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n", "import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n", "import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n", "import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n", "import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n", "import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n", "import { Observable } from '../../Observable';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n\n    let id = 0;\n    const run = () => {\n      if (!subscriber.closed) {\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\n          id = 0;\n          // Use the provider's timestamp to calculate the elapsed time. Note that\n          // this means - if the caller hasn't passed a provider - that\n          // performance.now() will be used instead of the timestamp that was\n          // passed to the run callback. The reason for this is that the timestamp\n          // passed to the callback can be earlier than the start time, as it\n          // represents the time at which the browser decided it would render any\n          // queued frames - and that time can be earlier the captured start time.\n          const now = provider.now();\n          subscriber.next({\n            timestamp: timestampProvider ? now : timestamp,\n            elapsed: now - start,\n          });\n          run();\n        });\n      }\n    };\n\n    run();\n\n    return () => {\n      if (id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n      }\n    };\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n", "import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n", "import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n", "let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n", "import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      immediateProvider.clearImmediate(id);\n      if (scheduler._scheduled === id) {\n        scheduler._scheduled = undefined;\n      }\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    // Otherwise flush the scheduler starting with this action.\n    scheduler.flush(this);\n\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\n    // `TimerHandle`, and generally the return value here isn't really used. So the\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\n    return 0;\n  }\n}\n", "import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n", "import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      animationFrameProvider.cancelAnimationFrame(id as number);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return 1;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n", "import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n", "import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n", "/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n", "export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n", "import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n", "import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n", "import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n", "/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n", "import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n", "import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n", "import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n", "import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n", "import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n", "/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time we get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n", "import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}", "const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n", "export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an empty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n", "import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n", "import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n", "import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n", "import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInput } from '../types';\nimport { innerFrom } from './innerFrom';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create an Observable only when the Observer\n * subscribes. It waits until an Observer subscribes to it, calls the given\n * factory function to get an Observable -- where a factory function typically\n * generates a new Observable -- and subscribes the Observer to this Observable.\n * In case the factory function returns a falsy value, then EMPTY is used as\n * Observable instead. Last but not least, an exception during the factory\n * function call is transferred to the Observer by calling `error`.\n *\n * ## Example\n *\n * Subscribe to either an Observable of clicks or an Observable of interval, at random\n *\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(() => {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): ObservableInput} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n */\nexport function defer<R extends ObservableInput<any>>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>((subscriber) => {\n    innerFrom(observableFactory()).subscribe(subscriber);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInputTuple, ObservableInput } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nimport { AnyCatcher } from '../AnyCatcher';\n\n// forkJoin(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function forkJoin<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// forkJoin(null | undefined)\nexport function forkJoin(scheduler: null | undefined): Observable<never>;\n\n// forkJoin([a, b, c])\nexport function forkJoin(sources: readonly []): Observable<never>;\nexport function forkJoin<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\nexport function forkJoin<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n\n// forkJoin(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n// forkJoin({a, b, c})\nexport function forkJoin(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function forkJoin<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\n * complete immediately if an empty array is passed.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\n * then the resulting stream will complete immediately.\n *\n * `forkJoin` will wait for all passed observables to emit and complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, then the resulting\n * array will have `n` values, where the first value is the last one emitted by the first observable,\n * second value is the last one emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, then the resulting\n * objects will have the same keys as the dictionary passed, with their last values they have emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of the lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for the resulting array to have the same length as the number of input observables, whenever any of\n * the given observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete either,\n * unless at any point some other observable completes without emitting a value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all given observables\n * have to emit something at least once and complete.\n *\n * If any given observable errors at some point, `forkJoin` will error as well and immediately unsubscribe\n * from the other observables.\n *\n * Optionally `forkJoin` accepts a `resultSelector` function, that will be called with values which normally\n * would land in the emitted array. Whatever is returned by the `resultSelector`, will appear in the output\n * observable instead. This means that the default `resultSelector` can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that the `resultSelector` will be called only\n * when `forkJoin` is supposed to emit a result.\n *\n * ## Examples\n *\n * Use `forkJoin` with a dictionary of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000)\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * Use `forkJoin` with an array of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000)\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} args Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(...args: any[]): Observable<any> {\n  const resultSelector = popResultSelector(args);\n  const { args: sources, keys } = argsArgArrayOrObject(args);\n  const result = new Observable((subscriber) => {\n    const { length } = sources;\n    if (!length) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(length);\n    let remainingCompletions = length;\n    let remainingEmissions = length;\n    for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n      let hasValue = false;\n      innerFrom(sources[sourceIndex]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            if (!hasValue) {\n              hasValue = true;\n              remainingEmissions--;\n            }\n            values[sourceIndex] = value;\n          },\n          () => remainingCompletions--,\n          undefined,\n          () => {\n            if (!remainingCompletions || !hasValue) {\n              if (!remainingEmissions) {\n                subscriber.next(keys ? createObject(keys, values) : values);\n              }\n              subscriber.complete();\n            }\n          }\n        )\n      );\n    }\n  });\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * // note optional configuration parameter which will be passed to addEventListener\n * const clicksInDocument = fromEvent(document, 'click', { capture: true });\n * const clicksInDiv = fromEvent(div, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n", "const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { Subscriber } from '../Subscriber';\n\nexport function race<T extends readonly unknown[]>(inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function race<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\n\n/**\n * Returns an observable that mirrors the first source observable to emit an item.\n *\n * ![](race.png)\n *\n * `race` returns an observable, that when subscribed to, subscribes to all source observables immediately.\n * As soon as one of the source observables emits a value, the result unsubscribes from the other sources.\n * The resulting observable will forward all notifications, including error and completion, from the \"winning\"\n * source observable.\n *\n * If one of the used source observable throws an errors before a first notification\n * the race operator will also throw an error, no matter if another source observable\n * could potentially win the race.\n *\n * `race` can be useful for selecting the response from the fastest network connection for\n * HTTP or WebSockets. `race` can also be useful for switching observable context based on user\n * input.\n *\n * ## Example\n *\n * Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { interval, map, race } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * race(obs1, obs2, obs3)\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n */\nexport function race<T>(...sources: (ObservableInput<T> | ObservableInput<T>[])[]): Observable<any> {\n  sources = argsOrArgArray(sources);\n  // If only one source was passed, just return it. Otherwise return the race.\n  return sources.length === 1 ? innerFrom(sources[0] as ObservableInput<T>) : new Observable<T>(raceInit(sources as ObservableInput<T>[]));\n}\n\n/**\n * An observable initializer function for both the static version and the\n * operator version of race.\n * @param sources The sources to race\n */\nexport function raceInit<T>(sources: ObservableInput<T>[]) {\n  return (subscriber: Subscriber<T>) => {\n    let subscriptions: Subscription[] = [];\n\n    // Subscribe to all of the sources. Note that we are checking `subscriptions` here\n    // Is is an array of all actively \"racing\" subscriptions, and it is `null` after the\n    // race has been won. So, if we have racer that synchronously \"wins\", this loop will\n    // stop before it subscribes to any more.\n    for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      subscriptions.push(\n        innerFrom(sources[i] as ObservableInput<T>).subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            if (subscriptions) {\n              // We're still racing, but we won! So unsubscribe\n              // all other subscriptions that we have, except this one.\n              for (let s = 0; s < subscriptions.length; s++) {\n                s !== i && subscriptions[s].unsubscribe();\n              }\n              subscriptions = null!;\n            }\n            subscriber.next(value);\n          })\n        )\n      );\n    }\n  };\n}\n", "import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n", "import { combineLatestInit } from '../observable/combineLatest';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  project: (...values: [T, ...A]) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  ...sourcesAndProject: [...ObservableInputTuple<A>, (...values: [T, ...A]) => R]\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/**\n * @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8.\n */\nexport function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {\n  const resultSelector = popResultSelector(args);\n  return resultSelector\n    ? pipe(combineLatest(...(args as Array<ObservableInput<any>>)), mapOneOrManyArgs(resultSelector))\n    : operate((source, subscriber) => {\n        combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n      });\n}\n", "import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { combineLatest } from './combineLatest';\n\n/**\n * Create an observable that combines the latest values from all passed observables and the source\n * into arrays and emits them.\n *\n * Returns an observable, that when subscribed to, will subscribe to the source observable and all\n * sources provided as arguments. Once all sources emit at least one value, all of the latest values\n * will be emitted as an array. After that, every time any source emits a value, all of the latest values\n * will be emitted as an array.\n *\n * This is a useful operator for eagerly calculating values based off of changed inputs.\n *\n * ## Example\n *\n * Simple concatenation of values from two inputs\n *\n * ```ts\n * import { fromEvent, combineLatestWith, map } from 'rxjs';\n *\n * // Setup: Add two inputs to the page\n * const input1 = document.createElement('input');\n * document.body.appendChild(input1);\n * const input2 = document.createElement('input');\n * document.body.appendChild(input2);\n *\n * // Get streams of changes\n * const input1Changes$ = fromEvent(input1, 'change');\n * const input2Changes$ = fromEvent(input2, 'change');\n *\n * // Combine the changes by adding them together\n * input1Changes$.pipe(\n *   combineLatestWith(input2Changes$),\n *   map(([e1, e2]) => (<HTMLInputElement>e1.target).value + ' - ' + (<HTMLInputElement>e2.target).value)\n * )\n * .subscribe(x => console.log(x));\n * ```\n *\n * @param otherSources the other sources to subscribe to.\n * @return A function that returns an Observable that emits the latest\n * emissions from both source and provided Observables.\n */\nexport function combineLatestWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, Cons<T, A>> {\n  return combineLatest(...otherSources);\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaustAll}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, exhaustMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(() => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable containing projected\n * Observables of each item of the source, ignoring projected Observables that\n * start before their preceding Observable has completed.\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));\n  }\n  return operate((source, subscriber) => {\n    let index = 0;\n    let innerSub: Subscriber<T> | null = null;\n    let isComplete = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (outerValue) => {\n          if (!innerSub) {\n            innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n              innerSub = null;\n              isComplete && subscriber.complete();\n            });\n            innerFrom(project(outerValue, index++)).subscribe(innerSub);\n          }\n        },\n        () => {\n          isComplete = true;\n          !innerSub && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n", "import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { raceInit } from '../observable/race';\nimport { operate } from '../util/lift';\nimport { identity } from '../util/identity';\n\n/**\n * Creates an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of the Observable to which\n * the operator is applied and supplied Observables.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, raceWith } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * obs1\n *   .pipe(raceWith(obs2, obs3))\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param otherSources Sources used to race for which Observable emits first.\n * @return A function that returns an Observable that mirrors the output of the\n * first Observable to emit an item.\n */\nexport function raceWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return !otherSources.length\n    ? identity\n    : operate((source, subscriber) => {\n        raceInit<T | A[number]>([source, ...otherSources])(subscriber);\n      });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { Subscription } from '../Subscription';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * The {@link retry} operator configuration object. `retry` either accepts a `number`\n * or an object described by this interface.\n */\nexport interface RetryConfig {\n  /**\n   * The maximum number of times to retry. If `count` is omitted, `retry` will try to\n   * resubscribe on errors infinite number of times.\n   */\n  count?: number;\n  /**\n   * The number of milliseconds to delay before retrying, OR a function to\n   * return a notifier for delaying. If a function is given, that function should\n   * return a notifier that, when it emits will retry the source. If the notifier\n   * completes _without_ emitting, the resulting observable will complete without error,\n   * if the notifier errors, the error will be pushed to the result.\n   */\n  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);\n  /**\n   * Whether or not to reset the retry counter when the retried subscription\n   * emits its first value.\n   */\n  resetOnSuccess?: boolean;\n}\n\nexport function retry<T>(count?: number): MonoTypeOperatorFunction<T>;\nexport function retry<T>(config: RetryConfig): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`.\n *\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * `count` resubscriptions rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * The number of retries is determined by the `count` parameter. It can be set either by passing a number to\n * `retry` function or by setting `count` property when `retry` is configured using {@link RetryConfig}. If\n * `count` is omitted, `retry` will try to resubscribe on errors infinite number of times.\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\n * emitted during failed subscriptions. For example, if an Observable fails at first but emits `[1, 2]` then\n * succeeds the second time and emits: `[1, 2, 3, 4, 5, complete]` then the complete stream of emissions and\n * notifications would be: `[1, 2, 1, 2, 3, 4, 5, complete]`.\n *\n * ## Example\n *\n * ```ts\n * import { interval, mergeMap, throwError, of, retry } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   mergeMap(val => val > 5 ? throwError(() => 'Error!') : of(val)),\n *   retry(2) // retry 2 times on error\n * );\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(`${ err }: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 'Error!: Retried 2 times then quit!'\n * ```\n *\n * @see {@link retryWhen}\n *\n * @param configOrCount - Either number of retry attempts before failing or a {@link RetryConfig} object.\n * @return A function that returns an Observable that will resubscribe to the\n * source stream when the source stream errors, at most `count` times.\n */\nexport function retry<T>(configOrCount: number | RetryConfig = Infinity): MonoTypeOperatorFunction<T> {\n  let config: RetryConfig;\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount as number,\n    };\n  }\n  const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\n\n  return count <= 0\n    ? identity\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let innerSub: Subscription | null;\n        const subscribeForRetry = () => {\n          let syncUnsub = false;\n          innerSub = source.subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                // If we're resetting on success\n                if (resetOnSuccess) {\n                  soFar = 0;\n                }\n                subscriber.next(value);\n              },\n              // Completions are passed through to consumer.\n              undefined,\n              (err) => {\n                if (soFar++ < count) {\n                  // We are still under our retry count\n                  const resub = () => {\n                    if (innerSub) {\n                      innerSub.unsubscribe();\n                      innerSub = null;\n                      subscribeForRetry();\n                    } else {\n                      syncUnsub = true;\n                    }\n                  };\n\n                  if (delay != null) {\n                    // The user specified a retry delay.\n                    // They gave us a number, use a timer, otherwise, it's a function,\n                    // and we're going to call it to get a notifier.\n                    const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                    const notifierSubscriber = createOperatorSubscriber(\n                      subscriber,\n                      () => {\n                        // After we get the first notification, we\n                        // unsubscribe from the notifier, because we don't want anymore\n                        // and we resubscribe to the source.\n                        notifierSubscriber.unsubscribe();\n                        resub();\n                      },\n                      () => {\n                        // The notifier completed without emitting.\n                        // The author is telling us they want to complete.\n                        subscriber.complete();\n                      }\n                    );\n                    notifier.subscribe(notifierSubscriber);\n                  } else {\n                    // There was no notifier given. Just resub immediately.\n                    resub();\n                  }\n                } else {\n                  // We're past our maximum number of retries.\n                  // Just send along the error.\n                  subscriber.error(err);\n                }\n              }\n            )\n          );\n          if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            subscribeForRetry();\n          }\n        };\n        subscribeForRetry();\n      });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\n\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\n\n/**\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\n * to each value from the source after an initial state is established -- either via\n * a `seed` value (second argument), or from the first value from the source.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation state after each update</span>\n *\n * ![](scan.png)\n *\n * This operator maintains an internal state and emits it after processing each value as follows:\n *\n * 1. First value arrives\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\n * 2. Let `state = accumulator(state, value)`.\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\n * 3. Emit `state`.\n * 4. Next value arrives, let `value = nextValue`, go to 2.\n *\n * ## Examples\n *\n * An average of previous numbers. This example shows how\n * not providing a `seed` can prime the stream with the\n * first value from the source.\n *\n * ```ts\n * import { of, scan, map } from 'rxjs';\n *\n * const numbers$ = of(1, 2, 3);\n *\n * numbers$\n *   .pipe(\n *     // Get the sum of the numbers coming in.\n *     scan((total, n) => total + n),\n *     // Get the average by dividing the sum by the total number\n *     // received so far (which is 1 more than the zero-based index).\n *     map((sum, index) => sum / (index + 1))\n *   )\n *   .subscribe(console.log);\n * ```\n *\n * The Fibonacci sequence. This example shows how you can use\n * a seed to prime accumulation process. Also... you know... Fibonacci.\n * So important to like, computers and stuff that its whiteboarded\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\n *\n * ```ts\n * import { interval, scan, map, startWith } from 'rxjs';\n *\n * const firstTwoFibs = [0, 1];\n * // An endless stream of Fibonacci numbers.\n * const fibonacci$ = interval(1000).pipe(\n *   // Scan to get the fibonacci numbers (after 0, 1)\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\n *   // Get the second number in the tuple, it's the one you calculated\n *   map(([, n]) => n),\n *   // Start with our first two digits :)\n *   startWith(...firstTwoFibs)\n * );\n *\n * fibonacci$.subscribe(console.log);\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n * @see {@link switchScan}\n *\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\n * acquired.\n * @param seed The initial state. If this is not provided, the first value from the source will\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\n * will be processed by the accumulator function. If this is provided, all values will go through\n * the accumulator function.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubjectLike, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\n\nexport interface ShareConfig<T> {\n  /**\n   * The factory used to create the subject that will connect the source observable to\n   * multicast consumers.\n   */\n  connector?: () => SubjectLike<T>;\n  /**\n   * If `true`, the resulting observable will reset internal state on error from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"retried\" in the event of an error.\n   * If `false`, when an error comes from the source it will push the error into the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent retries\n   * or resubscriptions will resubscribe to that same subject. In all cases, RxJS subjects will emit the same error again, however\n   * {@link ReplaySubject} will also push its buffered values before pushing the error.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnError?: boolean | ((error: any) => ObservableInput<any>);\n  /**\n   * If `true`, the resulting observable will reset internal state on completion from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"repeated\" after it is done.\n   * If `false`, when the source completes, it will push the completion through the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent repeats\n   * or resubscriptions will resubscribe to that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnComplete?: boolean | (() => ObservableInput<any>);\n  /**\n   * If `true`, when the number of subscribers to the resulting observable reaches zero due to those subscribers unsubscribing, the\n   * internal state will be reset and the resulting observable will return to a \"cold\" state. This means that the next\n   * time the resulting observable is subscribed to, a new subject will be created and the source will be subscribed to\n   * again.\n   * If `false`, when the number of subscribers to the resulting observable reaches zero due to unsubscription, the subject\n   * will remain connected to the source, and new subscriptions to the result will be connected through that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnRefCountZero?: boolean | (() => ObservableInput<any>);\n}\n\nexport function share<T>(): MonoTypeOperatorFunction<T>;\n\nexport function share<T>(options: ShareConfig<T>): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * The subscription to the underlying source Observable can be reset (unsubscribe and resubscribe for new subscribers),\n * if the subscriber count to the shared observable drops to 0, or if the source Observable errors or completes. It is\n * possible to use notifier factories for the resets to allow for behaviors like conditional or delayed resets. Please\n * note that resetting on error or complete of the source Observable does not behave like a transparent retry or restart\n * of the source because the error or complete will be forwarded to all subscribers and their subscription will be\n * closed. Only new subscribers after a reset on error or complete happened will cause a fresh subscription to the\n * source. To achieve transparent retries or restarts pipe the source through appropriate operators before sharing.\n *\n * ![](share.png)\n *\n * ## Example\n *\n * Generate new multicast Observable from the `source` Observable value\n *\n * ```ts\n * import { interval, tap, map, take, share } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   tap(x => console.log('Processing: ', x)),\n *   map(x => x * x),\n *   take(6),\n *   share()\n * );\n *\n * source.subscribe(x => console.log('subscription 1: ', x));\n * source.subscribe(x => console.log('subscription 2: ', x));\n *\n * // Logs:\n * // Processing: 0\n * // subscription 1: 0\n * // subscription 2: 0\n * // Processing: 1\n * // subscription 1: 1\n * // subscription 2: 1\n * // Processing: 2\n * // subscription 1: 4\n * // subscription 2: 4\n * // Processing: 3\n * // subscription 1: 9\n * // subscription 2: 9\n * // Processing: 4\n * // subscription 1: 16\n * // subscription 2: 16\n * // Processing: 5\n * // subscription 1: 25\n * // subscription 2: 25\n * ```\n *\n * ## Example with notifier factory: Delayed reset\n *\n * ```ts\n * import { interval, take, share, timer } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   take(3),\n *   share({\n *     resetOnRefCountZero: () => timer(1000)\n *   })\n * );\n *\n * const subscriptionOne = source.subscribe(x => console.log('subscription 1: ', x));\n * setTimeout(() => subscriptionOne.unsubscribe(), 1300);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 2: ', x)), 1700);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 3: ', x)), 5000);\n *\n * // Logs:\n * // subscription 1:  0\n * // (subscription 1 unsubscribes here)\n * // (subscription 2 subscribes here ~400ms later, source was not reset)\n * // subscription 2:  1\n * // subscription 2:  2\n * // (subscription 2 unsubscribes here)\n * // (subscription 3 subscribes here ~2000ms later, source did reset before)\n * // subscription 3:  0\n * // subscription 3:  1\n * // subscription 3:  2\n * ```\n *\n * @see {@link shareReplay}\n *\n * @return A function that returns an Observable that mirrors the source.\n */\nexport function share<T>(options: ShareConfig<T> = {}): MonoTypeOperatorFunction<T> {\n  const { connector = () => new Subject<T>(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n  // It's necessary to use a wrapper here, as the _operator_ must be\n  // referentially transparent. Otherwise, it cannot be used in calls to the\n  // static `pipe` function - to create a partial pipeline.\n  //\n  // The _operator function_ - the function returned by the _operator_ - will\n  // not be referentially transparent - as it shares its source - but the\n  // _operator function_ is called when the complete pipeline is composed via a\n  // call to a source observable's `pipe` method - not when the static `pipe`\n  // function is called.\n  return (wrapperSource) => {\n    let connection: SafeSubscriber<T> | undefined;\n    let resetConnection: Subscription | undefined;\n    let subject: SubjectLike<T> | undefined;\n    let refCount = 0;\n    let hasCompleted = false;\n    let hasErrored = false;\n\n    const cancelReset = () => {\n      resetConnection?.unsubscribe();\n      resetConnection = undefined;\n    };\n    // Used to reset the internal state to a \"cold\"\n    // state, as though it had never been subscribed to.\n    const reset = () => {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    const resetAndUnsubscribe = () => {\n      // We need to capture the connection before\n      // we reset (if we need to reset).\n      const conn = connection;\n      reset();\n      conn?.unsubscribe();\n    };\n\n    return operate<T, T>((source, subscriber) => {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      // Create the subject if we don't have one yet. Grab a local reference to\n      // it as well, which avoids non-null assertions when using it and, if we\n      // connect to it now, then error/complete need a reference after it was\n      // reset.\n      const dest = (subject = subject ?? connector());\n\n      // Add the finalization directly to the subscriber - instead of returning it -\n      // so that the handling of the subscriber's unsubscription will be wired\n      // up _before_ the subscription to the source occurs. This is done so that\n      // the assignment to the source connection's `closed` property will be seen\n      // by synchronous firehose sources.\n      subscriber.add(() => {\n        refCount--;\n\n        // If we're resetting on refCount === 0, and it's 0, we only want to do\n        // that on \"unsubscribe\", really. Resetting on error or completion is a different\n        // configuration.\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n\n      // The following line adds the subscription to the subscriber passed.\n      // Basically, `subscriber === dest.subscribe(subscriber)` is `true`.\n      dest.subscribe(subscriber);\n\n      if (\n        !connection &&\n        // Check this shareReplay is still activate - it can be reset to 0\n        // and be \"unsubscribed\" _before_ it actually subscribes.\n        // If we were to subscribe then, it'd leak and get stuck.\n        refCount > 0\n      ) {\n        // We need to create a subscriber here - rather than pass an observer and\n        // assign the returned subscription to connection - because it's possible\n        // for reentrant subscriptions to the shared observable to occur and in\n        // those situations we want connection to be already-assigned so that we\n        // don't create another connection to the source.\n        connection = new SafeSubscriber({\n          next: (value) => dest.next(value),\n          error: (err) => {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: () => {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          },\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset<T extends unknown[] = never[]>(\n  reset: () => void,\n  on: boolean | ((...args: T) => ObservableInput<any>),\n  ...args: T\n): Subscription | undefined {\n  if (on === true) {\n    reset();\n    return;\n  }\n\n  if (on === false) {\n    return;\n  }\n\n  const onSubscriber = new SafeSubscriber({\n    next: () => {\n      onSubscriber.unsubscribe();\n      reset();\n    },\n  });\n\n  return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n", "import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplay`ed observable forever,\n * but an errored source can be retried.\n *\n * ## Why use `shareReplay`?\n *\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ## Reference counting\n *\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param configOrBufferSize Maximum element count of the replay buffer or {@link ShareReplayConfig configuration}\n * object.\n * @param windowTime Maximum time length of the replay buffer in milliseconds.\n * @param scheduler Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n", "import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n", "import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switchAll}.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n *\n * Tick every second until the first click happens\n *\n * ```ts\n * import { interval, fromEvent, takeUntil } from 'rxjs';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return A function that returns an Observable that emits the values from the\n * source Observable until `notifier` emits its first value.\n */\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n    !subscriber.closed && source.subscribe(subscriber);\n  });\n}\n", "import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\n/**\n * An extension to the {@link Observer} interface used only by the {@link tap} operator.\n *\n * It provides a useful set of callbacks a user can register to do side-effects in\n * cases other than what the usual {@link Observer} callbacks are\n * ({@link guide/glossary-and-semantics#next next},\n * {@link guide/glossary-and-semantics#error error} and/or\n * {@link guide/glossary-and-semantics#complete complete}).\n *\n * ## Example\n *\n * ```ts\n * import { fromEvent, switchMap, tap, interval, take } from 'rxjs';\n *\n * const source$ = fromEvent(document, 'click');\n * const result$ = source$.pipe(\n *   switchMap((_, i) => i % 2 === 0\n *     ? fromEvent(document, 'mousemove').pipe(\n *         tap({\n *           subscribe: () => console.log('Subscribed to the mouse move events after click #' + i),\n *           unsubscribe: () => console.log('Mouse move events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('Mouse move events #' + i + ' finalized')\n *         })\n *       )\n *     : interval(1_000).pipe(\n *         take(5),\n *         tap({\n *           subscribe: () => console.log('Subscribed to the 1-second interval events after click #' + i),\n *           unsubscribe: () => console.log('1-second interval events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('1-second interval events #' + i + ' finalized')\n *         })\n *       )\n *   )\n * );\n *\n * const subscription = result$.subscribe({\n *   next: console.log\n * });\n *\n * setTimeout(() => {\n *   console.log('Unsubscribe after 60 seconds');\n *   subscription.unsubscribe();\n * }, 60_000);\n * ```\n */\nexport interface TapObserver<T> extends Observer<T> {\n  /**\n   * The callback that `tap` operator invokes at the moment when the source Observable\n   * gets subscribed to.\n   */\n  subscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when an explicit\n   * {@link guide/glossary-and-semantics#unsubscription unsubscribe} happens. It won't get invoked on\n   * `error` or `complete` events.\n   */\n  unsubscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when any kind of\n   * {@link guide/glossary-and-semantics#finalization finalization} happens - either when\n   * the source Observable `error`s or `complete`s or when it gets explicitly unsubscribed\n   * by the user. There is no difference in using this callback or the {@link finalize}\n   * operator, but if you're already using `tap` operator, you can use this callback\n   * instead. You'd get the same result in either case.\n   */\n  finalize: () => void;\n}\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link TapObserver}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n", "import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\n\nexport function withLatestFrom<T, O extends unknown[]>(...inputs: [...ObservableInputTuple<O>]): OperatorFunction<T, [T, ...O]>;\n\nexport function withLatestFrom<T, O extends unknown[], R>(\n  ...inputs: [...ObservableInputTuple<O>, (...value: [T, ...O]) => R]\n): OperatorFunction<T, R>;\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n *\n * On every click event, emit an array with the latest timer event plus the click event\n *\n * ```ts\n * import { fromEvent, interval, withLatestFrom } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return A function that returns an Observable of projected values from the\n * most recent values from each input Observable, or an array of the most\n * recent values from each input Observable.\n */\nexport function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {\n  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;\n\n  return operate((source, subscriber) => {\n    const len = inputs.length;\n    const otherValues = new Array(len);\n    // An array of whether or not the other sources have emitted. Matched with them by index.\n    // TODO: At somepoint, we should investigate the performance implications here, and look\n    // into using a `Set()` and checking the `size` to see if we're ready.\n    let hasValue = inputs.map(() => false);\n    // Flipped true when we have at least one value from all other sources and\n    // we are ready to start emitting values.\n    let ready = false;\n\n    // Other sources. Note that here we are not checking `subscriber.closed`,\n    // this causes all inputs to be subscribed to, even if nothing can be emitted\n    // from them. This is an important distinction because subscription constitutes\n    // a side-effect.\n    for (let i = 0; i < len; i++) {\n      innerFrom(inputs[i]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            otherValues[i] = value;\n            if (!ready && !hasValue[i]) {\n              // If we're not ready yet, flag to show this observable has emitted.\n              hasValue[i] = true;\n              // Intentionally terse code.\n              // If all of our other observables have emitted, set `ready` to `true`,\n              // so we know we can start emitting values, then clean up the `hasValue` array,\n              // because we don't need it anymore.\n              (ready = hasValue.every(identity)) && (hasValue = null!);\n            }\n          },\n          // Completing one of the other sources has\n          // no bearing on the completion of our result.\n          noop\n        )\n      );\n    }\n\n    // Source subscription\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        if (ready) {\n          // We have at least one value from the other sources. Go ahead and emit.\n          const values = [value, ...otherValues];\n          subscriber.next(project ? project(...values) : values);\n        }\n      })\n    );\n  });\n}\n", "import { fromEvent, merge, take, tap } from \"rxjs\";\n\n/**\n * Adds script element to document body and starts downloading provided script URL.\n * @param scriptUri Script URL.\n * @returns Script element added.\n */\nexport function loadScript(scriptUri: string): Promise<HTMLScriptElement> {\n    return new Promise((resolve, reject) => {\n        const scriptElement = document.createElement(\"script\");\n        scriptElement.src = scriptUri;\n        scriptElement.async = true;\n        merge(\n            fromEvent(scriptElement, \"load\").pipe(tap(() => resolve(scriptElement))),\n            fromEvent(scriptElement, \"error\").pipe(tap((e) => reject(e)))\n        )\n            .pipe(take(1))\n            .subscribe();\n        document.body.appendChild(scriptElement);\n    });\n}\n", "type UnknownRecord<T = unknown> = Record<string | number | symbol, T>;\nexport type Guard<T, U = unknown> = (value: U | T) => value is T;\n\nexport function isString(value: unknown): value is string {\n    return typeof value === \"string\";\n}\n\n/**\n * Ensures given value is a safe string.\n *\n * Safe strings allow to prevent CRLF attacks. We use encoding approach inspired by:\n * https://community.veracode.com/s/question/0D53n00007hJJV5CAO/is-cwe-id-117-intended-for-consolelog\n */\nexport function isSafeString(value: unknown): value is string {\n    return isString(value) && encodeURIComponent(value) === value;\n}\n\nexport function isNumber(value: unknown): value is number {\n    return typeof value === \"number\";\n}\nexport function isNotNull<T>(value: T): value is Exclude<T, null> {\n    return value !== null;\n}\nexport function isArrayOfType<T>(elementTypeGuard: Guard<T>, value: unknown): value is T[] {\n    return Array.isArray(value) && value.every((id) => elementTypeGuard(id));\n}\nexport function isStringArray<T>(value: unknown): value is T[] {\n    return isArrayOfType(isString, value);\n}\n\nexport function isSafeStringArray<T>(value: unknown): value is T[] {\n    return isArrayOfType(isSafeString, value);\n}\n\n/**\n * Guards given value is instance of ArrayBuffer.\n */\nexport function isArrayBuffer(value: unknown): value is ArrayBuffer {\n    return value instanceof ArrayBuffer;\n}\n\n/**\n * Guards given value is a typed array.\n */\nexport function isTypedArray<T>(value: unknown): value is T {\n    return value instanceof Object.getPrototypeOf(Uint8Array);\n}\n\n/**\n * Guards given object is not undefined.\n */\nexport function isUndefined<T>(value: unknown): value is T {\n    return typeof value === \"undefined\";\n}\n\n/**\n * Narrow an unknown type to a Record (i.e. a non-null JS object). This holds true for class instances, not just\n * plain objects.\n */\nexport function isRecord(value: unknown): value is UnknownRecord {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n\n/**\n * Check if the value is an arbitrary function\n */\nexport function isFunction(value: unknown): value is (...args: unknown[]) => unknown {\n    return typeof value === \"function\";\n}\n\n/**\n * Apply a given type predicate asserting values are of type T to each value in a Record.\n *\n * @param predicate Any unary type predicate\n * @returns A type predicate which takes an UnknownRecord and tests that all its values are of type T\n */\nexport function predicateRecordValues<T>(predicate: (value: unknown) => value is T) {\n    return (value: UnknownRecord): value is UnknownRecord<T> => {\n        for (const v of Object.values(value)) if (!predicate(v)) return false;\n        return true;\n    };\n}\n\n/**\n * Checks whether given value is undefined or a safe URL string.\n *\n * The function checks whether given string is a valid URL with https: protocol.\n *\n * @param urlString URL string to check.\n * @returns True if URL is valid.\n */\nexport function isEmptyOrSafeUrl(urlString: string | undefined): boolean {\n    if (!urlString) return true;\n    try {\n        const url = new URL(urlString);\n        return url.protocol === \"https:\" || url.protocol === \"http:\";\n    } catch {\n        return false;\n    }\n}\n", "import { isString } from \"../common/typeguards\";\nimport { getConfigurationOverrides } from \"../configurationOverrides\";\nimport { ChainableHandler, HandlerChainBuilder } from \"./HandlerChainBuilder\";\n\n/**\n * Addes cookies to auth requests to custom LensCore binaries\n * when there are debugging overrides.\n *\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createDebugHandler = <Res>(): ChainableHandler<\n    RequestInfo,\n    Res,\n    RequestInfo,\n    Res,\n    RequestInit | undefined\n> => {\n    const noCustomWasmEndpoint = !getConfigurationOverrides()?.wasmEndpointOverride;\n\n    if (noCustomWasmEndpoint) {\n        return (next) => next;\n    }\n    return (next) => (input, init) => {\n        const url = isString(input) ? input : input?.url ?? \"\";\n        // if requests are made to internal LensCore binaries site\n        // we have to include cookies for auth purposes\n        // as per https://wiki.sc-corp.net/x/KsnRCg\n        if (url.startsWith(\"https://lens-core-wasm.sc-corp.net/\")) {\n            return next(input, {\n                ...init,\n                credentials: \"include\",\n            });\n        }\n        return next(input, init);\n    };\n};\n", "export type RequestMetadata =\n    | {\n          signal?: AbortSignal | null | undefined;\n          /**\n           * When calling a handler, if that handler is part of a handler chain, then by default an abort signal will be\n           * sent to that handler if another handler higher up in the chain completes first. Usually this is desirable,\n           * since we know if a handler higher up in the chain has completed and returned a response to its caller, then\n           * the response from all the handlers below it in the chain will not be used.\n           *\n           * But in some cases, a handler in a handler chain wants to call the next handler in the chain as a\n           * side-effect. If a handler is called as a side-effect, it will not be sent an abort signal when handlers\n           * higher up in the chain complete.\n           *\n           * For example: a caching handler might return a cached value immediately, but then call the next handler as\n           * a side-effect to fetch an updated value to refresh the cache in the background. In that case, the next\n           * handler should not be sent an abort signal when the caching handler returns the cached value.\n           */\n          isSideEffect?: boolean;\n      }\n    | undefined;\nexport type Handler<Req, Res, Meta extends RequestMetadata> = (req: Req, metadata?: Meta) => Promise<Res>;\nexport type ChainableHandler<Req, Res, NextReq, NextRes, Meta extends RequestMetadata | undefined> = (\n    next: Handler<NextReq, NextRes, Meta>\n) => Handler<Req, Res, Meta>;\n\n/**\n * Creates a Handler chain – a series of functions composed such that each function may call a supplied `next` function\n * which passes execution down the chain. When the final Handler in the chain returns, execution passes back up the\n * chain eventually returning to the caller.\n *\n * Each Handler chain begins with a \"raw\" Handler – this is a function which takes some request and returns some\n * response. A chain is then created by supplying a series of mapping functions – the ChainableHandler type – which will\n * be called with the `next` Handler in the chain.\n *\n * Ex:\n * ```ts\n * const handler = (request: string, metadata?: RequestMetadata) => Promise.resolve(`Responded to ${request}`)\n * const chainable = (next: Handler<string, string>) => (request: string, metadata?: RequestMetadata) => {\n *   return next(`modified ${request}`, metadata)\n * }\n *\n * const chain = new HandlerChainBuilder(handler)\n *   .map(chainable)\n *   .handler\n *\n * const response = await chain('hello')\n * expect(response).toBe('Responded to modified hello; 0')\n * ```\n * You can largely ignore the `metadata` argument present in the above example. This is the mechanism by which an\n * AbortSignal is passed to each Handler in the chain, but the only real requirement when implementing a Handler is\n * to pass this argument along to the `next` function. In fact, many Handlers will want to be generic over the type\n * of metadata:\n * ```ts\n * const chainable = <Meta>(next: Handler<string, string, Meta>) => (request: string, metadata: Meta) => {\n *   return next(`modified ${request}`, metadata)\n * }\n * ```\n * Actually, it's a very good idea for Handlers to be as generic as possible, since that will allow greater re-use. In\n * the above example, we don't do anything with the response from `next`, so we can let that be generic, too:\n * ```ts\n * const chainable = <Res, Meta>(next: Handler<string, Res, Meta>) => (request: string, metadata: Meta) => {\n *   return next(`modified ${request}`, metadata)\n * }\n * ```\n * Now if some other Handler in the chain decides to return a different response type, our Handler won't require any\n * changes to compile.\n *\n * ---\n *\n * Since execution passes from handler to handler in the chain, and then back, handlers have the opportunity to modify\n * or observe both the request and response. This might be useful for implementing serialization/deserialization, but\n * the simplest example that demonstrates this feature is measuring request latency:\n * ```ts\n * const latencyMeasuringHandler = <Req, Res, Meta>(next: Handler<Req, Res, Meta>) =>\n *   async (req: Req, metadata: Meta) => {\n *     const start = performance.now()\n *     const response = await next(req, metadata)\n *     const latency = performance.now() - start\n *     console.log(`latency for request ${request} was ${latency}`)\n *     return response\n *   }\n * ```\n * Execution is first passed to our measuring handler, which marks the `start` timestamp. Then it passes execution on\n * down the chain. After a response is received (by some handler down the chain), execution passes back up to our\n * handler here, which records the amount of time spent inside `next`.\n *\n * ---\n *\n * Handlers may also abort requests. They can do this in two ways:\n *   1. Create an `AbortController` and add its `AbortSignal` to the `metadata` object when calling `next`.\n *   2. Resolve its returned Promise.\n *\n * The first approach is straightforward, but the second may benefit from an example – the simplest is a handler which\n * will timeout a request:\n * ```ts\n * const timeoutHandler = <Req, Res, Meta>(next: Handler<Req, Res, Meta>) => (req: Req, metadata: Meta) => {\n *   return Promise.race([\n *     next(req, metadata),\n *     sleep(1000),\n *   ])\n * }\n * ```\n * The Promise returned by this handler will resolve either when the `next` handler resolves or 1 second has elapsed,\n * whichever happens first. If the timeout happens first, we want the `next` handler to recieve an abort signal so that\n * it can terminate early (since its result is no longer needed).\n *\n * HandlerChainBuilder makes this happen by observing when each handler completes, and sending an abort signal to all\n * the handlers \"downstream\" from the aborting handler.\n */\nexport class HandlerChainBuilder<Req, Res, Meta extends RequestMetadata> {\n    private readonly inner: Handler<Req, Res, Meta>;\n\n    constructor(inner: (req: Req, metadata: Meta) => Promise<Res>) {\n        // The TS compiler has the following behavior:\n        //\n        // class Infer<T extends SomeType | undefined> { constructor(f: (t?: T) => void) {} }\n        // const f = (t?: SomeType) => {}\n        // const i = new Infer(f)\n        //\n        // The type of `i` is inferred to be `Infer<SomeType>` instead of `Infer<SomeType | undefined>`, even though the\n        // type of `f`'s argument is `SomeType | undefined`. This seems to be a bug in type inference. Note that making\n        // the constructor argument required gives the expected behavior:\n        //\n        // class Infer<T extends SomeType | undefined> { constructor(f: (t: T) => void) {} }\n        // const f = (t?: SomeType) => {}\n        // const i = new Infer(f)\n        //\n        // Now `i` is inferred to be `Infer<SomeType | undefined>`.\n        //\n        // This has consequences if the inferred type T is used elsewhere in the class.\n        //\n        // In this case, we need to make sure that if the given `inner` function marks the metadata argument as\n        // optional, that HandlerChainBuilder correctly infers that the Meta type includes undefined. So we don't mark\n        // metadata as optional, and so we must cast to `Handler` (which does mark it as optional).\n        //\n        // Safety: We're adding `| undefined` to the metadata type, which may be unsafe – `undefined` may not be\n        // assignable to Meta. But when handling the argument of type Meta, we simply pass it through from handler to\n        // handler – we never call `inner` without passing the metadata argument we've received from some call to an\n        // outer handler. The typing visible to callers remains safe.\n        this.inner = inner as Handler<Req, Res, Meta>;\n    }\n\n    get handler(): Handler<Req, Res, Meta> {\n        return this.inner;\n    }\n\n    map<PriorReq, PriorRes>(\n        outer: ChainableHandler<PriorReq, PriorRes, Req, Res, Meta>\n    ): HandlerChainBuilder<PriorReq, PriorRes, Meta> {\n        // To create the next handler in the chain, we compose the \"outer\" handler with the \"inner\" handler.\n        //\n        // The outer handler observes its own completion and sends an abort signal to the inner handler when it has\n        // resolved. To prevent unexpected behavior, the inner handler also observes its own completion, setting a flag\n        // when it resolves so that – if it resolves before the outer handler – the outer handler can skip sending the\n        // abort signal (since the inner handler has already completed).\n        const outerHandler = (req: PriorReq, metadata: Meta): Promise<PriorRes> => {\n            const abort = new AbortController();\n            const signal = abort.signal;\n\n            // It's important to not signal an abort to an inner handler which has already completed – it seems like\n            // this would be a non-issue (shouldn't aborting after completion be a no-op?), but specifically for the\n            // browser's implementation of `fetch`, aborting even after the `fetch` Promise resolves can cause an abort\n            // error if e.g. the Fetch Response's body has not yet been read.\n            //\n            // So, for safety, we will only abort inner handlers which are still executing.\n            let innerCompleted = false;\n\n            const maybeAbort = () => {\n                // Safety: we never give `abort` to anyone else, so we know if the signal is aborted, this function\n                // has already run, so we can return early without fear of leaking. We also know if inner has completed,\n                // it has already performed cleanup.\n                if (signal.aborted || innerCompleted) return;\n\n                // If we've gotten here, the outer handler has either completed, or we heard an abort event while the\n                // inner handler is still executing – so we pass the abort signal down to the inner handler.\n                abort.abort();\n                metadata?.signal?.removeEventListener(\"abort\", maybeAbort);\n            };\n\n            metadata?.signal?.addEventListener(\"abort\", maybeAbort);\n\n            const innerHandler = new Proxy(this.inner, {\n                apply: (target, thisArg, args) => {\n                    const [req, metadata] = args as Parameters<typeof target>;\n\n                    // When calling the inner handler, we may not care about the result and don't want the handler's\n                    // operation to be interrupted by an abort signal. For example, we might be calling the inner\n                    // handler as a side-effect which we want to continue after the outer handler has completed.\n                    //\n                    // In this cases, we'll treat the inner handler as having completed immediately -- as far as the\n                    // outer handler is concerned, the inner handler is a no-op. This means that when the outer handler\n                    // completes, `maybeAbort` will not send an abort signal to the inner handler.\n                    //\n                    // A concrete example: returning a value from cache immediately, but then calling the inner handler\n                    // as a side-effect to refresh the cache \"in the background.\"\n                    if (metadata?.isSideEffect) innerCompleted = true;\n\n                    // To help Handler authors out, we'll do some bookkeeping and cleanup for them – if they forget to\n                    // remove an abort event listener, we'll remove it for them when the Promise they return resolves.\n                    // Note: No need to proxy removeEventListener, since removing a non-existent listener just no-ops.\n                    const abortListeners: EventListenerOrEventListenerObject[] = [];\n                    signal.addEventListener = new Proxy(signal.addEventListener, {\n                        apply: (target, thisArg, args) => {\n                            abortListeners.push(args[1]);\n                            return Reflect.apply(target, thisArg, args);\n                        },\n                    });\n\n                    const cleanupAndMarkComplete = () => {\n                        // The only reason we listen to upstream aborts is to pass them to the inner handler – since the\n                        // inner handler has completed, we no longer need the listener.\n                        metadata?.signal?.removeEventListener(\"abort\", maybeAbort);\n                        abortListeners.forEach((listener) => signal.removeEventListener(\"abort\", listener));\n                        innerCompleted = true;\n                    };\n\n                    const innerResponse: ReturnType<typeof target> = Reflect.apply(target, thisArg, [\n                        req,\n                        // Side-effect state does not propagate down the handler chain -- each outer handler must set\n                        // this property on their own when calling their inner handler. One outer handler may treat its\n                        // inner handler as a side-effect, but that doesn't each subsequent handler in the chain should\n                        // be treated as a side-effect. In other words, passing isSideEffect is only relevant to the\n                        // HandlerChainBuilder (telling it not to abort the inner handler), and not to any subsequent\n                        // handlers in the chain.\n                        { ...metadata, isSideEffect: false, signal },\n                    ]);\n\n                    // Using `finally` is more idiomatic, but causes trouble in some environments (e.g. some testing\n                    // runtimes which detect uncaught rejected promises).\n                    innerResponse.catch(() => {}).then(cleanupAndMarkComplete);\n                    return innerResponse;\n                },\n            });\n\n            const outerResponse = outer(innerHandler)(req, metadata);\n            outerResponse.catch(() => {}).then(maybeAbort);\n            return outerResponse;\n        };\n        return new HandlerChainBuilder(outerHandler as Handler<PriorReq, PriorRes, Meta>);\n    }\n}\n", "// `Object.entries` does not use `keyof` types, so it loses type specificity. We'll fix this with a wrapper.\nexport const entries = <T extends { [s: string]: U } | ArrayLike<U>, U>(o: T): Array<[keyof T, T[keyof T]]> =>\n    Object.entries(o) as Array<[keyof T, T[keyof T]]>;\n", "import { Subject } from \"rxjs\";\nimport { entries } from \"../common/entries\";\n\n/**\n * A reference to the recently created log messages subject.\n * The subject is overridden in resetLogger() method, which is called during CameraKit bootstrapping.\n */\nlet logEntriesSubject = new Subject<LogEntry>();\n\n/**\n * This map associates log level names with their corresponding level value.\n * This means that a configured log level will match all log entries with a level value greater than\n * or equal to the configured value.\n */\nexport const logLevelMap = {\n    error: 3,\n    warn: 2,\n    log: 1,\n    info: 1,\n    debug: 0,\n};\n\n/**\n * Initializes a new logger subject.\n *\n * Note: currently only one `CameraKit` instance is allowed to listen to log messages at a time, therefore that is\n * necessary to avoid sharing the same subject between multiple `CameraKit` instances by calling`resetLogger()`.\n * Also, `resetLogger()` should be called when there is no interest in logged messages.\n * This allows the previous logEntriesSubject to be GCec.\n * @internal\n */\nexport function resetLogger() {\n    return (logEntriesSubject = new Subject<LogEntry>());\n}\n\nexport interface LogEntry {\n    time: Date;\n    module: string;\n    level: keyof Logger;\n    messages: any[];\n}\n\nexport type LogLevelName = keyof typeof logLevelMap;\nexport type Logger = Record<LogLevelName, (message?: any, ...optionalParams: any[]) => void>;\n\n/**\n * Gets logger for a given module.\n *\n * @internal\n *\n * @param module Module name.\n * @returns Logger instance.\n */\nexport function getLogger(module: string): Logger {\n    return entries(logLevelMap).reduce((logger, [level]) => {\n        logger[level] = (...messages: any[]) => {\n            logEntriesSubject.next({\n                time: new Date(),\n                module,\n                level,\n                messages,\n            });\n        };\n        return logger;\n    }, {} as Logger);\n}\n", "import { copyDefinedProperties } from \"../common/copyDefinedProperties\";\nimport { getLogger } from \"../logger/logger\";\nimport { ChainableHandler, Handler, RequestMetadata } from \"./HandlerChainBuilder\";\n\nconst logger = getLogger(\"retryingHandler\");\n\nconst logRetry = (responseOrError: any, sleep: number) => {\n    logger.warn(\n        `Retrying handler got failed response:`,\n        responseOrError,\n        `Waited ${sleep} millis, attempting retry now.`\n    );\n};\n\nconst sleep = (millis: number) => new Promise((resolve) => setTimeout(resolve, millis));\n\nconst randomInRange = (min: number, max: number) => Math.round(Math.random() * (max - min) + min);\n\nconst defaultOptions: RetryingHandlerOptions<unknown> = {\n    backoffMultiple: 3,\n    baseSleep: 500,\n    maxSleep: 5 * 1000,\n    maxRetries: 10,\n\n    // The Response type is very common, so our default predicate special-cases to retry all failed Responses.\n    retryPredicate: (responseOrError: unknown) => (responseOrError instanceof Response ? !responseOrError.ok : true),\n};\n\n/**\n * Returns a cloned instance of Request if the input is of that type, otherwise returns the input unchanged.\n *\n * This is necessary when attempting to retry a request.\n * It is not possible to reuse the same Request instance that has already been sent.\n */\nexport function ensureClonedRequest<T>(input: T): T {\n    return input instanceof Request ? (input.clone() as T) : input;\n}\n\nexport interface RetryingHandlerOptions<Req> {\n    /**\n     * Multiple used to increase the random backoff between attempts. Default is 3, usually doesn't need to be changed.\n     */\n    backoffMultiple: number;\n\n    /**\n     * The minimum number of milliseconds to sleep between attempts.\n     *\n     * The actual number of milliseconds slept between attempts is chosen at random.\n     */\n    baseSleep: number;\n\n    /**\n     * The maximum number of milliseconds to sleep between attempts. Note that this is not a timeout -- if multiple\n     * request attempts are made, the total request latency will be longer than this.\n     *\n     * The actual number of milliseconds slept between attempts is chosen at random.\n     */\n    maxSleep: number;\n\n    /**\n     * The maximum number of retry attempts. The initial request is not counted against this number.\n     */\n    maxRetries: number;\n\n    /**\n     * Determine if a given error is retryable. If `false` is returned, the error will be passed up to the Handler's\n     * caller and no additional retry attempts will be made.\n     */\n    retryPredicate: (responseOrError: Req | Error, retryCount: number) => boolean;\n}\n\n/**\n * Retry requests using an exponential backoff with jitter strategy.\n *\n * More about this approach to retries can be found\n * [here](https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/). This implementation uses the\n * \"Decorrelated jitter\" algorithm described in that post. This offers a good tradeoff between call volume and latency,\n * and also allows for convenient configurability.\n *\n * @param options\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createRetryingHandler = <Req, Res, Meta extends RequestMetadata>(\n    options: Partial<RetryingHandlerOptions<Res>> = {}\n): ChainableHandler<Req, Res, Req, Res, Meta> => {\n    const definedOptions = copyDefinedProperties(options);\n    const { backoffMultiple, baseSleep, maxSleep, maxRetries, retryPredicate } = {\n        ...defaultOptions,\n        ...definedOptions,\n    };\n    let retryCount = -1;\n\n    const jitterSleep = async (priorSleep: number) => {\n        const nextSleep = Math.min(maxSleep, randomInRange(baseSleep, priorSleep * backoffMultiple));\n        await sleep(nextSleep);\n        return nextSleep;\n    };\n\n    const makeRequestAttempt =\n        (next: Handler<Req, Res, Meta>, priorSleep = baseSleep) =>\n        async (req: Req, metadata?: Meta): Promise<Res> => {\n            retryCount++;\n\n            try {\n                const response = await next(ensureClonedRequest(req), metadata);\n                if (retryCount < maxRetries && retryPredicate(response, retryCount)) {\n                    const nextSleep = await jitterSleep(priorSleep);\n                    // The request may have been aborted while we were sleeping. In that case, we'll resolve\n                    // with the failed response. In many cases this will be ignored, because an AbortError has already\n                    // been returned to the caller of the Handler chain – but this prevents us from doing\n                    // any extra work, and there may be edge cases where the caller could find the response useful.\n                    if (metadata?.signal?.aborted) return response;\n                    logRetry(response, nextSleep);\n                    return makeRequestAttempt(next, nextSleep)(req, metadata);\n                }\n                return response;\n            } catch (error) {\n                if (!(error instanceof Error)) {\n                    throw new Error(\n                        \"Invalid type caught by retrying handler. Handlers may only throw Errors. Got \" +\n                            `${JSON.stringify(error)}`\n                    );\n                }\n\n                // If the request fails because it was aborted, we assume this was done intentionally and we can stop.\n                if (error.name === \"AbortError\") throw error;\n\n                if (retryCount < maxRetries && retryPredicate(error, retryCount)) {\n                    const nextSleep = await jitterSleep(priorSleep);\n                    if (metadata?.signal?.aborted) throw error;\n                    logRetry(error, nextSleep);\n                    return makeRequestAttempt(next, nextSleep)(req, metadata);\n                }\n\n                // If no retry is to be attempted, return the error to the caller.\n                throw error;\n            }\n        };\n\n    return (next) => makeRequestAttempt(next);\n};\n", "import { getLogger } from \"../logger/logger\";\nimport { ChainableHandler } from \"./HandlerChainBuilder\";\nimport { ensureClonedRequest } from \"./retryingHandler\";\n\nconst logger = getLogger(\"noCorsRetryingFetchHandler\");\n\nconst logRetry = (error: any) => {\n    logger.warn(`NoCorsRetrying handler got failed response:`, error, `Retrying request with {mode: \"no-cors\"}.`);\n};\n\n/**\n * Some requests may require a no-cors pre-flight (which are allowed to follow redirects) before they can be\n * successful.\n *\n * An example is a federated identity authentication flow, like OpenID Connect or OAuth. In many such schemes,\n * an unauthenticated request will not include CORs headers. Instead, a redirect to an Identity Provider will be\n * returned. In order follow this redirect, the Fetch request must be made with \"no-cors\" mode.\n *\n * Once the \"no-cors\" request is made, redirects are followed resulting in authentication cookies being set on the\n * original domain. Then, the original request can be retried and the server will authenticate the request and set\n * proper CORs headers on the response.\n *\n * Here's an example request flow, in which the page already has cookies for IdentityProvider.com (if that wasn't\n * the case, IdentityProvider.com would prompt the user for credentials and the rest of the flow would be the same):\n *\n * ```\n * WebPage a.com        MyServer b.com    IdentityProvider c.com\n *    |                         |                 |\n * Original request,            |                 |\n * unauthenticated:             |                 |\n *    |------------------------>|                 |\n *    |<--302: c.com, no CORs---|                 |\n *    |                         |                 |\n *    |                         |                 |\n * No CORs headers in           |                 |\n * response. Retry in           |                 |\n * \"no-cors\" mode:              |                 |\n *    |-----\"no-cors\" mode----->|                 |\n *    |<--302: c.com, no CORs---|                 |\n *    |                         |                 |\n *    |                         |                 |\n *    |------------------IdP cookies------------->|\n *    |<----------302: b.com?token=foo------------|\n *                              |                 |\n *    |                         |                 |\n *    |----b.com?token=foo----->|                 |\n *    |<-302: b.com, set cookie-|                 |\n *    |                         |                 |\n *    |                         |                 |\n * Retry original request,      |                 |\n * now authenticated:           |                 |\n *    |-----------cookie------->|                 |\n *    |<-----------200----------|                 |\n *                              |                 |\n * ```\n */\nexport const createNoCorsRetryingFetchHandler = <Res>(): ChainableHandler<\n    RequestInfo,\n    Res,\n    RequestInfo,\n    Res,\n    RequestInit | undefined\n> => {\n    // If concurrent requests are made to the same domain, we only want to perform one \"no-cors\" request. We assume\n    // requests to the same domain will set the same authentication cookies. To support this, we'll store any\n    // in-flight \"no-cors\" retries and re-use them for concurrent requests.\n    const noCorsRequests = new Map<string, Promise<Res>>();\n\n    return (next) =>\n        async (input, init = {}) => {\n            // `host` includes domain:port, so works for local development. If the input is a relative path, we'll\n            // use `location.origin` to resolve into a fully qualified URL (although of course we don't actually\n            // anticipate any CORs issues in that case -- but this is cleaner than special-casing).\n            let requestKey = typeof input === \"string\" ? input : input.url;\n            try {\n                requestKey = new URL(requestKey, location.origin).host;\n            } catch (_) {\n                /* no-op, use the full input URL as the requestKey */\n            }\n\n            try {\n                // By always attempting the request first, we avoid needing to maintain any state about the validity\n                // of the request (e.g. the expiration time for a credential). We just make the request, and if it\n                // fails, this tells us we've made an invalid request. This does result in one additional request, but\n                // it makes this much more flexible and avoids having to maintain state (which can be a source of bugs).\n                return await next(ensureClonedRequest(input), init);\n            } catch (error) {\n                // If the request fails because it was aborted, we assume this was done intentionally and we can stop.\n                if (error instanceof Error && error.name === \"AbortError\") throw error;\n\n                // Otherwise we don't actually care what error occurred – we know this will be an error thrown by\n                // `fetch` itself (rather than some error encountered on the server, which wouldn't cause `next` to\n                // throw), and we'll just assume it's a CORs error. If it's not, we'll perform a \"no-cors\" retry anyway,\n                // which will presumably also fail, and that failure will be returned to the caller.\n                logRetry(error);\n                const noCorsRequest =\n                    noCorsRequests.get(requestKey) ?? next(ensureClonedRequest(input), { ...init, mode: \"no-cors\" });\n                noCorsRequests.set(requestKey, noCorsRequest);\n                await noCorsRequest;\n                noCorsRequests.delete(requestKey);\n                return next(ensureClonedRequest(input), init);\n            }\n        };\n};\n", "import { copyDefinedProperties } from \"../common/copyDefinedProperties\";\nimport { isString } from \"../common/typeguards\";\nimport { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\n\nconst sleep = (millis: number) => new Promise<void>((resolve) => setTimeout(resolve, millis));\n\nconst defaultOptions: TimeoutHandlerOptions<unknown> = {\n    createError: (request) => {\n        // The string and Request types are very common, so our default error creator special-cases those types to\n        // provide better error messages.\n        const destination = isString(request)\n            ? `for ${request}`\n            : request instanceof Request\n            ? `for ${request.url}`\n            : \"\";\n        return new Error(`Request ${destination} timed out by client timeout handler.`);\n    },\n    timeout: 30 * 1000,\n};\n\nexport interface TimeoutHandlerOptions<Req> {\n    /**\n     * A function that returns a new Error instance when a timeout occurs.\n     */\n    createError: (req: Req, meta?: RequestMetadata | void) => Error;\n\n    /**\n     * Abort requests after this number of milliseconds. Defaults to 30 seconds.\n     */\n    timeout: number;\n}\n\n/**\n * Timeout requests after a given number of milliseconds, rejecting the Response promise with a custom error.\n *\n * @param options\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createTimeoutHandler = <Req, Res, Meta extends RequestMetadata>(\n    options: Partial<TimeoutHandlerOptions<Req>> = {}\n): ChainableHandler<Req, Res, Req, Res, Meta> => {\n    const definedOptions = copyDefinedProperties(options);\n    const { createError, timeout } = { ...defaultOptions, ...definedOptions };\n\n    // If the timeout Promise wins the race, the HandlerChainBuilder sets the abort signal for subsequent handlers. They\n    // may look at the abort signal in order to terminate themselves early.\n    return (next) => (req, meta) =>\n        Promise.race([next(req, meta), sleep(timeout).then(() => Promise.reject(createError(req, meta)))]);\n};\n", "import { Injectable } from \"../dependency-injection/Injectable\";\nimport { createDebugHandler } from \"./debugHandler\";\nimport { HandlerChainBuilder } from \"./HandlerChainBuilder\";\nimport { createNoCorsRetryingFetchHandler } from \"./noCorsRetryingFetchHandler\";\nimport { createRetryingHandler } from \"./retryingHandler\";\nimport { createTimeoutHandler } from \"./timeoutHandler\";\n\nexport type FetchHandler<R = Response> = (input: RequestInfo, init?: RequestInit) => Promise<R>;\n\n/**\n * The default Fetch implementation, used to make a simple HTTP requests without any custom headers. This can be passed\n * to `HandlerChainBuilder` to form the basis for other Fetch implementations (e.g. with custom headers, which extract\n * the Response body, etc.)\n *\n * Has support for retries, client-side timeout, and navigating federated auth flows that may not support CORs requests.\n *\n * @internal\n */\n\nexport const defaultFetchHandlerFactory = Injectable(\"defaultFetchHandler\", () => {\n    return (\n        // Safety: We're re-typing fetch's second argument from `init?: RequestInit | undefined` to\n        // `init: RequestInit | void` – this is semantically equivalent, but the void makes for nicer ergonomics\n        // elsewhere (e.g. so that callers can omit the second argument instead of being forced to pass undefined).\n        new HandlerChainBuilder<RequestInfo, Response, RequestInit | undefined>(fetch)\n            .map(createDebugHandler())\n            // The 20-second per-request timeout is pretty arbitrary, it's just set to be longer than our API gateway\n            // timeout (15s) and lower than the browsers own timeout (variable, Chrome's is 5m).\n            .map(createTimeoutHandler({ timeout: 20 * 1000 }))\n            .map(createNoCorsRetryingFetchHandler())\n            .map(\n                createRetryingHandler({\n                    maxRetries: 3,\n                    retryPredicate: (responseOrError) => {\n                        // Don't retry successful Responses or Responses with a 4xx HTTP status code (indicating a\n                        // client error). Do retry all 5xx HTTP status codes.\n                        if (responseOrError instanceof Response) {\n                            if (responseOrError.ok) return false;\n                            if (responseOrError.status % 400 < 100) return false;\n                        }\n                        return true;\n                    },\n                })\n            ).handler\n    );\n});\n", "export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),extendedConst=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,0,1,11,9,1,0,65,1,65,2,106,11,0])),gc=()=>(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,95,1,120,0])))(),jspi=()=>(async()=>\"Suspender\"in WebAssembly)(),memory64=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,4,1])),multiMemory=()=>(async()=>{try{return new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,5,5,2,0,0,0,0])),!0}catch(e){return!1}})(),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),relaxedSimd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,15,1,13,0,65,1,253,15,65,2,253,15,253,128,2,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),streamingCompilation=()=>(async()=>\"compileStreaming\"in WebAssembly)(),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])),typeReflection=()=>(async()=>\"Function\"in WebAssembly)();\n", "type AnyFunction<A extends any[] = any[], B = any> = (...args: A) => B;\n\nexport type Memoized<Fn extends AnyFunction> = {\n    (...args: Parameters<Fn>): ReturnType<Fn>;\n    delegate: Fn;\n};\n\nexport function isMemoized(fn: unknown): fn is Memoized<AnyFunction> {\n    return typeof fn === \"function\" && typeof (fn as any).delegate === \"function\";\n}\n\nexport function memoize<Fn extends AnyFunction>(delegate: Fn): Memoized<Fn> {\n    let memo: any;\n    const memoized = (...args: any[]) => {\n        if (typeof memo !== \"undefined\") return memo;\n        memo = delegate(...args);\n        return memo;\n    };\n    memoized.delegate = delegate;\n    return memoized;\n}\n", "// NOTE: All errors thrown in the CameraKit package have to be defined here.\n// Error types are not infered from error factories for API doc purposes and consistency.\n\n/**\n * Helper type to extract type generic parameter.\n */\ntype ExtractName<P> = P extends NamedError<infer T> ? T : never;\n\n/**\n * All errors are expected to have \"Error\" suffix.\n */\ntype ErrorName = `${string}Error`;\n\ntype NamedError<Name extends ErrorName> = Error & { name: Name };\n\n/**\n * Removes the top trace line from the stack.\n */\nfunction cleanErrorStack(stack: string): string {\n    const [first, _, ...rest] = stack.split(\"\\n\");\n    return [first, ...rest].join(\"\\n\");\n}\n\n/**\n * Creates error factory that ensures Error.prototype.name field value.\n *\n * NOTE: exported only for unit tests.\n *\n * @param name Error name.\n * @returns Error factory function.\n * @internal\n */\nexport function namedError<\n    // default to never to ensure the type argument is specified\n    TError extends NamedError<TName> = never,\n    // default to provided error name to make this type argument optional to reduce boilerplate\n    TName extends ErrorName = ExtractName<TError>\n>(name: TName) {\n    return (message: string, cause?: unknown): TError => {\n        const error = new Error(message, { cause });\n        error.name = name;\n        error.stack = error.stack && cleanErrorStack(error.stack);\n        // Safety: we set name above and therefore sure the type of error is correct\n        return error as TError;\n    };\n}\n\nexport type LegalError = NamedError<\"LegalError\">;\n/** @internal */\nexport const legalError = namedError<LegalError>(\"LegalError\");\n\nexport type LensContentValidationError = NamedError<\"LensContentValidationError\">;\n/** @internal */\nexport const lensContentValidationError = namedError<LensContentValidationError>(\"LensContentValidationError\");\n\nexport type LensError = NamedError<\"LensError\">;\n/** @internal */\nexport const lensError = namedError<LensError>(\"LensError\");\n\nexport type CameraKitSourceError = NamedError<\"CameraKitSourceError\">;\n/** @internal */\nexport const cameraKitSourceError = namedError<CameraKitSourceError>(\"CameraKitSourceError\");\n\n/**\n * The error triggered when a lens prompts the user to select an image, but the image fails to be successfully delivered\n * to the lens.\n */\nexport type LensImagePickerError = NamedError<\"LensImagePickerError\">;\n/** @internal */\nexport const lensImagePickerError = namedError<LensImagePickerError>(\"LensImagePickerError\");\n\nexport type CacheKeyNotFoundError = NamedError<\"CacheKeyNotFoundError\">;\n/** @internal */\nexport const cacheKeyNotFoundError = namedError<CacheKeyNotFoundError>(\"CacheKeyNotFoundError\");\n\n/**\n * Thrown by {@link bootstrapCameraKit} if provided configuration is invalid.\n *\n * @category Bootstrapping and Configuration\n */\nexport type ConfigurationError = NamedError<\"ConfigurationError\">;\n/** @internal */\nexport const configurationError = namedError<ConfigurationError>(\"ConfigurationError\");\n\nexport type WebGLError = NamedError<\"WebGLError\">;\n/** @internal */\nexport const webGLError = namedError<WebGLError>(\"WebGLError\");\n\nexport type BenchmarkError = NamedError<\"BenchmarkError\">;\n/** @internal */\nexport const benchmarkError = namedError<BenchmarkError>(\"BenchmarkError\");\n\n/**\n * Thrown by {@link bootstrapCameraKit} when the current platform is not supported by CameraKit.\n *\n * This can happen if the browser doesn't support a required feature (e.g. WebGL).\n *\n * @category Bootstrapping and Configuration\n */\nexport type PlatformNotSupportedError = NamedError<\"PlatformNotSupportedError\">;\n/** @internal */\nexport const platformNotSupportedError = namedError<PlatformNotSupportedError>(\"PlatformNotSupportedError\");\n\n/**\n * This error occurs if a Lens is unable to continue rendering.\n *\n * If this error occurs, Camera Kit automatically removes the Lens from the session.\n * It's always a good idea to handle this error and update the user experience accordingly.\n * For example, you could remove the faulty Lens from your Lens selection UI.\n *\n * ```ts\n * cameraKitSession.events.addEventListener('error', ({ detail }) => {\n *   if (detail.error.name === 'LensExecutionError') {\n *     console.log(`Lens ${detail.lens.name} encountered an error and was removed. Please pick a different lens.`)\n *   }\n * })\n * ```\n */\nexport type LensExecutionError = NamedError<\"LensExecutionError\">;\n/** @internal */\nexport const lensExecutionError = namedError<LensExecutionError>(\"LensExecutionError\");\n\n/**\n * This error occurs when a session becomes inoperable.\n *\n * It's always a good idea to handle this error and update the user experience accordingly.\n * For example, you could show a message to a user.\n *\n * ```ts\n * cameraKitSession.events.addEventListener('error', ({ detail }) => {\n *   if (detail.error.name === 'LensAbortError') {\n *     console.log(`Camera Kit encountered an unrecoverable error and became inoperable. Please refresh the page.`)\n *   }\n * })\n * ```\n */\nexport type LensAbortError = NamedError<\"LensAbortError\">;\n/** @internal */\nexport const lensAbortError = namedError<LensAbortError>(\"LensAbortError\");\n\n/**\n * Error thrown when LensCore asked to store lens data, but CameraKit failed storing that.\n */\nexport type PersistentStoreError = NamedError<\"PersistentStoreError\">;\n/** @internal */\nexport const persistentStoreError = namedError<PersistentStoreError>(\"PersistentStoreError\");\n\n/**\n * Error thrown when LensCore asked to provide an asset, but CameraKit failed providing that.\n */\nexport type LensAssetError = NamedError<\"LensAssetError\">;\n/** @internal */\nexport const lensAssetError = namedError<LensAssetError>(\"LensAssetError\");\n\n/**\n * Thrown by {@link bootstrapCameraKit} if an error occurs during SDK initializion or while downloading the render\n * engine WebAssembly.\n *\n * @category Bootstrapping and Configuration\n */\nexport type BootstrapError = NamedError<\"BootstrapError\">;\n/** @internal */\nexport const bootstrapError = namedError<BootstrapError>(\"BootstrapError\");\n", "import { memoize } from \"../common/memoize\";\nimport { isRecord } from \"../common/typeguards\";\nimport environment from \"../environment.json\";\nimport lensCoreWasm from \"../lensCoreWasmVersions.json\";\n\ntype BrandArray = Array<{ brand: string; version: string }>;\n\ninterface NavigatorUAData {\n    brands: BrandArray;\n    mobile: boolean;\n    platform: string;\n}\n\nexport type ConnectionType = \"bluetooth\" | \"cellular\" | \"ethernet\" | \"none\" | \"wifi\" | \"wimax\" | \"other\" | \"unknown\";\n\ndeclare global {\n    interface Navigator {\n        userAgentData?: NavigatorUAData;\n        connection?: {\n            // This currently has extremely limited support in browsers.\n            // https://wicg.github.io/netinfo/#dom-networkinformation-type\n            type?: ConnectionType;\n        };\n    }\n}\n\n/**\n * Some user agents may not properly implement the NavigatorUAData interface, so we have to do our own validation here\n * to make sure we're dealing with a well-formed value.\n */\nfunction isNavigatorUAData(value: unknown): value is NavigatorUAData {\n    return (\n        isRecord(value) &&\n        Array.isArray(value[\"brands\"]) &&\n        value[\"brands\"].every((brand) => {\n            return isRecord(brand) && typeof brand[\"brand\"] === \"string\" && typeof brand[\"version\"] === \"string\";\n        }) &&\n        typeof value[\"mobile\"] === \"boolean\" &&\n        typeof value[\"platform\"] === \"string\"\n    );\n}\n\n/**\n * In the future, we may invest in more robust device-detection (e.g. a UA string database), but for now this will give\n * us some sense of device usage.\n */\nfunction parseDeviceModel(userAgent: string) {\n    // from user agent like \"(Linux; Android 11; Pixel 2)\" extact \"Pixel 2\"\n    const userAgentWithModel = userAgent.match(/;[^;]+?;([^\\)]+?)\\)/);\n\n    if (userAgentWithModel) {\n        return userAgentWithModel[1].trim();\n    }\n\n    // from user agent like \"... (iPad; CPU OS 15_1 like Mac OS X) ...\" extract \"IPad\"\n    const userAgentWithModel2 = userAgent.match(/\\(([^;]+);/);\n\n    if (userAgentWithModel2) {\n        return userAgentWithModel2[1].trim();\n    }\n\n    return \"unknown\";\n}\n\n/**\n * The origin may be useful to identify the running application (e.g. to attribute metrics).\n *\n * We need to handle cases in which we run inside a child browsing context (e.g. an iframe), which may not have a\n * hostname – in this case we'll check each ancestor context until we find a valid hostname.\n */\nfunction parseOrigin(): string {\n    if (location.hostname !== \"\") return location.hostname;\n\n    // Firefox does not implement ancestorOrigins, so we need a fallback.\n    // Context here: https://github.com/whatwg/html/issues/1918\n    const possibleOrigins =\n        location.ancestorOrigins === undefined && typeof window !== \"undefined\"\n            ? [window.parent.origin, window.top?.origin ?? \"\"]\n            : location.ancestorOrigins ?? [];\n\n    for (let origin of possibleOrigins) {\n        try {\n            origin = new URL(origin).hostname;\n            if (origin) return origin;\n        } catch (_) {}\n    }\n\n    return \"unknown\";\n}\n\n/* eslint-disable max-len */\n/**\n * The backend defines the allowed list of known OSes which will pass their RegEx test when found in our custom\n * CameraKitWeb userAgent string.\n *\n * See https://github.sc-corp.net/Snapchat/useragent/blob/9333afe7cc6ac00503ad46cb234bcf94006dff98/java/useragent/src/main/java/snapchat/client/UserAgent.java#L124\n */\n/* eslint-enable */\ntype KnownPlatform = \"macos\" | \"windows\" | \"linux\" | \"android\" | \"ios\" | \"ipados\" | \"unknown\";\nfunction parseOSName(userAgent: string): KnownPlatform {\n    const knownPlatforms = new Map<string, KnownPlatform>([\n        [\"android\", \"android\"],\n        [\"linux\", \"linux\"],\n        [\"iphone os\", \"ios\"],\n        [\"ipad\", \"ipados\"],\n        [\"mac os\", \"macos\"],\n        [\"macos\", \"macos\"],\n        [\"windows\", \"windows\"],\n    ]);\n\n    const normalizedUserAgent = userAgent.toLowerCase();\n    for (const [match, platform] of knownPlatforms.entries()) {\n        if (normalizedUserAgent.includes(match)) return platform;\n    }\n    return \"unknown\";\n}\n\n/**\n * Parse the OS (a.k.a. platform) version.\n *\n * From limited testing, this seems to often produce incorrect results – the userAgent string does not typically include\n * the actual OS version.\n *\n * Better results could be obtained from [NavigatorUAData.getHighEntropyValues]\n * (https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData/getHighEntropyValues), but this presents two\n * problems: 1) it's currently only supported on Chrome and 2) browsers may prompt the user for permission to share\n * this information.\n *\n * So, at least for now, we'll be satisfied with the incorrect version number.\n */\nfunction parseOSVersion(userAgent: string) {\n    // possible platform version values inside of user agent string\n    // \" 11;\"\n    // \" 10_15_7)\"\n    // \" 13_5_1 \"\n    // \" 10.0;\"\n    // \" 15_1 \"\n    const versionMatch = userAgent.match(/\\s([\\d][\\d_.]*[\\d])(;|\\)|\\s)/);\n\n    if (versionMatch != null) {\n        return versionMatch[1].replace(/_/g, \".\");\n    }\n\n    return \"\";\n}\n\n/**\n * Some browsers (e.g. Safari) do not support the `Navigator.userAgentData` API. We'll attempt a sort of polyfill by\n * parsing the data found in [NavigatorUAData](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData) from\n * the raw user agent string.\n */\nfunction parseUserAgentData(userAgent: string): NavigatorUAData {\n    let brand: BrandArray[number];\n\n    // Parse UA string for Chromium-based browsers (e.g. Chrome, Edge)\n    if (/Chrome/.test(userAgent)) {\n        const versionMatch = userAgent.match(/Chrome\\/([\\d.]+)/);\n        brand = {\n            brand: \"Chrome\",\n            version: versionMatch !== null ? versionMatch[1] : \"unknown\",\n        };\n    }\n\n    // Parse UA string for Safari (very important for this to only be done if Chrome is not found – Chrome userAgent\n    // strings will contain \"Safari\")\n    else if (/Safari/.test(userAgent)) {\n        let versionMatch = userAgent.match(/Version\\/([\\d.]+)/);\n        if (versionMatch === null) versionMatch = userAgent.match(/Safari\\/([\\d.]+)/);\n        brand = {\n            brand: \"Safari\",\n            version: versionMatch !== null ? versionMatch[1] : \"unknown\",\n        };\n    }\n\n    // Parse UA for unknown browser.\n    // TODO: will be changed, default value support should be added on a COF server side.\n    else {\n        brand = {\n            brand: \"Firefox\",\n            version: \"0\",\n        };\n    }\n\n    // We're not using `mobile` for anything, and we have no consistent way to determine this from the UA string.\n    // We'll set it to false, but this should not be used – instead, we'll need to rely on more sophisticated methods\n    // (e.g. a userAgent database) to determine actual device.\n    const mobile = false;\n    const platform = parseOSName(userAgent);\n\n    return {\n        brands: [brand],\n        mobile,\n        platform,\n    };\n}\n\n/* eslint-disable max-len */\n/**\n * The `brands` array found in [NavigatorUAData](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData) is\n * intentionally designed to discourage standardized processing. This method of extracting brand information will be\n * inherently brittle, and it relies on us matching some well-known brands.\n *\n * For more detail from the spec:\n * See https://wicg.github.io/ua-client-hints/#monkeypatch-html-windoworworkerglobalscope\n * And https://wicg.github.io/ua-client-hints/#grease\n *\n * We also must match the list of known brands allowed by the backend, defined here:\n * https://github.sc-corp.net/Snapchat/useragent/blob/9333afe7cc6ac00503ad46cb234bcf94006dff98/java/useragent/src/main/java/snapchat/client/UserAgent.java#L124\n */\n/* eslint-enable */\ntype KnownBrand = \"Chrome\" | \"Safari\" | \"Firefox\";\nfunction normalizeBrands(brands: BrandArray): BrandArray {\n    const knownBrands = new Map<string, KnownBrand>([\n        [\"Google Chrome\", \"Chrome\"],\n        [\"Chrome\", \"Chrome\"],\n        [\"Chromium\", \"Chrome\"],\n        [\"Firefox\", \"Firefox\"],\n        [\"Microsoft Edge\", \"Chrome\"],\n        [\"Safari\", \"Safari\"],\n    ]);\n\n    const normalizedBrands = brands\n        .filter(({ brand }) => knownBrands.has(brand))\n        .map((brand) => {\n            return {\n                // Safety: we've filtered out brands which do not appear as keys in `knownBrands`, so this cannot return\n                // undefined.\n                brand: knownBrands.get(brand.brand)!,\n                version: brand.version,\n            };\n        });\n\n    // TODO: default \"unknown\" value should be added on COF server side. For now we'll use Firefox.\n    if (normalizedBrands.length === 0) return [{ brand: \"Firefox\", version: \"0\" }];\n    return normalizedBrands;\n}\n\n/* eslint-disable max-len */\n/**\n * We must ensure the data we get from `navigator.userAgentData` is normalized to match what our backend expects to\n * see in our custom CameraKitWeb userAgent string.\n *\n * This string is defined here:\n * https://github.sc-corp.net/Snapchat/useragent/blob/9333afe7cc6ac00503ad46cb234bcf94006dff98/java/useragent/src/main/java/snapchat/client/UserAgent.java#L124\n */\n/* eslint-enable */\nfunction normalizeUserAgentData(userAgentData: NavigatorUAData): NavigatorUAData {\n    return {\n        brands: normalizeBrands(userAgentData.brands),\n        mobile: userAgentData.mobile,\n        platform: parseOSName(userAgentData.platform),\n    };\n}\n\n/** @internal */\nexport interface PlatformInfo {\n    sdkShortVersion: string;\n    sdkLongVersion: string;\n    lensCore: {\n        version: string;\n        buildNumber: string;\n        baseUrl: string;\n    };\n    browser: { brand: string; version: string };\n    osName: string;\n    osVersion: string;\n    deviceModel: string;\n    locale: string;\n    fullLocale: string;\n    origin: string;\n    connectionType: ConnectionType;\n}\n\n/** @internal */\nexport const getPlatformInfo = memoize(function getPlatformIno(): PlatformInfo {\n    // [NavigatorUAData](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData) is currently only\n    // available on Chromium-based browsers – it's nice because it gives us clear, well-documented information. But\n    // we'll have to fallback to parsing the userAgent string when it's not available.\n    const userAgent = navigator.userAgent;\n    const userAgentData = isNavigatorUAData(navigator.userAgentData)\n        ? normalizeUserAgentData(navigator.userAgentData)\n        : parseUserAgentData(userAgent);\n\n    const osVersion = parseOSVersion(userAgent);\n    const deviceModel = parseDeviceModel(userAgent);\n\n    // Remove any `-prerelease` or `+buildmetadata` portions from the semver string.\n    const sdkShortVersion = environment.PACKAGE_VERSION.replace(/[-+]\\S+$/, \"\");\n\n    const locale = navigator.language;\n    // The full locale string includes all the languages with qvalues -- this is needed for some API calls.\n    // More on qvalues: https://developer.mozilla.org/en-US/docs/Glossary/Quality_values\n    const fullLocale =\n        (navigator.languages ?? [])\n            .map((lang, index) => {\n                const qvalue = Math.max(0, (10 - index) / 10);\n                return `${lang};q=${qvalue.toFixed(1)}`;\n            })\n            .join(\", \") || locale;\n\n    return {\n        sdkShortVersion,\n        sdkLongVersion: environment.PACKAGE_VERSION,\n        lensCore: lensCoreWasm,\n        // In cases where we've parsed the userAgent string to find the brand, there will only ever be a single brand –\n        // in browsers which support NavigatorUAData there could be more than one (e.g. Chrome and Chromium), but they\n        // should be equivalent for our purposes -- either way we're okay just picking the first one.\n        browser: userAgentData.brands[0],\n        osName: userAgentData.platform,\n        osVersion,\n        deviceModel,\n        locale,\n        fullLocale,\n        origin: parseOrigin(),\n        connectionType: navigator.connection?.type ?? \"unknown\",\n    };\n});\n", "import { exceptions, simd } from \"wasm-feature-detect\";\nimport { memoize } from \"../common/memoize\";\nimport { XrCapabilities } from \"../lens-core-module\";\nimport { platformNotSupportedError } from \"../namedErrors\";\nimport { getPlatformInfo } from \"./platformInfo\";\n\n/** @internal */\nexport type SupportedCapability<T> = T & { supported: true };\n/** @internal */\nexport type UnsupportedCapability = { supported: false; error: Error };\n/** @internal */\nexport type Capability<T = void> = SupportedCapability<T> | UnsupportedCapability;\n\n//-----------\n// WebGL\n//-----------\n\ntype WebGlCapability = Capability<{ maxTextureSize: number }>;\n\n// This required minimum max texture size is based on data from\n// https://web3dsurvey.com/webgl/parameters/MAX_TEXTURE_SIZE. Checking for a reasonable minimum MAX_TEXTURE_SIZE avoids\n// attempting to run lenses on platforms that will not support them -- most commonly, we've seen some platforms that\n// report 0 MAX_TEXTURE_SIZE, which will cause errors for all lenses.\nconst minRequiredMaxTextureSize = 1024;\n\n/**\n * @returns An object with fields describing support for various WebGL features.\n *\n * @internal\n */\nfunction getWebGlSupport(): WebGlCapability {\n    const ctx = document.createElement(\"canvas\").getContext(\"webgl2\");\n    if (!ctx)\n        return {\n            supported: false,\n            error: platformNotSupportedError(\"CameraKit requires WebGL2, but this browser does not support WebGL2.\"),\n        };\n    const maxTextureSize = ctx.getParameter(ctx.MAX_TEXTURE_SIZE);\n    const supported = maxTextureSize >= minRequiredMaxTextureSize;\n    return supported\n        ? { supported, maxTextureSize }\n        : {\n              supported,\n              error: platformNotSupportedError(\n                  `CameraKit requires WebGL's MAX_TEXTURE_SIZE exceed a minimum value of ` +\n                      `${minRequiredMaxTextureSize}, but the browser's reported MAX_TEXTURE_SIZE is ${maxTextureSize}.`\n              ),\n          };\n}\n\n//-----------\n// WASM\n//-----------\n\ntype WasmCapability = Capability<{ wasmFeatures: number }>;\n\n/**\n * Because there may be a large number of WASM-related capabilities, and because these may correspond to various builds\n * of LensCore, we encode the various WASM capabilities into a single number by bitwise OR-ing together the numbers\n * corresponding to each capability.\n *\n * Since each combindation of capabilities is represented by a single number, we can easily map between that number and\n * the corresponding LensCore build name that makes use of those capabilities.\n *\n * @internal\n */\nexport enum WasmFeatures {\n    Default = 0b00000000,\n    SIMD = 0b00000001,\n    ExceptionHandling = 0b00000010,\n}\n\n/**\n * @returns A non-negative integer representing the combination of supported WebAssembly features, or -1 if WebAssembly\n * is not supported at all.\n *\n * @internal\n */\nasync function getWebAssemblyCapabilities(): Promise<WasmCapability> {\n    if (globalThis.WebAssembly === undefined)\n        return {\n            supported: false,\n            error: platformNotSupportedError(\n                \"CameraKit requires WebAssembly, but this browser does not support WebAssembly.\"\n            ),\n        };\n    return {\n        supported: true,\n        wasmFeatures: (\n            await Promise.all([\n                simd().then((supported) => {\n                    // Although Safari 16.4 reports SIMD support, LensCore encounters rendering bugs when using\n                    // SIMD in Safari 16.4. We will disable SIMD for now until Safari stabilizes the feature.\n                    if (getPlatformInfo().browser.brand === \"Safari\") return WasmFeatures.Default;\n                    return supported ? WasmFeatures.SIMD : WasmFeatures.Default;\n                }),\n                exceptions().then((supported) => (supported ? WasmFeatures.ExceptionHandling : WasmFeatures.Default)),\n            ])\n        ).reduce((features, feature) => features | feature, WasmFeatures.Default),\n    };\n}\n\n//-----------\n// WebXR\n//-----------\n\ntype WebXrCapability = Capability<XrCapabilities>;\n\n/**\n * @returns A Promise containing an object with fields describing the support of various WebXR features. This object's\n * type is defined by LensCore, as they consume these capabilities and adjust behavior accordingly.\n *\n * @internal\n */\nasync function getWebXrCapabilities(): Promise<WebXrCapability> {\n    const notSupported: WebXrCapability = {\n        supported: false,\n        error: platformNotSupportedError(\n            `Use of this feature requires WebXR support for immersive AR sessions, but ` +\n                `this browser does not support immersive AR sessions.`\n        ),\n    };\n    if (!isSecureContext) return notSupported;\n    if (!navigator.xr) return notSupported;\n    const isImmersiveArSupported = await navigator.xr.isSessionSupported(\"immersive-ar\");\n    return isImmersiveArSupported\n        ? {\n              supported: true,\n              sixDofSupported: true,\n              sceneDepthSupported: true,\n          }\n        : notSupported;\n}\n\n/** @internal */\nexport interface PlatformCapabilities {\n    webgl: WebGlCapability;\n    wasm: WasmCapability;\n    webxr: WebXrCapability;\n}\n\n/**\n * Get information about the current platform capabilities, including:\n * - WebGL support and various WebGL parameters.\n * - WASM support and support for various WASM features.\n * - WebXR support and support for various WebXR features.\n *\n * @internal\n */\nexport const getPlatformCapabilities = memoize(async function getPlatformCapabilities(): Promise<PlatformCapabilities> {\n    return {\n        webgl: getWebGlSupport(),\n        wasm: await getWebAssemblyCapabilities(),\n        webxr: await getWebXrCapabilities(),\n    };\n});\n", "import { DefaultErrorHandler, LensCoreModule } from \"./generated-types\";\n\ntype ErrorName = `${string}Error`;\ntype NamedError<Name extends ErrorName> = Error & { name: Name };\n\nexport type LensCoreLensDeserializationError = NamedError<\"LensCoreLensDeserializationError\">;\nexport type LensCoreValidationError = NamedError<\"LensCoreValidationError\">;\nexport type LensCoreUncategorizedError = NamedError<\"LensCoreUncategorizedError\">;\nexport type LensCoreLensExecutionError = NamedError<\"LensCoreLensExecutionError\">;\nexport type LensCoreAbortError = NamedError<\"LensCoreAbortError\">;\nexport type LensCoreUninitializedError = NamedError<\"LensCoreUninitializedError\">;\nexport type LensCoreUnknownError = NamedError<\"LensCoreUnknownError\">;\n\nexport type LensCoreError =\n    | LensCoreLensDeserializationError\n    | LensCoreValidationError\n    | LensCoreUncategorizedError\n    | LensCoreLensExecutionError\n    | LensCoreAbortError\n    | LensCoreUninitializedError;\n\ntype NativeLensCoreError = keyof LensCoreModule[\"ErrorType\"];\n\n// Construct a map linking each LensCore error name to its value,\n// designed to trigger a compile-time error if an error is added or removed in LensCore.\n// eslint-disable-next-line max-len\n// https://github.sc-corp.net/Snapchat/LensCore/blob/master/Src/PlatformSpecific/WebAssembly/ErrorType.hpp#L4\nconst lensCoreErrorValue: Record<NativeLensCoreError, number> = {\n    LensDeserialization: 0,\n    Validation: 1,\n    Uncategorized: 2,\n    LensExecution: 3,\n    Abort: 4,\n    Uninitialized: 5,\n};\n\n// The purpose of lensCoreErrorValue above is to safeguard integrity.\n// To achieve constant lookup times, we must swap the keys with their corresponding values.\nconst lensCoreErrorName = Object.fromEntries(\n    Object.entries(lensCoreErrorValue).map((entry) => [entry[1], entry[0] as NativeLensCoreError] as const)\n);\n\nexport function wrapLensCoreError(fn: (e: LensCoreError) => void) {\n    const handler: DefaultErrorHandler = (cause) => {\n        const error = new Error(cause.message.split(\"\\n\")[0], {\n            cause:\n                cause.otherExceptions || cause.cause?.metadata\n                    ? {\n                          otherExceptions: cause.otherExceptions,\n                          metadata: cause.cause.metadata,\n                      }\n                    : undefined,\n        });\n        const name: (LensCoreError | LensCoreUnknownError)[\"name\"] = `LensCore${\n            cause.cause ? lensCoreErrorName[cause.cause.type.value] : \"Unknown\"\n        }Error` as const;\n        error.name = name;\n        if (cause.stack) {\n            // if cause has a stack, then we just replace the first line of it\n            // which is actually a error message with our new one, which also contains new error name\n            const [_, ...stackLines] = cause.stack.split(\"\\n\");\n            if (error.stack) {\n                stackLines.unshift(error.stack.split(\"\\n\")[0]);\n            }\n            error.stack = stackLines.join(\"\\n\");\n        }\n        // Safety: we set name above and therefore sure the type of error is correct\n        fn(error as LensCoreError);\n    };\n    return handler;\n}\n", "import { DefaultErrorHandler, DefaultEventHandler, LensCoreModule } from \"./generated-types\";\nimport { LensCoreError, wrapLensCoreError } from \"./lensCoreError\";\n\n// Note: While this looks similar to Omit, Omit breaks discriminated unions:\n// https://github.com/microsoft/TypeScript/issues/31501\n// This is relevant in the case of setRenderMode().\ntype SafeOmit<T, K extends keyof any> = T extends any ? Omit<T, K> : never;\n\n/**\n * LensCore methods that require additional handling.\n */\ntype LensCoreCustomMethods = {\n    // initialize() param has exceptionHandler, which requires error mapping.\n    initialize(input: PromisifiedParam<MapParamErrorCallback<\"initialize\", \"exceptionHandler\">>): Promise<void>;\n\n    // provideRemoteAssetsResponse() param has onFailure, which requires error mapping.\n    provideRemoteAssetsResponse(input: MapParamErrorCallback<\"provideRemoteAssetsResponse\", \"onFailure\">): void;\n};\n\n// Ensure method names defined in CustomLensCoreMethods are the ones that exist in LensCoreModule.\ntype LensCoreCustomMethodNames = keyof LensCoreCustomMethods extends keyof LensCoreModule\n    ? keyof LensCoreCustomMethods\n    : never;\n\ntype PropertyKinds = \"enum\" | \"sync method\" | \"promisifiable method\" | \"custom method\";\n\n// Create a mapping between property keys and the kind of property it is (enum, sync method, or async method)\ntype LensCorePropertyKinds = {\n    [K in keyof LensCoreModule]: LensCoreModule[K] extends (...args: any[]) => any\n        ? K extends LensCoreCustomMethodNames\n            ? \"custom method\"\n            : Parameters<LensCoreModule[K]>[0] extends {\n                  onSuccess?: DefaultEventHandler;\n                  onFailuer?: DefaultErrorHandler;\n              }\n            ? \"promisifiable method\"\n            : \"sync method\"\n        : \"enum\";\n};\n\n// Helper to select LensCoreModule properties of a particular kind.\ntype PropertiesOfKind<T extends PropertyKinds> = Exclude<\n    {\n        [K in keyof LensCorePropertyKinds]: LensCorePropertyKinds[K] extends T ? K : never;\n    }[keyof LensCorePropertyKinds],\n    undefined\n>;\ntype FirstParameter<T> = T extends (first: infer P, ...rest: any[]) => any ? P : never;\ntype LensCoreEnums = Pick<LensCoreModule, PropertiesOfKind<\"enum\">>;\ntype LensCoreSyncMethods = Pick<LensCoreModule, PropertiesOfKind<\"sync method\">>;\ntype LensCorePromisifiedMethods = {\n    [K in PropertiesOfKind<\"promisifiable method\">]: K extends keyof LensCoreModule\n        ? keyof SafeOmit<Parameters<LensCoreModule[K]>[0], \"onSuccess\" | \"onFailure\"> extends never\n            ? () => Promise<FirstParameter<Parameters<LensCoreModule[K]>[0][\"onSuccess\"]>>\n            : (\n                  input: SafeOmit<Parameters<LensCoreModule[K]>[0], \"onSuccess\" | \"onFailure\">\n              ) => Promise<FirstParameter<Parameters<LensCoreModule[K]>[0][\"onSuccess\"]>>\n        : never;\n};\ntype PromisifiedParam<T extends { onSuccess?: DefaultEventHandler; onFailure?: DefaultErrorHandler }> = {\n    [P in keyof T as P extends \"onSuccess\" | \"onFailure\" ? never : P]: T[P];\n};\ntype MapParamErrorCallback<\n    T extends PropertiesOfKind<\"custom method\">,\n    U extends keyof LensCoreMethodFirstParam<T>\n> = MapErrorCallback<LensCoreMethodFirstParam<T>, U>;\ntype LensCoreMethodFirstParam<T extends PropertiesOfKind<\"custom method\">> = Parameters<LensCoreModule[T]>[0];\ntype MapErrorCallback<T, U extends keyof T> = { [P in keyof T]: P extends U ? (err: LensCoreError) => void : T[P] };\n\n// By using PropertiesOfKind, we can ensure a compile-time error if LensCoreModule adds a new async method,\n// but we forget to update this list.\nconst promisifiableMethods: { [K in PropertiesOfKind<\"promisifiable method\">]: null } = {\n    addLens: null,\n    clearAllLenses: null,\n    imageToYuvBuffer: null,\n    pauseCanvas: null,\n    playCanvas: null,\n    processAudioSampleBuffer: null,\n    processFrame: null,\n    removeLens: null,\n    replaceLenses: null,\n    setAudioParameters: null,\n    setDeviceClass: null,\n    setFPSLimit: null,\n    setInputTransform: null,\n    setOnFrameProcessedCallback: null,\n    setRenderLoopMode: null,\n    setRenderSize: null,\n    teardown: null,\n    useMediaElement: null,\n    yuvBufferToBitmap: null,\n};\n\nexport type LensCore = LensCoreEnums & LensCoreSyncMethods & LensCorePromisifiedMethods & LensCoreCustomMethods;\n\nexport const createLensCore = (lensCoreModule: LensCoreModule): LensCore => {\n    const customMethods: LensCoreCustomMethods = {\n        initialize(input) {\n            return new Promise((onSuccess, onFailure) =>\n                lensCoreModule.initialize({\n                    ...input,\n                    exceptionHandler: input.exceptionHandler && wrapLensCoreError(input.exceptionHandler),\n                    onSuccess,\n                    onFailure: wrapLensCoreError(onFailure),\n                })\n            );\n        },\n\n        provideRemoteAssetsResponse(input) {\n            return lensCoreModule.provideRemoteAssetsResponse({\n                ...input,\n                onFailure: input.onFailure && wrapLensCoreError(input.onFailure),\n            });\n        },\n    };\n\n    return new Proxy(lensCoreModule, {\n        get: (target, property, receiver) => {\n            // Handle special methods with custom implementations\n            if (property in customMethods) {\n                // Safety: \"in\" operator above ensures that property is keyof LensCoreCustomMethods\n                return customMethods[property as keyof LensCoreCustomMethods];\n            }\n\n            // All other async methods return Promises\n            if (property in promisifiableMethods) {\n                const method = Reflect.get(target, property, receiver);\n                if (!method) method;\n                return (input: Parameters<LensCorePromisifiedMethods[keyof LensCorePromisifiedMethods]>[0]) =>\n                    new Promise((onSuccess, onFailure) =>\n                        method({\n                            ...input,\n                            onSuccess,\n                            onFailure: wrapLensCoreError(onFailure),\n                        })\n                    );\n            }\n\n            // All other kinds of properties (enums, sync methods) are unmodified.\n            return Reflect.get(target, property, receiver);\n        },\n        // Safety: We ensured safety by defining types for both custom and promisifiable methods.\n    }) as LensCore;\n};\n", "import lensCoreWasm from \"../../lensCoreWasmVersions.json\";\nimport { loadScript } from \"../../common\";\nimport { CameraKitConfiguration, configurationToken } from \"../../configuration\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { InitialEmscriptenModule, LensCoreModule } from \"../generated-types\";\nimport { getLogger } from \"../../logger/logger\";\nimport { WasmFeatures, getPlatformCapabilities } from \"../../platform/platformCapabilities\";\nimport { getPlatformInfo } from \"../../platform/platformInfo\";\nimport { createLensCore } from \"../lensCore\";\n\nconst logger = getLogger(\"lensCoreFactory\");\n\nconst wasmAssets = [\"LensCoreWebAssembly.js\", \"LensCoreWebAssembly.wasm\"];\n\nconst findMatch = (regex: RegExp, strings: string[]) => strings.find((s) => regex.test(s));\n\n/**\n * Map various combinations of WebAssembly capabilities to the corresponding LensCore build flavours which make use\n * of them.\n */\nconst wasmCapabilitiesToLensCoreBuildFlavor = {\n    [WasmFeatures.Default]: \"release\",\n    [WasmFeatures.ExceptionHandling]: \"rel-neh\",\n    [WasmFeatures.SIMD]: \"release-simd\",\n    [WasmFeatures.ExceptionHandling | WasmFeatures.SIMD]: \"rel-simd-neh\",\n};\n\n/**\n * Returns a list of URLs for resources which will be fetched during {@link bootstrapCameraKit}.\n *\n * When CameraKit is used on a website, these URLs much be reachable in order for CameraKit to be successfully\n * bootstrapped.\n *\n * @param endpointOverride Optional endpoint override to load the assets from.\n * @returns An array of asset URLs.\n *\n * @category Bootstrapping and Configuration\n */\nexport async function getRequiredBootstrapURLs(endpointOverride?: string): Promise<string[]> {\n    // If we have an endpoint override, remove trailing `/` so we can construct a valid URL.\n    const endpoint = endpointOverride?.replace(/[\\/]+$/, \"\");\n\n    const { wasm } = await getPlatformCapabilities();\n    if (!wasm.supported) throw wasm.error;\n\n    const { lensCore } = getPlatformInfo();\n    const flavor = wasmCapabilitiesToLensCoreBuildFlavor[wasm.wasmFeatures];\n    if (!flavor)\n        throw new Error(\n            `Could not determine a LensCore build flavor corresponding to the bitstring ` +\n                `${wasm.wasmFeatures.toString(2)}. CameraKit cannot be bootstrapped.`\n        );\n    const version = lensCore.version;\n    const buildNumber = lensCore.buildNumber;\n    return wasmAssets.map((asset) => {\n        if (endpoint) return `${endpoint}/${asset}`;\n        const { origin, pathname, search } = new URL(lensCore.baseUrl);\n        return `${origin}${pathname}/${version}/${buildNumber}/${flavor}/${asset}${search}`;\n    });\n}\n\n/**\n * This component is responsible for:\n *   1) Loading LensCore WebAssembly (WASM) assets\n *   2) Using the WASM assets to initialize the LensCore WASM module\n *\n * By default, WASM assets will be loaded from the Bolt CDN – but if `endpoint` is provided, assets will be loaded\n * using it as a base URL.\n *\n * @internal\n */\nexport const lensCoreFactory = Injectable(\n    \"lensCore\",\n    [defaultFetchHandlerFactory.token, configurationToken] as const,\n    async (handler: FetchHandler, { lensCoreOverrideUrls, wasmEndpointOverride }: CameraKitConfiguration) => {\n        let lensCoreJS: string;\n        let lensCoreWASM: string;\n\n        if (lensCoreOverrideUrls) {\n            lensCoreJS = lensCoreOverrideUrls.js;\n            lensCoreWASM = lensCoreOverrideUrls.wasm;\n        } else {\n            const endpointOverride = wasmEndpointOverride ?? undefined;\n            const assetURLs = await getRequiredBootstrapURLs(endpointOverride);\n\n            lensCoreJS = findMatch(/\\.js/, assetURLs) ?? \"\";\n            lensCoreWASM = findMatch(/\\.wasm/, assetURLs) ?? \"\";\n\n            if (!lensCoreJS || !lensCoreWASM) {\n                throw new Error(\n                    `Cannot fetch required LensCore assets. Either the JS or WASM filename is missing from ` +\n                        `this list: ${assetURLs}.`\n                );\n            }\n\n            // Fetching here and creating an Object URL lets LensCore optimized loading itself in a WebWorker,\n            // otherwise the glue script would need to be downloaded again.\n            const glueScript = await handler(lensCoreJS).then((r) => r.blob());\n            lensCoreJS = URL.createObjectURL(glueScript);\n        }\n\n        const scriptElement = await loadScript(lensCoreJS);\n\n        const lensCore = await new Promise<InitialEmscriptenModule & LensCoreModule>((resolve, reject) => {\n            let initialModule: Partial<InitialEmscriptenModule>;\n            // will trigger WASM initialization and data loading,\n            // after completion it will be safe to call imported WASM functions\n            // More about emscripten initialization:\n            // eslint-disable-next-line max-len\n            // https://emscripten.org/docs/getting_started/FAQ.html?highlight=modularize#how-can-i-tell-when-the-page-is-fully-loaded-and-it-is-safe-to-call-compiled-functions\n            const moduleInit = globalThis.createLensesModule(\n                (initialModule = {\n                    // url will be used for loading glue JS during Worker inialization\n                    mainScriptUrlOrBlob: lensCoreJS,\n                    // will be triggered by Emscripten during the initialization\n                    instantiateWasm: (importObject, receiveInstance) => {\n                        WebAssembly.instantiateStreaming(handler(lensCoreWASM), importObject)\n                            .then(function ({ instance, module }) {\n                                receiveInstance(instance, module);\n                                // compiled module will be reused in Worker\n                                initialModule.compiledModule = module;\n                                resolve(moduleInit);\n                            })\n                            .catch(reject);\n                    },\n                })\n            );\n        });\n\n        // now when we have LensCore WASM in memory we can release the script element\n        scriptElement.remove();\n\n        // print warning if loaded version differs from hardcoded one\n        if (lensCoreWasm.version != `${lensCore.getCoreVersion()}`) {\n            logger.warn(\n                `Loaded LensCore version (${lensCore.getCoreVersion()}) differs from expected one (${\n                    lensCoreWasm.version\n                })`\n            );\n        }\n\n        return createLensCore(lensCore);\n    }\n);\n", "import { webGLError } from \"../namedErrors\";\n\nconst webGLEntityCreationError = (name: string) => webGLError(`Could not create ${name}.`);\n\nexport function createProgram(gl: WebGL2RenderingContext, vertexSource: string, fragmentSource: string): WebGLProgram {\n    const vertexShader = createShader(gl, vertexSource, gl.VERTEX_SHADER);\n    const fragmentShader = createShader(gl, fragmentSource, gl.FRAGMENT_SHADER);\n    const program = gl.createProgram();\n    if (!program) throw webGLEntityCreationError(\"WebGLProgram\");\n    gl.attachShader(program, vertexShader);\n    gl.deleteShader(vertexShader);\n\n    gl.attachShader(program, fragmentShader);\n    gl.deleteShader(fragmentShader);\n\n    gl.linkProgram(program);\n\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!success) {\n        const message = gl.getProgramInfoLog(program);\n        gl.deleteProgram(program);\n        throw webGLError(`WebGLProgram linking failed with status: ${message}.`);\n    }\n\n    return program;\n}\n\nexport function createShader(gl: WebGL2RenderingContext, source: string, type: number): WebGLShader {\n    const shader = gl.createShader(type);\n    if (!shader) throw webGLEntityCreationError(`WebGLShader (type ${type})`);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!success) {\n        const message = gl.getShaderInfoLog(shader);\n        gl.deleteShader(shader);\n        throw webGLError(`WebGLShader (type ${type}) compilation failed with status: ${message}.`);\n    }\n    return shader;\n}\n\nexport function createTexture(gl: WebGL2RenderingContext, width: number, height: number): WebGLTexture {\n    const texture = gl.createTexture();\n    if (!texture) throw webGLEntityCreationError(\"WebGLTexture\");\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    return texture;\n}\n\nexport function createFramebuffer(gl: WebGL2RenderingContext, texture: WebGLTexture): WebGLFramebuffer {\n    const framebuffer = gl.createFramebuffer();\n    if (!framebuffer) throw webGLEntityCreationError(\"WebGLFramebuffer\");\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    return framebuffer;\n}\n\nexport function setUniform1i(gl: WebGL2RenderingContext, program: WebGLProgram, name: string, data: number): void {\n    gl.uniform1i(gl.getUniformLocation(program, name), data);\n}\n\nexport function setUniform4f(\n    gl: WebGL2RenderingContext,\n    program: WebGLProgram,\n    name: string,\n    data: [number, number, number, number]\n): void {\n    gl.uniform4f(gl.getUniformLocation(program, name), ...data);\n}\n\nexport function promiseSync(gl: WebGL2RenderingContext): Promise<void> {\n    const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    if (!sync) throw webGLEntityCreationError(\"WebGLSync\");\n    gl.flush();\n    return new Promise((resolve, reject) => {\n        const waitForSync = (): void => {\n            const glEnum = gl.clientWaitSync(sync, 0, 0);\n            switch (glEnum) {\n                case gl.TIMEOUT_EXPIRED:\n                    setTimeout(waitForSync);\n                    return;\n                case gl.WAIT_FAILED:\n                    gl.deleteSync(sync);\n                    return reject();\n                case gl.ALREADY_SIGNALED:\n                case gl.CONDITION_SATISFIED:\n                    gl.deleteSync(sync);\n                    return resolve();\n            }\n        };\n        waitForSync();\n    });\n}\n", "import { BenchmarkResult, LensPerformanceCluster } from \"./estimateLensPerformanceCluster\";\nimport { createFramebuffer, createProgram, createTexture, promiseSync, setUniform1i, setUniform4f } from \"./webglUtils\";\n\nconst vertexSource = `#version 300 es\n\nprecision mediump float;\nprecision mediump int;\n\nin vec2 pos;\n\nvoid main() {\n    gl_Position = vec4(pos, 0.0, 1.0);\n}\n`;\n\nconst fragmentSource = `#version 300 es\n\nprecision mediump float;\nprecision mediump int;\n\nuniform int LOOP_COUNT;\nuniform vec4 v0;\nuniform vec4 v1;\nuniform vec4 v2;\n\nout vec4 fragColor;\n\n#define REPEAT_2(x) x; x\n#define REPEAT_4(x) REPEAT_2(x); REPEAT_2(x)\n#define REPEAT_8(x) REPEAT_4(x); REPEAT_4(x)\n#define REPEAT_16(x) REPEAT_8(x); REPEAT_8(x)\n#define REPEAT_32(x) REPEAT_16(x); REPEAT_16(x)\n\nvoid main() {\n    vec4 r = v2;\n    for (int i = 0; i < LOOP_COUNT; i++) {\n        REPEAT_32(r = r * v1 + v0);\n    }\n    fragColor = r;\n}\n`;\n\nconst width = 1024;\nconst height = 1024;\nconst budgetMs = 300;\nconst maxLoopCount = 1000;\n\nfunction prepareBenchmark(gl: WebGL2RenderingContext): { program: WebGLProgram; cleanupBenchmark: () => void } {\n    const texture = createTexture(gl, width, height);\n    const framebuffer = createFramebuffer(gl, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n        throw new Error(\"Failed to create WebGLBuffer.\");\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, 1, -1, -1, 1, -1, 1, 1]), gl.STATIC_DRAW);\n\n    gl.viewport(0, 0, width, height);\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.DEPTH_TEST);\n\n    const program = createProgram(gl, vertexSource, fragmentSource);\n    gl.useProgram(program);\n\n    const posLocation = gl.getAttribLocation(program, \"pos\");\n    gl.enableVertexAttribArray(posLocation);\n    gl.vertexAttribPointer(posLocation, 2, gl.FLOAT, false, 0, 0);\n\n    setUniform4f(gl, program, \"v0\", [1.15, 1.23, 1.47, 1.84]);\n    setUniform4f(gl, program, \"v1\", [1.65, 1.22, 1.69, 1.04]);\n    setUniform4f(gl, program, \"v2\", [1.05, 1.3, 1.55, 1.23]);\n\n    return {\n        program,\n        cleanupBenchmark: () => {\n            gl.deleteProgram(program);\n            gl.deleteBuffer(buffer);\n            gl.deleteFramebuffer(framebuffer);\n            gl.deleteTexture(texture);\n        },\n    };\n}\n\nasync function runBenchmark(gl: WebGL2RenderingContext, program: WebGLProgram): Promise<number> {\n    await promiseSync(gl);\n\n    const start = performance.now();\n    const flops: number[] = [];\n\n    let loopCount = 20;\n    while (true) {\n        setUniform1i(gl, program, \"LOOP_COUNT\", loopCount);\n\n        const iterationStart = performance.now();\n\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n        await promiseSync(gl);\n\n        const iterationEnd = performance.now();\n        const duration = iterationEnd - iterationStart;\n        flops.push(loopCount / duration);\n\n        const remainingBudgetMs = budgetMs - (iterationEnd - start);\n        if (remainingBudgetMs < 0) break;\n\n        if (loopCount < maxLoopCount) {\n            loopCount += remainingBudgetMs < duration ? 10 : (0.6 * loopCount * remainingBudgetMs) / duration;\n        }\n    }\n\n    const maxFlops = Math.max(...flops) * (8 * 32) * width * height;\n    return maxFlops / 1e6;\n}\n\n/**\n * These are obtained from historical performance data gathered from end-user devices. Keys are gflops, values are the\n * corresponding performance rating.\n *\n * To compute the performance rating given a gflops value, find the nearest key in this map and look up the rating.\n */\nexport const gflopsClusterCenters = new Map<number, LensPerformanceCluster>([\n    [34, 1],\n    [134, 2],\n    [385, 3],\n    [783, 4],\n    [1484, 5],\n    [2313, 6],\n]);\n\n/**\n * This benchmark is the same that's run on non-web (e.g. native mobile) platforms, and produces results that can be\n * compared to those gathered on those platforms – this allows us to cluster results and determine a performance rating\n * based on historical data gathered elsewhere.\n *\n * @internal\n */\nexport async function benchmarkGflops(gl: WebGL2RenderingContext): Promise<BenchmarkResult> {\n    const { program, cleanupBenchmark } = prepareBenchmark(gl);\n    const gflops = await runBenchmark(gl, program);\n    cleanupBenchmark();\n    return { name: \"gflops\", value: gflops };\n}\n", "import { benchmarkError } from \"../namedErrors\";\nimport { gflopsClusterCenters, benchmarkGflops } from \"./benchmarkGflops\";\n\nconst findNearest = (n: number, arr: number[]) => arr.reduce((a, b) => (Math.abs(a - n) <= Math.abs(b - n) ? a : b));\n\nconst webglContextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    antialias: false,\n    premultipliedAlpha: false,\n    preserveDrawingBuffer: false,\n    depth: false,\n    stencil: false,\n    failIfMajorPerformanceCaveat: false,\n    powerPreference: \"high-performance\",\n};\n\n/** @category Bootstrapping and Configuration */\nexport type LensPerformanceCluster = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n/** @internal */\nexport type BenchmarkResult = { name: string; value: number };\n\n/**\n * Some lenses may decide to modify their behavior based on the performance of the current environment. If you are\n * using such lenses, providing an estimation of lens performance may lead to better user experience (especially on\n * low-performance devices).\n *\n * The cluster value will be an integer from 1-6 which classifies expected lens performance, where 6 is the highest-\n * performing cluster and 1 the lowest.\n *\n * All the raw benchmark results used to estimate the performance cluster are also included for reporting purposes.\n *\n * @category Bootstrapping and Configuration\n */\nexport interface EstimatedLensPerformance {\n    cluster: LensPerformanceCluster;\n    benchmarks: BenchmarkResult[];\n    webglRendererInfo: string;\n}\n\n/**\n * Run benchmarks which attempt to predict expected lens performance, and assign a cluster (i.e. a performance rating)\n * which the CameraKit SDK can use to optimize certain lenses.\n *\n * @returns A rating from 1-6, indicating expected Lens performance.\n *\n * @category Bootstrapping and Configuration\n */\nexport async function estimateLensPerformance(): Promise<EstimatedLensPerformance> {\n    // Prepare performance measurement.\n    const canvas = document.createElement(\"canvas\");\n    const gl = canvas.getContext(\"webgl2\", webglContextAttributes);\n    if (!gl) throw benchmarkError(\"WebGL2 is required to compute performance, but it is not supported.\");\n\n    const debugInfo = gl.getExtension(\"WEBGL_debug_renderer_info\");\n    const webglRendererInfo = debugInfo ? (gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL) as string) : \"unknown\";\n\n    // Measure performance (just GFLOPS for now, but could add more benchmarks in the future).\n    const gflops = await benchmarkGflops(gl);\n\n    // Combine performance results and compute a performance rating. Right now we just run a single benchmark, so this\n    // is pretty trivial.\n    const nearestGflopsClusterCenter = findNearest(gflops.value, Array.from(gflopsClusterCenters.keys()));\n\n    // This should always find a value, but just in case something strange happens inside `findNearest`, we'll default\n    // to zero (instead of asserting .get() will always be defined).\n    const gflopsCluster = gflopsClusterCenters.get(nearestGflopsClusterCenter) ?? 0;\n\n    return {\n        cluster: gflopsCluster,\n        benchmarks: [gflops],\n        webglRendererInfo,\n    };\n}\n", "/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process[\"env\" + \"\"] && process[\"env\" + \"\"][\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", "import \"reflect-metadata\";\nimport { Guard } from \"./typeguards\";\n\nconst predicateMetadataKey = Symbol(\"validate\");\n\n// A map of primitive types accoring to\n/* eslint-disable max-len */\n// http://blog.wolksoftware.com/decorators-metadata-reflection-in-typescript-from-novice-to-expert-part-4#3-basic-type-serialization_1\nconst primitiveMap: Record<string, StringConstructor | NumberConstructor | BooleanConstructor> = {\n    string: String,\n    number: Number,\n    boolean: Boolean,\n};\n\nconst ordinalSuffixMap: Record<number, string> = {\n    1: \"st\",\n    2: \"nd\",\n    3: \"rd\",\n};\n\nfunction getArgumentInfo(target: Object, methodName: string | symbol, argumentIndex: number, arg: unknown) {\n    let argString;\n    try {\n        argString = JSON.stringify(arg);\n    } catch {\n        argString = String(arg);\n    }\n    return {\n        argPosition: `${argumentIndex + 1}${ordinalSuffixMap[argumentIndex + 1] ?? \"th\"}`,\n        methodPath: `${getTypeName(target)}.${String(methodName)}()`,\n        argTypeName: getTypeName(arg),\n        argString,\n    };\n}\n\nexport function guard<T>(predicate: Guard<T>) {\n    return (target: Object, propertyKey: string | symbol, parameterIndex: number) => {\n        let existingPredicates: Array<Guard<any>> =\n            Reflect.getOwnMetadata(predicateMetadataKey, target, propertyKey) || [];\n        existingPredicates[parameterIndex] = predicate;\n        Reflect.defineMetadata(predicateMetadataKey, existingPredicates, target, propertyKey);\n    };\n}\n\nexport function validate(target: Object, key: string | symbol, descriptor: PropertyDescriptor): void {\n    const method = descriptor.value!;\n    const types = Reflect.getMetadata(\"design:paramtypes\", target, key);\n    const predicates = Reflect.getMetadata(predicateMetadataKey, target, key);\n    descriptor.value = function (...args: unknown[]) {\n        for (const [i, type] of types.entries()) {\n            let arg = Array.isArray(args) && args[i];\n\n            if (!!predicates && predicates[i] && !predicates[i](arg)) {\n                const { methodPath, argPosition, argString } = getArgumentInfo(target, key, i, arg);\n                throw new Error(\n                    `The ${argPosition} argument to ${methodPath} method has an invalid value: ${argString}.`\n                );\n            }\n            if (arg === undefined || arg === null) {\n                // TODO: is there a way to check for nullable parameter?\n                break;\n            }\n            if (!isValueOfType(arg, type)) {\n                const { methodPath, argPosition, argTypeName } = getArgumentInfo(target, key, i, arg);\n                throw new Error(\n                    `The ${argPosition} argument to ${methodPath} method is of type ` +\n                        `${argTypeName}, which is not assignable to parameter of type ${type.name}.`\n                );\n            }\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * Checks whether given value is assignable to provided type.\n */\nexport function isValueOfType(value: unknown, type: any) {\n    if (value instanceof type) {\n        return true;\n    }\n    // test for primitive value\n    const isPrimitive = value !== Object(value);\n    return isPrimitive && primitiveMap[typeof value] === type;\n}\n\n/* eslint-disable max-len */\n/**\n * Returns type string of a value. It mostly mimics the behavior of typeof, but for non-primitives\n * (i.e. objects and functions), it returns a more granular type name where possible. Source:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof#custom_method_that_gets_a_more_specific_type\n */\nexport function getTypeName(value: unknown): string {\n    if (value === null) {\n        return \"null\";\n    }\n\n    const baseType = typeof value;\n    // Primitive types\n    if (![\"object\", \"function\"].includes(baseType)) {\n        return baseType;\n    }\n\n    // Safety: at this point null and undefined values are already handled\n    const nonNullValue = value!;\n\n    // Symbol.toStringTag often specifies the \"display name\" of the\n    // object's class. It's used in Object.prototype.toString().\n    // Safety: cast to an object with Symbol.toStringTag key in order to check for its existance.\n    const tag = (nonNullValue as { [Symbol.toStringTag]?: string })[Symbol.toStringTag];\n    if (typeof tag === \"string\") {\n        return tag;\n    }\n\n    // If it's a function whose source code starts with the \"class\" keyword\n    if (baseType === \"function\" && Function.prototype.toString.call(nonNullValue).startsWith(\"class\")) {\n        return \"class\";\n    }\n\n    // The name of the constructor; for example `Array`, `GeneratorFunction`,\n    // `Number`, `String`, `Boolean` or `MyCustomClass`\n    const className = nonNullValue.constructor.name;\n    if (typeof className === \"string\" && className !== \"\") {\n        return className;\n    }\n\n    // At this point there's no robust way to get the type of value,\n    // so we use the base implementation.\n    return baseType;\n}\n", "import { memoize } from \"../common/memoize\";\nimport { getConfigurationOverrides } from \"../configurationOverrides\";\nimport { getPlatformInfo } from \"./platformInfo\";\n\n/** @internal */\nexport const getCameraKitUserAgent = memoize(function getCameraKitUserAgent(): string {\n    const { browser, deviceModel, origin, osName, osVersion, sdkShortVersion, lensCore } = getPlatformInfo();\n\n    // Set this to `DEBUG` manually while testing / root-causing.\n    const { userAgentFlavor } = getConfigurationOverrides() ?? { userAgentFlavor: \"release\" };\n    const flavor: \"\" | \"DEBUG \" = userAgentFlavor === \"release\" ? \"\" : \"DEBUG \";\n\n    // This full string is defined here:\n    // eslint-disable-next-line max-len\n    // https://github.sc-corp.net/Snapchat/useragent/blob/9333afe7cc6ac00503ad46cb234bcf94006dff98/java/useragent/src/main/java/snapchat/client/UserAgent.java#L124\n    return (\n        `CameraKitWeb/${sdkShortVersion} ${flavor}(${deviceModel}; ${osName} ${osVersion}) ` +\n        `${browser.brand}/${browser.version} Core/${lensCore.version} ` +\n        // We overload appId, using the origin instead of the true appId parsed from the apiToken -- we do this because\n        // origin is human-readable, and this is used to populate the appId dimension in operational metrics.\n        `AppId/${origin}`\n    );\n});\n", "import { ChainableHandler } from \"./HandlerChainBuilder\";\n\n/**\n * Modify a Fetch Request's headers.\n *\n * @param modifyHeaders\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createHeadersModifyingFetchHandler =\n    <Res>(\n        modifyHeaders: (headers: Headers) => Headers\n    ): ChainableHandler<RequestInfo, Res, RequestInfo, Res, RequestInit | undefined> =>\n    (next) =>\n    (input, init) => {\n        const headers =\n            init && init.headers\n                ? new Headers(init.headers)\n                : typeof input === \"string\"\n                ? new Headers()\n                : input.headers;\n\n        const modifiedHeaders = modifyHeaders(headers);\n\n        // When `init` contains headers, `fetch` uses these *instead* of any headers found in the `input` Request.\n        return next(input, { ...init, headers: modifiedHeaders });\n    };\n", "import { getCameraKitUserAgent } from \"../platform/cameraKitUserAgent\";\nimport { CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"./defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"./HandlerChainBuilder\";\nimport { createHeadersModifyingFetchHandler } from \"./headersModifyingFetchHandler\";\n\n/**\n * A Fetch implementation which adds headers required to make authenticated calls to the CameraKit backend service.\n *\n * @internal\n */\nexport const cameraKitServiceFetchHandlerFactory = Injectable(\n    \"cameraKitServiceFetchHandler\",\n    [configurationToken, defaultFetchHandlerFactory.token] as const,\n    ({ apiToken }: CameraKitConfiguration, defaultFetchHandler: FetchHandler) => {\n        return new HandlerChainBuilder(defaultFetchHandler).map(\n            createHeadersModifyingFetchHandler((headers) => {\n                headers.append(\"x-snap-client-user-agent\", getCameraKitUserAgent());\n                headers.append(\"authorization\", `Bearer ${apiToken}`);\n                return headers;\n            })\n        ).handler;\n    }\n);\n", "import { isUndefined } from \"../common/typeguards\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\n\n/**\n * A source of a lens group.\n */\nexport interface LensSource {\n    /**\n     * Whether the given source is able to load lenses of the supplied group.\n     * @param groupId Group ID to check.\n     */\n    isGroupOwner(groupId: string): boolean;\n\n    /**\n     * Returns an encoded lens object.\n     * @param lensId Lens ID to get.\n     * @param groupId Group ID the lens belongs to.\n     */\n    getLens?(lensId: string, groupId: string): Promise<ArrayBuffer>;\n\n    /**\n     * Returns encoded lens objects.\n     * @param groupId Group ID to get lenses of.\n     */\n    getLensGroup?(groupId: string): Promise<ArrayBuffer[]>;\n}\n\n/**\n * A chain of {@link LensSource} objects to be registered in Camera Kit on bootstrap. Camera Kit evaluates all\n * registered {@link LensSource} objects for a group ownership during Lens retrieval ({@link CameraKit.lenses}).\n * And if a source claims the ownership, its {@link LensSource.getLens} or {@link LensSource.getLensGroup}\n * methods are called.\n */\nexport class LensSources {\n    /**\n     * Returns empty LensSources instance.\n     * @internal\n     */\n    static empty() {\n        // NOTE: we want to keep LensSources constructor to require arguments\n        // but internally we don't need them for the base case\n        // @ts-expect-error\n        return new LensSources();\n    }\n\n    private readonly fallbackSources: LensSources | undefined;\n    private readonly source: LensSource | undefined;\n\n    /**\n     * Creates an instance of Lens sources.\n     * @param fallbackSources A fallback sources if given {@link LensSource} doesn't claim a group ownership.\n     * @param source Lens source.\n     */\n    constructor(fallbackSources: LensSources, source: LensSource) {\n        this.fallbackSources = fallbackSources;\n        this.source = source;\n    }\n\n    /**\n     * Returns envelopes of lens/groups taking into account group ownership.\n     * @internal\n     * @param groupId A group to test ownership and get lens envelopes of.\n     * @param lensId An optional lens ID to narrow envelopes down to a single lens.\n     * @returns Envelopes or undefined if not applicable.\n     */\n    async retrieveLenses({ groupId, lensId }: { groupId: string; lensId?: string }): Promise<ArrayBuffer[] | void> {\n        if (this.source?.isGroupOwner(groupId)) {\n            if (isUndefined(lensId)) {\n                if (this.source.getLensGroup) return this.source.getLensGroup(groupId);\n            } else if (this.source.getLens) {\n                return this.source.getLens(lensId, groupId).then((envelope) => [envelope]);\n            }\n        }\n        return this.fallbackSources?.retrieveLenses({ groupId, lensId });\n    }\n}\n\nexport const lensSourcesFactory = Injectable(\"lensSources\", () => LensSources.empty());\n", "/**\n * Returns a stack trace for a given error, and also appends the stack trace of any nested error, if one exists.\n * @param error Error to stringify.\n * @returns Error stack trace.\n */\nexport function stringifyError(error: Error): string {\n    const outer = error.stack ?? \"\";\n    return error.cause ? `${outer}\\nCaused by:\\n\\t${stringifyError(ensureError(error.cause))}` : outer;\n}\n\n/**\n * If given a value of type Error, return it – otherwise wrap the value in an Error.\n */\nexport function ensureError(error: unknown): Error {\n    if (error instanceof Error) return error;\n\n    try {\n        return new Error(`Non-Error type exception thrown. Serialized error value: ${JSON.stringify(error)}`);\n    } catch (_) {\n        return new Error(\"Non-Error type exception thrown. Original error value could not be serialized.\");\n    }\n}\n", "export const getTimeMs = () => performance.now();\n\nexport const convertDaysToSeconds = (days: number) => days * 24 * 60 * 60;\n", "export type EventOfType<K extends string, Event extends TypedCustomEvent> = Extract<Event, TypedCustomEvent<K, any>>;\n\n/**\n * This wrapper around CustomEvent provides more descriptive type information. By using this class, the `type` property\n * of the CustomEvent will be typed as a string literal – this allows [TypedEventTarget] to provide more useful type\n * checking of events.\n */\nexport class TypedCustomEvent<N extends string = string, T = any> extends CustomEvent<T> {\n    // @ts-ignore: The compiler complains that this property \"has no initializer and is not definitely set in the\n    // constructor\" – we must rely on the superclass constructor to set this, because CustomEvent only implements a\n    // getter for type, so if we try to do `this.type = type` we get a runtime error. We do need to re-define type,\n    // though, so we can give it the specific type N instead of the less-useful string type defined by the superclass.\n    readonly type: N;\n    constructor(type: N, detail: T, eventInitDict: Omit<CustomEventInit<T>, \"detail\"> = {}) {\n        super(type, { ...eventInitDict, detail });\n    }\n}\n", "import { EventOfType, TypedCustomEvent } from \"./TypedCustomEvent\";\n\nexport type TypedEventListener<Event extends TypedCustomEvent> = (evt: Event) => void;\n\nexport interface TypedEventListenerOptions {\n    once?: boolean;\n}\n\n/**\n * Extract the generic Events type (which must extend {@link TypedCustomEvent}) from a {@link TypedEventTarget}\n */\nexport type EventsFromTarget<Target extends TypedEventTarget> = Target extends TypedEventTarget<infer Events>\n    ? Events\n    : never;\n\n/**\n * This wrapper around EventTarget provides more descriptive type information. By using this class, calls to EventTarget\n * methods are correctly type checked to ensure only allowed event types are used, and that events and their type\n * strings are correctly associated.\n *\n * For example, when calling TypedEventTarget::addEventListener, the event passed to the callback will have the correct\n * type corresponding to the type of event for which the listener has been added.\n */\nexport class TypedEventTarget<Events extends TypedCustomEvent = TypedCustomEvent> {\n    private readonly listeners: Map<string, TypedEventListener<TypedCustomEvent>[]>;\n    private readonly options: Map<TypedEventListener<TypedCustomEvent>, TypedEventListenerOptions>;\n\n    constructor() {\n        this.listeners = new Map();\n        this.options = new Map();\n    }\n\n    addEventListener<K extends Events[\"type\"]>(\n        type: K,\n        callback: TypedEventListener<EventOfType<K, Events>>,\n        options?: TypedEventListenerOptions\n    ): void {\n        // Safety: the type in the method signature ensures the callback handles events of type K, and we use that type\n        // as the key when storing the callback – we only ever invoke callbacks obtained by mapping from that event\n        // type to the callback, so even though we store the callback with a wider type, we only ever call it with the\n        // specific event type specified by K.\n        const listener = callback as TypedEventListener<TypedCustomEvent>;\n        const listeners = this.listeners.get(type) ?? [];\n        this.listeners.set(type, [...listeners, listener]);\n        if (options) this.options.set(listener, options);\n    }\n\n    dispatchEvent(event: Events): true {\n        const listeners = this.listeners.get(event.type);\n        if (!listeners) return true;\n\n        listeners.forEach((listener) => {\n            const options = this.options.get(listener) ?? {};\n            try {\n                listener(event);\n            } catch (error) {\n                // We'll do our best to immitate native behavior, where if a listener throws an error it is caught and\n                // emitted as an error event on the window – this might be slightly different from native behavior since\n                // we have to use a CustomEvent, but it's as close as we can get.\n                if (window) window.dispatchEvent(new CustomEvent(\"error\", { detail: error }));\n            }\n            if (options.once) this.removeEventListener(event.type, listener);\n        });\n\n        return true;\n    }\n\n    removeEventListener<K extends Events[\"type\"]>(type: K, callback: TypedEventListener<EventOfType<K, Events>>): void {\n        const listener = callback as TypedEventListener<TypedCustomEvent>;\n        const listeners = this.listeners.get(type);\n        if (!listeners) return;\n        this.listeners.set(\n            type,\n            listeners.filter((l) => l !== listener)\n        );\n        this.options.delete(listener);\n    }\n}\n", "import { ensureError } from \"../common/errorHelpers\";\nimport { getTimeMs } from \"../common/time\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { TypedEventTarget } from \"../events/TypedEventTarget\";\nimport { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\n\nlet requestId = 0;\nconst safeParseInt = (str: string | null) => {\n    if (str == null) return 0;\n    const maybeInt = parseInt(str);\n    return isNaN(maybeInt) ? 0 : maybeInt;\n};\n\ninterface Started {\n    requestId: number;\n    timeMs: number;\n    dimensions: Dimensions;\n}\n\ninterface Completed {\n    requestId: number;\n    timeMs: number;\n    dimensions: Dimensions;\n    status: number;\n    sizeByte: number;\n}\n\ninterface Errored {\n    requestId: number;\n    timeMs: number;\n    dimensions: Dimensions;\n    error: Error;\n}\n\nexport type Dimensions = Record<string, string | undefined>;\n\nexport type RequestStateEvents =\n    | TypedCustomEvent<\"started\", Started>\n    | TypedCustomEvent<\"completed\", Completed>\n    | TypedCustomEvent<\"errored\", Errored>;\n\nexport const dispatchRequestStarted = (\n    requestStateEventTarget: RequestStateEventTarget,\n    data: Omit<Started, \"requestId\" | \"timeMs\">\n): Started => {\n    const started: Started = { ...data, requestId: requestId++, timeMs: getTimeMs() };\n    requestStateEventTarget.dispatchEvent(new TypedCustomEvent(\"started\", started));\n    return started;\n};\n\nexport const dispatchRequestCompleted = (\n    requestStateEventTarget: RequestStateEventTarget,\n    data: Omit<Completed, \"timeMs\">\n): Completed => {\n    const completed: Completed = { ...data, timeMs: getTimeMs() };\n    requestStateEventTarget.dispatchEvent(new TypedCustomEvent(\"completed\", completed));\n    return completed;\n};\n\nexport const dispatchRequestErrored = (\n    requestStateEventTarget: RequestStateEventTarget,\n    data: Omit<Errored, \"timeMs\">\n): Errored => {\n    const errored: Errored = { ...data, timeMs: getTimeMs() };\n    requestStateEventTarget.dispatchEvent(new TypedCustomEvent(\"errored\", errored));\n    return errored;\n};\n\nexport const createRequestStateEmittingHandler =\n    <D extends Dimensions = Dimensions>(\n        requestStateEventTarget: RequestStateEventTarget\n    ): ChainableHandler<[RequestInfo, D], Response, RequestInfo, Response, RequestMetadata> =>\n    (next) =>\n    async ([request, dimensions], metadata) => {\n        const { requestId } = dispatchRequestStarted(requestStateEventTarget, { dimensions });\n        try {\n            const response = await next(request, metadata);\n            const status = response.status;\n            const sizeByte = safeParseInt(response.headers.get(\"content-length\"));\n            dispatchRequestCompleted(requestStateEventTarget, { requestId, dimensions, status, sizeByte });\n            return response;\n        } catch (error) {\n            dispatchRequestErrored(requestStateEventTarget, { requestId, dimensions, error: ensureError(error) });\n            throw error;\n        }\n    };\n\n/**\n * This event target may be used to listen for any network request state changes initiated by CameraKit.\n *\n * @internal\n */\nexport type RequestStateEventTarget = TypedEventTarget<RequestStateEvents>;\n\n/**\n * @internal\n */\nexport const requestStateEventTargetFactory = Injectable(\n    \"requestStateEventTarget\",\n    (): RequestStateEventTarget => new TypedEventTarget()\n);\n", "import { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\n\ntype ArrayBufferResponse = [ArrayBuffer, Response];\ntype ChainableArrayBufferHandler<Req, Meta extends RequestMetadata> = ChainableHandler<\n    Req,\n    ArrayBufferResponse,\n    Req,\n    Response,\n    Meta\n>;\n\n/**\n * Parse a Fetch Response body into an ArrayBuffer.\n *\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createArrayBufferParsingHandler =\n    <Req, Meta extends RequestMetadata>(): ChainableArrayBufferHandler<Req, Meta> =>\n    (next) =>\n    async (req, metadata) => {\n        const response = await next(req, metadata);\n        let buffer: ArrayBuffer;\n        try {\n            buffer = await response.arrayBuffer();\n        } catch (_) {\n            buffer = new ArrayBuffer(0);\n        }\n        return [buffer, response];\n    };\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../../google/protobuf/any\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface Lens {\n    id: string;\n    name: string;\n    vendorData: {\n        [key: string]: string;\n    };\n    content: Content | undefined;\n    isThirdParty: boolean;\n    cameraFacingPreference: Lens_CameraFacing;\n    featureMetadata: Any[];\n    lensCreator: LensCreator | undefined;\n    scannable: Scannable | undefined;\n}\nexport enum Lens_CameraFacing {\n    CAMERA_FACING_UNSET = \"CAMERA_FACING_UNSET\",\n    CAMERA_FACING_FRONT = \"CAMERA_FACING_FRONT\",\n    CAMERA_FACING_BACK = \"CAMERA_FACING_BACK\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function lens_CameraFacingFromJSON(object: any): Lens_CameraFacing {\n    switch (object) {\n        case 0:\n        case \"CAMERA_FACING_UNSET\":\n            return Lens_CameraFacing.CAMERA_FACING_UNSET;\n        case 1:\n        case \"CAMERA_FACING_FRONT\":\n            return Lens_CameraFacing.CAMERA_FACING_FRONT;\n        case 2:\n        case \"CAMERA_FACING_BACK\":\n            return Lens_CameraFacing.CAMERA_FACING_BACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Lens_CameraFacing.UNRECOGNIZED;\n    }\n}\nexport function lens_CameraFacingToJSON(object: Lens_CameraFacing): string {\n    switch (object) {\n        case Lens_CameraFacing.CAMERA_FACING_UNSET:\n            return \"CAMERA_FACING_UNSET\";\n        case Lens_CameraFacing.CAMERA_FACING_FRONT:\n            return \"CAMERA_FACING_FRONT\";\n        case Lens_CameraFacing.CAMERA_FACING_BACK:\n            return \"CAMERA_FACING_BACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport function lens_CameraFacingToNumber(object: Lens_CameraFacing): number {\n    switch (object) {\n        case Lens_CameraFacing.CAMERA_FACING_UNSET:\n            return 0;\n        case Lens_CameraFacing.CAMERA_FACING_FRONT:\n            return 1;\n        case Lens_CameraFacing.CAMERA_FACING_BACK:\n            return 2;\n        default:\n            return 0;\n    }\n}\nexport interface Lens_VendorDataEntry {\n    key: string;\n    value: string;\n}\nexport interface Content {\n    lnsUrl: string;\n    lnsSha256: string;\n    iconUrl: string;\n    preview: Preview | undefined;\n    assetManifest: LensAssetManifestItem[];\n    defaultHintId: string;\n    hintTranslations: {\n        [key: string]: string;\n    };\n    lnsUrlBolt: string;\n    iconUrlBolt: string;\n}\nexport interface Content_HintTranslationsEntry {\n    key: string;\n    value: string;\n}\nexport interface LensAssetManifestItem {\n    type: LensAssetManifestItem_Type;\n    id: string;\n    requestTiming: LensAssetManifestItem_RequestTiming;\n    assetUrl: string;\n    assetChecksum: string;\n}\nexport enum LensAssetManifestItem_Type {\n    DEVICE_DEPENDENT_ASSET_UNSET = \"DEVICE_DEPENDENT_ASSET_UNSET\",\n    ASSET = \"ASSET\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function lensAssetManifestItem_TypeFromJSON(object: any): LensAssetManifestItem_Type {\n    switch (object) {\n        case 0:\n        case \"DEVICE_DEPENDENT_ASSET_UNSET\":\n            return LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET;\n        case 1:\n        case \"ASSET\":\n            return LensAssetManifestItem_Type.ASSET;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LensAssetManifestItem_Type.UNRECOGNIZED;\n    }\n}\nexport function lensAssetManifestItem_TypeToJSON(object: LensAssetManifestItem_Type): string {\n    switch (object) {\n        case LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET:\n            return \"DEVICE_DEPENDENT_ASSET_UNSET\";\n        case LensAssetManifestItem_Type.ASSET:\n            return \"ASSET\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport function lensAssetManifestItem_TypeToNumber(object: LensAssetManifestItem_Type): number {\n    switch (object) {\n        case LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET:\n            return 0;\n        case LensAssetManifestItem_Type.ASSET:\n            return 1;\n        default:\n            return 0;\n    }\n}\nexport enum LensAssetManifestItem_RequestTiming {\n    PRELOAD_UNSET = \"PRELOAD_UNSET\",\n    ON_DEMAND = \"ON_DEMAND\",\n    REQUIRED = \"REQUIRED\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function lensAssetManifestItem_RequestTimingFromJSON(object: any): LensAssetManifestItem_RequestTiming {\n    switch (object) {\n        case 0:\n        case \"PRELOAD_UNSET\":\n            return LensAssetManifestItem_RequestTiming.PRELOAD_UNSET;\n        case 1:\n        case \"ON_DEMAND\":\n            return LensAssetManifestItem_RequestTiming.ON_DEMAND;\n        case 2:\n        case \"REQUIRED\":\n            return LensAssetManifestItem_RequestTiming.REQUIRED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LensAssetManifestItem_RequestTiming.UNRECOGNIZED;\n    }\n}\nexport function lensAssetManifestItem_RequestTimingToJSON(object: LensAssetManifestItem_RequestTiming): string {\n    switch (object) {\n        case LensAssetManifestItem_RequestTiming.PRELOAD_UNSET:\n            return \"PRELOAD_UNSET\";\n        case LensAssetManifestItem_RequestTiming.ON_DEMAND:\n            return \"ON_DEMAND\";\n        case LensAssetManifestItem_RequestTiming.REQUIRED:\n            return \"REQUIRED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport function lensAssetManifestItem_RequestTimingToNumber(object: LensAssetManifestItem_RequestTiming): number {\n    switch (object) {\n        case LensAssetManifestItem_RequestTiming.PRELOAD_UNSET:\n            return 0;\n        case LensAssetManifestItem_RequestTiming.ON_DEMAND:\n            return 1;\n        case LensAssetManifestItem_RequestTiming.REQUIRED:\n            return 2;\n        default:\n            return 0;\n    }\n}\nexport interface Preview {\n    imageUrl: string;\n    imageSequenceSize: number;\n    imageSequenceWebpUrlPattern: string;\n}\nexport interface LensCreator {\n    displayName: string;\n}\nexport interface Scannable {\n    snapcodeImageUrl: string;\n    snapcodeDeeplink: string;\n}\nfunction createBaseLens(): Lens {\n    return {\n        id: \"\",\n        name: \"\",\n        vendorData: {},\n        content: undefined,\n        isThirdParty: false,\n        cameraFacingPreference: Lens_CameraFacing.CAMERA_FACING_UNSET,\n        featureMetadata: [],\n        lensCreator: undefined,\n        scannable: undefined,\n    };\n}\nexport const Lens = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): Lens {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLens();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    const entry3 = Lens_VendorDataEntry.decode(reader, reader.uint32());\n                    if (entry3.value !== undefined) {\n                        message.vendorData[entry3.key] = entry3.value;\n                    }\n                    break;\n                case 4:\n                    message.content = Content.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.isThirdParty = reader.bool();\n                    break;\n                case 6:\n                    message.cameraFacingPreference = lens_CameraFacingFromJSON(reader.int32());\n                    break;\n                case 7:\n                    message.featureMetadata.push(Any.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.lensCreator = LensCreator.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.scannable = Scannable.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Lens {\n        return {\n            id: isSet(object.id) ? String(object.id) : \"\",\n            name: isSet(object.name) ? String(object.name) : \"\",\n            vendorData: isObject(object.vendorData)\n                ? Object.entries(object.vendorData).reduce<{\n                    [key: string]: string;\n                }>((acc, [key, value]) => {\n                    acc[key] = String(value);\n                    return acc;\n                }, {})\n                : {},\n            content: isSet(object.content) ? Content.fromJSON(object.content) : undefined,\n            isThirdParty: isSet(object.isThirdParty) ? Boolean(object.isThirdParty) : false,\n            cameraFacingPreference: isSet(object.cameraFacingPreference)\n                ? lens_CameraFacingFromJSON(object.cameraFacingPreference)\n                : Lens_CameraFacing.CAMERA_FACING_UNSET,\n            featureMetadata: Array.isArray(object?.featureMetadata)\n                ? object.featureMetadata.map((e: any) => Any.fromJSON(e))\n                : [],\n            lensCreator: isSet(object.lensCreator) ? LensCreator.fromJSON(object.lensCreator) : undefined,\n            scannable: isSet(object.scannable) ? Scannable.fromJSON(object.scannable) : undefined,\n        };\n    },\n    toJSON(message: Lens): unknown {\n        const obj: any = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        obj.vendorData = {};\n        if (message.vendorData) {\n            Object.entries(message.vendorData).forEach(([k, v]) => {\n                obj.vendorData[k] = v;\n            });\n        }\n        message.content !== undefined && (obj.content = message.content ? Content.toJSON(message.content) : undefined);\n        message.isThirdParty !== undefined && (obj.isThirdParty = message.isThirdParty);\n        message.cameraFacingPreference !== undefined &&\n            (obj.cameraFacingPreference = lens_CameraFacingToJSON(message.cameraFacingPreference));\n        if (message.featureMetadata) {\n            obj.featureMetadata = message.featureMetadata.map((e) => (e ? Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.featureMetadata = [];\n        }\n        message.lensCreator !== undefined &&\n            (obj.lensCreator = message.lensCreator ? LensCreator.toJSON(message.lensCreator) : undefined);\n        message.scannable !== undefined &&\n            (obj.scannable = message.scannable ? Scannable.toJSON(message.scannable) : undefined);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Lens>, I>>(object: I): Lens {\n        const message = createBaseLens();\n        message.id = object.id ?? \"\";\n        message.name = object.name ?? \"\";\n        message.vendorData = Object.entries(object.vendorData ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.content =\n            object.content !== undefined && object.content !== null ? Content.fromPartial(object.content) : undefined;\n        message.isThirdParty = object.isThirdParty ?? false;\n        message.cameraFacingPreference = object.cameraFacingPreference ?? Lens_CameraFacing.CAMERA_FACING_UNSET;\n        message.featureMetadata = object.featureMetadata?.map((e) => Any.fromPartial(e)) || [];\n        message.lensCreator =\n            object.lensCreator !== undefined && object.lensCreator !== null\n                ? LensCreator.fromPartial(object.lensCreator)\n                : undefined;\n        message.scannable =\n            object.scannable !== undefined && object.scannable !== null ? Scannable.fromPartial(object.scannable) : undefined;\n        return message;\n    },\n};\nfunction createBaseLens_VendorDataEntry(): Lens_VendorDataEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const Lens_VendorDataEntry = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): Lens_VendorDataEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLens_VendorDataEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Lens_VendorDataEntry {\n        return {\n            key: isSet(object.key) ? String(object.key) : \"\",\n            value: isSet(object.value) ? String(object.value) : \"\",\n        };\n    },\n    toJSON(message: Lens_VendorDataEntry): unknown {\n        const obj: any = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Lens_VendorDataEntry>, I>>(object: I): Lens_VendorDataEntry {\n        const message = createBaseLens_VendorDataEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseContent(): Content {\n    return {\n        lnsUrl: \"\",\n        lnsSha256: \"\",\n        iconUrl: \"\",\n        preview: undefined,\n        assetManifest: [],\n        defaultHintId: \"\",\n        hintTranslations: {},\n        lnsUrlBolt: \"\",\n        iconUrlBolt: \"\",\n    };\n}\nexport const Content = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): Content {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseContent();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lnsUrl = reader.string();\n                    break;\n                case 2:\n                    message.lnsSha256 = reader.string();\n                    break;\n                case 3:\n                    message.iconUrl = reader.string();\n                    break;\n                case 4:\n                    message.preview = Preview.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.assetManifest.push(LensAssetManifestItem.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.defaultHintId = reader.string();\n                    break;\n                case 7:\n                    const entry7 = Content_HintTranslationsEntry.decode(reader, reader.uint32());\n                    if (entry7.value !== undefined) {\n                        message.hintTranslations[entry7.key] = entry7.value;\n                    }\n                    break;\n                case 8:\n                    message.lnsUrlBolt = reader.string();\n                    break;\n                case 9:\n                    message.iconUrlBolt = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Content {\n        return {\n            lnsUrl: isSet(object.lnsUrl) ? String(object.lnsUrl) : \"\",\n            lnsSha256: isSet(object.lnsSha256) ? String(object.lnsSha256) : \"\",\n            iconUrl: isSet(object.iconUrl) ? String(object.iconUrl) : \"\",\n            preview: isSet(object.preview) ? Preview.fromJSON(object.preview) : undefined,\n            assetManifest: Array.isArray(object?.assetManifest)\n                ? object.assetManifest.map((e: any) => LensAssetManifestItem.fromJSON(e))\n                : [],\n            defaultHintId: isSet(object.defaultHintId) ? String(object.defaultHintId) : \"\",\n            hintTranslations: isObject(object.hintTranslations)\n                ? Object.entries(object.hintTranslations).reduce<{\n                    [key: string]: string;\n                }>((acc, [key, value]) => {\n                    acc[key] = String(value);\n                    return acc;\n                }, {})\n                : {},\n            lnsUrlBolt: isSet(object.lnsUrlBolt) ? String(object.lnsUrlBolt) : \"\",\n            iconUrlBolt: isSet(object.iconUrlBolt) ? String(object.iconUrlBolt) : \"\",\n        };\n    },\n    toJSON(message: Content): unknown {\n        const obj: any = {};\n        message.lnsUrl !== undefined && (obj.lnsUrl = message.lnsUrl);\n        message.lnsSha256 !== undefined && (obj.lnsSha256 = message.lnsSha256);\n        message.iconUrl !== undefined && (obj.iconUrl = message.iconUrl);\n        message.preview !== undefined && (obj.preview = message.preview ? Preview.toJSON(message.preview) : undefined);\n        if (message.assetManifest) {\n            obj.assetManifest = message.assetManifest.map((e) => (e ? LensAssetManifestItem.toJSON(e) : undefined));\n        }\n        else {\n            obj.assetManifest = [];\n        }\n        message.defaultHintId !== undefined && (obj.defaultHintId = message.defaultHintId);\n        obj.hintTranslations = {};\n        if (message.hintTranslations) {\n            Object.entries(message.hintTranslations).forEach(([k, v]) => {\n                obj.hintTranslations[k] = v;\n            });\n        }\n        message.lnsUrlBolt !== undefined && (obj.lnsUrlBolt = message.lnsUrlBolt);\n        message.iconUrlBolt !== undefined && (obj.iconUrlBolt = message.iconUrlBolt);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Content>, I>>(object: I): Content {\n        const message = createBaseContent();\n        message.lnsUrl = object.lnsUrl ?? \"\";\n        message.lnsSha256 = object.lnsSha256 ?? \"\";\n        message.iconUrl = object.iconUrl ?? \"\";\n        message.preview =\n            object.preview !== undefined && object.preview !== null ? Preview.fromPartial(object.preview) : undefined;\n        message.assetManifest = object.assetManifest?.map((e) => LensAssetManifestItem.fromPartial(e)) || [];\n        message.defaultHintId = object.defaultHintId ?? \"\";\n        message.hintTranslations = Object.entries(object.hintTranslations ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.lnsUrlBolt = object.lnsUrlBolt ?? \"\";\n        message.iconUrlBolt = object.iconUrlBolt ?? \"\";\n        return message;\n    },\n};\nfunction createBaseContent_HintTranslationsEntry(): Content_HintTranslationsEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const Content_HintTranslationsEntry = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): Content_HintTranslationsEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseContent_HintTranslationsEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Content_HintTranslationsEntry {\n        return {\n            key: isSet(object.key) ? String(object.key) : \"\",\n            value: isSet(object.value) ? String(object.value) : \"\",\n        };\n    },\n    toJSON(message: Content_HintTranslationsEntry): unknown {\n        const obj: any = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Content_HintTranslationsEntry>, I>>(object: I): Content_HintTranslationsEntry {\n        const message = createBaseContent_HintTranslationsEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseLensAssetManifestItem(): LensAssetManifestItem {\n    return {\n        type: LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET,\n        id: \"\",\n        requestTiming: LensAssetManifestItem_RequestTiming.PRELOAD_UNSET,\n        assetUrl: \"\",\n        assetChecksum: \"\",\n    };\n}\nexport const LensAssetManifestItem = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): LensAssetManifestItem {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLensAssetManifestItem();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = lensAssetManifestItem_TypeFromJSON(reader.int32());\n                    break;\n                case 2:\n                    message.id = reader.string();\n                    break;\n                case 3:\n                    message.requestTiming = lensAssetManifestItem_RequestTimingFromJSON(reader.int32());\n                    break;\n                case 4:\n                    message.assetUrl = reader.string();\n                    break;\n                case 5:\n                    message.assetChecksum = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): LensAssetManifestItem {\n        return {\n            type: isSet(object.type)\n                ? lensAssetManifestItem_TypeFromJSON(object.type)\n                : LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET,\n            id: isSet(object.id) ? String(object.id) : \"\",\n            requestTiming: isSet(object.requestTiming)\n                ? lensAssetManifestItem_RequestTimingFromJSON(object.requestTiming)\n                : LensAssetManifestItem_RequestTiming.PRELOAD_UNSET,\n            assetUrl: isSet(object.assetUrl) ? String(object.assetUrl) : \"\",\n            assetChecksum: isSet(object.assetChecksum) ? String(object.assetChecksum) : \"\",\n        };\n    },\n    toJSON(message: LensAssetManifestItem): unknown {\n        const obj: any = {};\n        message.type !== undefined && (obj.type = lensAssetManifestItem_TypeToJSON(message.type));\n        message.id !== undefined && (obj.id = message.id);\n        message.requestTiming !== undefined &&\n            (obj.requestTiming = lensAssetManifestItem_RequestTimingToJSON(message.requestTiming));\n        message.assetUrl !== undefined && (obj.assetUrl = message.assetUrl);\n        message.assetChecksum !== undefined && (obj.assetChecksum = message.assetChecksum);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<LensAssetManifestItem>, I>>(object: I): LensAssetManifestItem {\n        const message = createBaseLensAssetManifestItem();\n        message.type = object.type ?? LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET;\n        message.id = object.id ?? \"\";\n        message.requestTiming = object.requestTiming ?? LensAssetManifestItem_RequestTiming.PRELOAD_UNSET;\n        message.assetUrl = object.assetUrl ?? \"\";\n        message.assetChecksum = object.assetChecksum ?? \"\";\n        return message;\n    },\n};\nfunction createBasePreview(): Preview {\n    return { imageUrl: \"\", imageSequenceSize: 0, imageSequenceWebpUrlPattern: \"\" };\n}\nexport const Preview = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): Preview {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePreview();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.imageUrl = reader.string();\n                    break;\n                case 2:\n                    message.imageSequenceSize = reader.int32();\n                    break;\n                case 3:\n                    message.imageSequenceWebpUrlPattern = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Preview {\n        return {\n            imageUrl: isSet(object.imageUrl) ? String(object.imageUrl) : \"\",\n            imageSequenceSize: isSet(object.imageSequenceSize) ? Number(object.imageSequenceSize) : 0,\n            imageSequenceWebpUrlPattern: isSet(object.imageSequenceWebpUrlPattern)\n                ? String(object.imageSequenceWebpUrlPattern)\n                : \"\",\n        };\n    },\n    toJSON(message: Preview): unknown {\n        const obj: any = {};\n        message.imageUrl !== undefined && (obj.imageUrl = message.imageUrl);\n        message.imageSequenceSize !== undefined && (obj.imageSequenceSize = Math.round(message.imageSequenceSize));\n        message.imageSequenceWebpUrlPattern !== undefined &&\n            (obj.imageSequenceWebpUrlPattern = message.imageSequenceWebpUrlPattern);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Preview>, I>>(object: I): Preview {\n        const message = createBasePreview();\n        message.imageUrl = object.imageUrl ?? \"\";\n        message.imageSequenceSize = object.imageSequenceSize ?? 0;\n        message.imageSequenceWebpUrlPattern = object.imageSequenceWebpUrlPattern ?? \"\";\n        return message;\n    },\n};\nfunction createBaseLensCreator(): LensCreator {\n    return { displayName: \"\" };\n}\nexport const LensCreator = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): LensCreator {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLensCreator();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.displayName = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): LensCreator {\n        return {\n            displayName: isSet(object.displayName) ? String(object.displayName) : \"\",\n        };\n    },\n    toJSON(message: LensCreator): unknown {\n        const obj: any = {};\n        message.displayName !== undefined && (obj.displayName = message.displayName);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<LensCreator>, I>>(object: I): LensCreator {\n        const message = createBaseLensCreator();\n        message.displayName = object.displayName ?? \"\";\n        return message;\n    },\n};\nfunction createBaseScannable(): Scannable {\n    return { snapcodeImageUrl: \"\", snapcodeDeeplink: \"\" };\n}\nexport const Scannable = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): Scannable {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseScannable();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapcodeImageUrl = reader.string();\n                    break;\n                case 2:\n                    message.snapcodeDeeplink = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Scannable {\n        return {\n            snapcodeImageUrl: isSet(object.snapcodeImageUrl) ? String(object.snapcodeImageUrl) : \"\",\n            snapcodeDeeplink: isSet(object.snapcodeDeeplink) ? String(object.snapcodeDeeplink) : \"\",\n        };\n    },\n    toJSON(message: Scannable): unknown {\n        const obj: any = {};\n        message.snapcodeImageUrl !== undefined && (obj.snapcodeImageUrl = message.snapcodeImageUrl);\n        message.snapcodeDeeplink !== undefined && (obj.snapcodeDeeplink = message.snapcodeDeeplink);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Scannable>, I>>(object: I): Scannable {\n        const message = createBaseScannable();\n        message.snapcodeImageUrl = object.snapcodeImageUrl ?? \"\";\n        message.snapcodeDeeplink = object.snapcodeDeeplink ?? \"\";\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isObject(value: any): boolean {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nexport interface Any {\n    typeUrl: string;\n    value: Uint8Array;\n}\nfunction createBaseAny(): Any {\n    return { typeUrl: \"\", value: new Uint8Array() };\n}\nexport const Any = {\n    encode(message: Any, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Any {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAny();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Any {\n        return {\n            typeUrl: isSet(object.typeUrl) ? String(object.typeUrl) : \"\",\n            value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(),\n        };\n    },\n    toJSON(message: Any): unknown {\n        const obj: any = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Any>, I>>(object: I): Any {\n        const message = createBaseAny();\n        message.typeUrl = object.typeUrl ?? \"\";\n        message.value = object.value ?? new Uint8Array();\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob: (b64: string) => string = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa: (bin: string) => string = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n    const bin: string[] = [];\n    for (const byte of arr) {\n        bin.push(String.fromCharCode(byte));\n    }\n    return btoa(bin.join(\"\"));\n}\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n", "import { Logger } from \"./logger\";\n\n/**\n * Creates a class member decorator that logs errors thrown during the member invocation.\n * If the member returns a Promise, promise rejections are handled.\n * Any caught errors are re-thrown.\n * @param logger The logger to report errors to.\n * @return A decorator function.\n */\nexport function errorLoggingDecorator(logger: Logger) {\n    const handleError = (error: unknown) => logger.error(error);\n    return function (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) {\n        const methodName = descriptor.value ? \"value\" : \"get\";\n        const originalMethod = descriptor[methodName];\n        descriptor[methodName] = function (...args: any[]) {\n            try {\n                // \"this\" refers to original scope this function is called in\n                const result = originalMethod.apply(this, args);\n                if (result instanceof Promise) {\n                    // in case of a promise we don't return our promise chain\n                    // that logs an error because we want callers to handle the error as well\n                    result.catch(handleError);\n                }\n                return result;\n            } catch (error) {\n                handleError(error);\n                throw error;\n            }\n        };\n        return descriptor;\n    };\n}\n", "/**\n * Assert a particular code path is unreachable, e.g. to perform a compile-time exhaustiveness check.\n *\n * Ex:\n * ```ts\n * interface A { type: 'a' }\n * interface B { type: 'b' }\n * type TaggedUnion = A | B\n *\n * function exhaustiveSwitch(value: TaggedUnion) {\n *   switch (value.type) {\n *     case 'a': // do something with A\n *     case 'b': // do something with B\n *     // this will fail to compile if we add another type to TaggedUnion and forget to add a corresponding case\n *     // to the switch statement.\n *     default: assertUnreachable(value)\n *   }\n * }\n * ```\n */\nexport function assertUnreachable(_: never): never {\n    throw new Error(\"Reached unreachable code at runtime.\");\n}\n\n/**\n * Assert that a condition is true. Otherwise, throws an error.\n * @param condition Condition to test.\n * @param error Optional error message or error instance to throw.\n */\nexport function assert(condition: boolean, error: string | Error = \"Assertion failed\"): asserts condition {\n    if (!condition) {\n        if (error instanceof Error) {\n            throw error;\n        } else {\n            throw new Error(error);\n        }\n    }\n}\n", "import { assert } from \"../common/assertions\";\nimport {\n    predicateRecordValues,\n    isRecord,\n    isString,\n    isUndefined,\n    isEmptyOrSafeUrl,\n    isArrayOfType,\n    isTypedArray,\n} from \"../common/typeguards\";\nimport {\n    Content,\n    Lens_CameraFacing,\n    Lens as LensGeneratedProto,\n    LensCreator,\n} from \"../generated-proto/pb_schema/camera_kit/v3/lens\";\nimport { GetGroupResponse } from \"../generated-proto/pb_schema/camera_kit/v3/service\";\nimport { Any } from \"../generated-proto/pb_schema/google/protobuf/any\";\n\nexport interface LensProtoWithGroupId extends LensProto {\n    groupId: string;\n}\n\n/**\n * @internal\n */\nexport type ContentProto = Omit<Content, \"lnsUrl\" | \"iconUrl\">;\n\n/**\n * @internal\n */\nexport interface LensProto extends Omit<LensGeneratedProto, \"content\"> {\n    content: ContentProto | undefined;\n}\n\n/**\n * @category Lenses\n */\nexport interface Lens {\n    /**\n     * Non-empty identifier of a unique lens available to be applied in current session.\n     *\n     * NOTE: This value may contain unsafe characters\n     * and therefore may require additional processing depending on usages.\n     */\n    id: string;\n\n    /**\n     * The unique identifier for the group that this lens is a part of,\n     * correlating to a collection of lenses grouped for organizational or functional purposes.\n     */\n    groupId: string;\n\n    /**\n     * Human readable name of this lens.\n     *\n     * NOTE: This value may contain unsafe characters\n     * and therefore may require additional processing depending on usages.\n     */\n    name: string;\n\n    /**\n     * Icon resource URI that represents this lens if available.\n     */\n    iconUrl: string | undefined;\n\n    /**\n     * Vendor specific metadata associated with this lens, empty by default.\n     *\n     * NOTE: Metadata values may contain unsafe characters\n     * and therefore may require additional processing depending on usages.\n     */\n    vendorData: { [key: string]: string };\n\n    /**\n     * Specifies a [Lens_CameraFacing] that this lens is designed for.\n     */\n    cameraFacingPreference: Lens_CameraFacing;\n\n    /**\n     * Preview representing this lens, if available.\n     */\n    preview: Preview | undefined;\n\n    /**\n     * Information about the lens creator.\n     */\n    lensCreator: LensCreator | undefined;\n\n    /**\n     * A [snapcode](https://scan.snapchat.com/snapcodes) that represents the lens if available.\n     *\n     * The snapcode points to the lens in the Snapchat app, when used on mobile, or a dedicated web page.\n     */\n    snapcode: Snapcode | undefined;\n\n    /**\n     * Metadata pertaining to a specific set of lens features\n     */\n    featureMetadata: Any[];\n}\n\n/**\n * Lens preview.\n */\n// That corresponds to Preview interface in packages/web-sdk/src/generated-proto/pb_schema/camera_kit/v3/lens.ts\nexport interface Preview {\n    /**\n     * Link to a lens preview image.\n     */\n    imageUrl: string;\n}\n\n/**\n * [Snapcode](https://scan.snapchat.com/snapcodes) representing a lens.\n */\n// That corresponds to Scannable interface in packages/web-sdk/src/generated-proto/pb_schema/camera_kit/v3/lens.ts\nexport interface Snapcode {\n    /**\n     * Snapcode image URL scannable with Snapchat app.\n     */\n    imageUrl: string;\n\n    /**\n     * Deeplink URL that directs to a lens web page.\n     */\n    deepLink: string;\n}\n\nexport function isLensArray(value: unknown): value is Lens[] {\n    return isArrayOfType(isLens, value);\n}\n\nexport function isLens(value: unknown): value is Lens {\n    return (\n        isRecord(value) &&\n        isString(value.id) &&\n        isString(value.name) &&\n        (isUndefined(value.iconUrl) || isString(value.iconUrl)) &&\n        isRecord(value.vendorData) &&\n        predicateRecordValues(isString)(value.vendorData) &&\n        isString(value.cameraFacingPreference) &&\n        (isUndefined(value.preview) || isPreview(value.preview)) &&\n        (isUndefined(value.lensCreator) || isLensCreator(value.lensCreator)) &&\n        (isUndefined(value.snapcode) || isSnapcode(value.snapcode)) &&\n        isAnyArray(value.featureMetadata)\n    );\n}\n\nexport function isLensProto(value: unknown): value is LensProto {\n    return (\n        isRecord(value) &&\n        isString(value.id) &&\n        isString(value.name) &&\n        isRecord(value.vendorData) &&\n        predicateRecordValues(isString)(value.vendorData) &&\n        (typeof value.content === \"undefined\" || isLensContent(value.content))\n    );\n}\n\nexport function isPreview(value: unknown): value is Preview {\n    return isRecord(value) && isString(value.imageUrl);\n}\n\nexport function isLensCreator(value: unknown): value is LensCreator {\n    return isRecord(value) && isString(value.displayName);\n}\n\nexport function isSnapcode(value: unknown): value is Snapcode {\n    return isRecord(value) && isString(value.imageUrl) && isString(value.deepLink);\n}\n\nexport function isLensContent(value: unknown): value is ContentProto {\n    return (\n        isRecord(value) &&\n        isString(value.iconUrlBolt) &&\n        isString(value.lnsSha256) &&\n        isString(value.lnsUrlBolt) &&\n        isRecord(value.preview) &&\n        isString(value.preview.imageUrl)\n    );\n}\n\nexport function isGetGroupResponse(value: unknown): value is GetGroupResponse {\n    return isRecord(value) && isString(value.id) && Array.isArray(value.lenses) && value.lenses.every(isLensProto);\n}\n\nexport function isAny(value: unknown): value is Any {\n    return isRecord(value) && isString(value.typeUrl) && isTypedArray(value.value);\n}\n\nexport function isAnyArray(value: unknown): value is Any[] {\n    return isArrayOfType(isAny, value);\n}\n\n/**\n * Converts lens proto to a public lens object.\n * @param lens Lens proto\n * @returns Public lens object.\n *\n * @internal\n */\nexport function toPublicLens({\n    id,\n    groupId,\n    name,\n    content,\n    vendorData,\n    cameraFacingPreference,\n    lensCreator,\n    scannable,\n    featureMetadata,\n}: LensProtoWithGroupId): Lens {\n    assert(isEmptyOrSafeUrl(content?.iconUrlBolt), \"Unsafe icon URL\");\n    assert(isEmptyOrSafeUrl(content?.preview?.imageUrl), \"Unsafe preview URL\");\n    return {\n        id,\n        groupId,\n        name,\n        iconUrl: content?.iconUrlBolt,\n        preview: content?.preview ? { imageUrl: content.preview.imageUrl } : undefined,\n        vendorData,\n        cameraFacingPreference,\n        lensCreator,\n        snapcode: scannable\n            ? { imageUrl: scannable.snapcodeImageUrl, deepLink: scannable.snapcodeDeeplink }\n            : undefined,\n        featureMetadata,\n    };\n}\n", "/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"com.snap.camerakit.v3.features\";\n\n/**\n * Ranking feature metadata.\n * https://docs.google.com/document/d/1vKDLVpnblnUZHhNbFGGzUf64nmdkO6NGyarq8q9nPE8/edit#heading=h.2yfm0j3kldwv\n */\nexport interface RankingInfo {\n  /** Ranking request id can be reported by clients along with lens usage to build ranking models. */\n  rankingRequestId: string;\n}\n\nfunction createBaseRankingInfo(): RankingInfo {\n  return { rankingRequestId: \"\" };\n}\n\nexport const RankingInfo = {\n  encode(message: RankingInfo, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.rankingRequestId !== \"\") {\n      writer.uint32(10).string(message.rankingRequestId);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): RankingInfo {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRankingInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.rankingRequestId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<RankingInfo>, I>>(object: I): RankingInfo {\n    const message = createBaseRankingInfo();\n    message.rankingRequestId = object.rankingRequestId ?? \"\";\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"com.snap.camerakit.v3.features\";\nexport interface RemoteApiInfo {\n    apiSpecIds: string[];\n}\nfunction createBaseRemoteApiInfo(): RemoteApiInfo {\n    return { apiSpecIds: [] };\n}\nexport const RemoteApiInfo = {\n    encode(message: RemoteApiInfo, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.apiSpecIds) {\n            writer.uint32(10).string(v!);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): RemoteApiInfo {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRemoteApiInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<RemoteApiInfo>, I>>(object: I): RemoteApiInfo {\n        const message = createBaseRemoteApiInfo();\n        message.apiSpecIds = object.apiSpecIds?.map((e) => e) || [];\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nexport interface DoubleValue {\n    value: number;\n}\nexport interface FloatValue {\n    value: number;\n}\nexport interface Int64Value {\n    value: number;\n}\nexport interface UInt64Value {\n    value: number;\n}\nexport interface Int32Value {\n    value: number;\n}\nexport interface UInt32Value {\n    value: number;\n}\nexport interface BoolValue {\n    value: boolean;\n}\nexport interface StringValue {\n    value: string;\n}\nexport interface BytesValue {\n    value: Uint8Array;\n}\nfunction createBaseDoubleValue(): DoubleValue {\n    return { value: 0 };\n}\nexport const DoubleValue = {\n    encode(message: DoubleValue, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== 0) {\n            writer.uint32(9).double(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): DoubleValue {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDoubleValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.double();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<DoubleValue>, I>>(object: I): DoubleValue {\n        const message = createBaseDoubleValue();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseFloatValue(): FloatValue {\n    return { value: 0 };\n}\nexport const FloatValue = {\n    encode(message: FloatValue, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== 0) {\n            writer.uint32(13).float(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): FloatValue {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFloatValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.float();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<FloatValue>, I>>(object: I): FloatValue {\n        const message = createBaseFloatValue();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseInt64Value(): Int64Value {\n    return { value: 0 };\n}\nexport const Int64Value = {\n    encode(message: Int64Value, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== 0) {\n            writer.uint32(8).int64(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Int64Value {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseInt64Value();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = longToNumber(reader.int64() as Long);\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Int64Value>, I>>(object: I): Int64Value {\n        const message = createBaseInt64Value();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseUInt64Value(): UInt64Value {\n    return { value: 0 };\n}\nexport const UInt64Value = {\n    encode(message: UInt64Value, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== 0) {\n            writer.uint32(8).uint64(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UInt64Value {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUInt64Value();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = longToNumber(reader.uint64() as Long);\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UInt64Value>, I>>(object: I): UInt64Value {\n        const message = createBaseUInt64Value();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseInt32Value(): Int32Value {\n    return { value: 0 };\n}\nexport const Int32Value = {\n    encode(message: Int32Value, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== 0) {\n            writer.uint32(8).int32(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Int32Value {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseInt32Value();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Int32Value>, I>>(object: I): Int32Value {\n        const message = createBaseInt32Value();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseUInt32Value(): UInt32Value {\n    return { value: 0 };\n}\nexport const UInt32Value = {\n    encode(message: UInt32Value, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== 0) {\n            writer.uint32(8).uint32(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UInt32Value {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUInt32Value();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UInt32Value>, I>>(object: I): UInt32Value {\n        const message = createBaseUInt32Value();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseBoolValue(): BoolValue {\n    return { value: false };\n}\nexport const BoolValue = {\n    encode(message: BoolValue, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value === true) {\n            writer.uint32(8).bool(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BoolValue {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBoolValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<BoolValue>, I>>(object: I): BoolValue {\n        const message = createBaseBoolValue();\n        message.value = object.value ?? false;\n        return message;\n    },\n};\nfunction createBaseStringValue(): StringValue {\n    return { value: \"\" };\n}\nexport const StringValue = {\n    encode(message: StringValue, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== \"\") {\n            writer.uint32(10).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): StringValue {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStringValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<StringValue>, I>>(object: I): StringValue {\n        const message = createBaseStringValue();\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseBytesValue(): BytesValue {\n    return { value: new Uint8Array() };\n}\nexport const BytesValue = {\n    encode(message: BytesValue, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value.length !== 0) {\n            writer.uint32(10).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BytesValue {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBytesValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<BytesValue>, I>>(object: I): BytesValue {\n        const message = createBaseBytesValue();\n        message.value = object.value ?? new Uint8Array();\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import { RankingInfo } from \"../generated-proto/pb_schema/camera_kit/v3/features/ranking_info\";\nimport { RemoteApiInfo } from \"../generated-proto/pb_schema/camera_kit/v3/features/remote_api_info\";\nimport { Any } from \"../generated-proto/pb_schema/google/protobuf/any\";\nimport { StringValue } from \"../generated-proto/pb_schema/google/protobuf/wrappers\";\n\n// There is a discrepancy in how the CameraKit backend and ts-proto serialize a protobuf message into JSON.\n// The backend serialization follows the spec outlined here:\n// https://protobuf.dev/reference/protobuf/google.protobuf/#json\n// According to this specification, the actual message is represented as JSON\n// with an additional @type discriminator field.\n// However, this approach is not consistent with what the client-side expects for Any.\n// It requires it to be in the format { typeUrl: string, value: UInt8Array }.\n// Therefore, we need to map the JSON representation of Any to the actual Any message.\n// This issue only applies to JSON-serialized protos returned by our backend.\n// The JSON serialization of the ts-proto package that we use\n// does not appear to be following the spec regarding Any.\n// Even if it does, the deserialization part has to be handled manually.\n// This issue does not apply to cases where the Lens object is deserialized from a binary proto message.\n// Ideally, to fix this issue, we want to switch to gRPC web for our backend communication,\n// similar to how we do it for COF. Ticket: https://jira.sc-corp.net/browse/CAMKIT-4668\n\nexport const knownAnyTypes = {\n    rankingInfo: \"type.googleapis.com/com.snap.camerakit.v3.features.RankingInfo\",\n    remoteApiInfo: \"type.googleapis.com/com.snap.camerakit.v3.features.RemoteApiInfo\",\n    string: \"type.googleapis.com/google.protobuf.StringValue\",\n};\n\n/**\n * JSON-serialized any message according to spec: https://protobuf.dev/reference/protobuf/google.protobuf/#json\n */\nexport interface AnyJson extends Record<string, unknown> {\n    \"@type\": string;\n}\n\n/**\n * Gets JSON-serialized any message and maps it to JS representation of Any type.\n * @param jsonAny JSON-serialized any message according to spec:\n * https://protobuf.dev/reference/protobuf/google.protobuf/#json\n * @returns JS representation of Any proto message.\n */\nexport function encodeKnownAnyJson(jsonAny: AnyJson): Any | void {\n    const typeUrl = jsonAny[\"@type\"];\n    switch (typeUrl) {\n        case knownAnyTypes.remoteApiInfo:\n            return {\n                typeUrl,\n                // Safety: we know that spec ensures all message fields to exists\n                value: RemoteApiInfo.encode(jsonAny as unknown as RemoteApiInfo).finish(),\n            };\n        case knownAnyTypes.rankingInfo:\n            return {\n                typeUrl,\n                value: RankingInfo.encode(jsonAny as unknown as RankingInfo).finish(),\n            };\n        case knownAnyTypes.string:\n            return {\n                typeUrl,\n                value: StringValue.encode(jsonAny as unknown as StringValue).finish(),\n            };\n        default:\n            break;\n    }\n}\n", "import { AnyJson, encodeKnownAnyJson } from \"../common/any\";\nimport { Any } from \"../generated-proto/pb_schema/google/protobuf/any\";\nimport { CameraKitApiHostname } from \"../configuration\";\nimport { FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { isGetGroupResponse, isLensProto, LensProto } from \"./Lens\";\n\nconst relativePath = \"/com.snap.camerakit.v3.Lenses\";\n\nfunction fixAny(lens: LensProto): LensProto {\n    // The Lens is serialized into JSON by the CameraKit backend, which is vulnerable\n    // to serialization discrepancies between the backend and ts-proto generated serializers.\n    // See packages/web-sdk/src/common/any.ts\n    const featureMetadata = lens.featureMetadata.reduce((fixedAnys, anyToFix) => {\n        // Safety: anyToFix is actually AnyJson, due to how our backend serializes it\n        const fixedAny = encodeKnownAnyJson(anyToFix as unknown as AnyJson);\n        return fixedAny ? [...fixedAnys, fixedAny] : fixedAnys;\n    }, [] as Any[]);\n\n    return {\n        ...lens,\n        featureMetadata,\n    };\n}\n\nfunction getRequestId(res: Response) {\n    return res.headers.get(\"x-request-id\");\n}\n\nexport async function retrieveCameraKitLens(\n    httpClient: FetchHandler,\n    lensId: string,\n    groupId: string,\n    apiHostname: CameraKitApiHostname\n): Promise<LensProto> {\n    const url = `https://${apiHostname}${relativePath}/groups/${groupId}/lenses/${lensId}`;\n    const response = await httpClient(url, { credentials: \"include\" });\n    const body = await response.json();\n    const lens = body.lens;\n\n    if (!response.ok) {\n        throw new Error(\n            `Cannot load lens ${lensId} in group ${groupId}. GetGroupLens responded with status ` +\n                `${response.status} and body:\\n\\t${JSON.stringify(body)} for requestId ${getRequestId(response)}`\n        );\n    }\n\n    if (!isLensProto(lens)) {\n        throw new Error(\n            `Cannot load lens ${lensId} in group ${groupId}. The response was not a Lens:` +\n                `\\n\\t${JSON.stringify(body)} for requestId ${getRequestId(response)}`\n        );\n    }\n    return fixAny(lens);\n}\n\nexport async function retrieveCameraKitLensGroup(\n    httpClient: FetchHandler,\n    groupId: string,\n    apiHostname: CameraKitApiHostname\n): Promise<LensProto[]> {\n    const url = `https://${apiHostname}${relativePath}/groups/${groupId}`;\n    const response = await httpClient(url, { credentials: \"include\" });\n    const body = await response.json();\n\n    if (!response.ok) {\n        throw new Error(\n            `Cannot load lens group ${groupId}. GetGroup responded with status ` +\n                `${response.status} and body:\\n\\t${JSON.stringify(body)} for requestId ${getRequestId(response)}`\n        );\n    }\n\n    if (!isGetGroupResponse(body)) {\n        throw new Error(\n            `Cannot load lens group ${groupId}. The response was not a LensGroup:` +\n                `\\n\\t${JSON.stringify(body)} for requestId ${getRequestId(response)}`\n        );\n    }\n    return body.lenses.map(fixAny);\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Lens } from \"./lens\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface ExportLensesByIdRequest {\n    unlockableIds: number[];\n    context: ExportLensesByIdRequest_Context | undefined;\n}\nexport interface ExportLensesByIdRequest_Context {\n    userAgent: string;\n    locale: string;\n    extention: ExportLensesByIdRequest_Context_Extension | undefined;\n    extension: ExportLensesByIdRequest_Context_Extension | undefined;\n    extensionRequestContext: Uint8Array;\n}\nexport interface ExportLensesByIdRequest_Context_Extension {\n    name: ExportLensesByIdRequest_Context_Extension_Name;\n    version: string;\n}\nexport enum ExportLensesByIdRequest_Context_Extension_Name {\n    UNSET = \"UNSET\",\n    SHOP_KIT = \"SHOP_KIT\",\n    LENS_WEB_BUILDER = \"LENS_WEB_BUILDER\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function exportLensesByIdRequest_Context_Extension_NameFromJSON(object: any): ExportLensesByIdRequest_Context_Extension_Name {\n    switch (object) {\n        case 0:\n        case \"UNSET\":\n            return ExportLensesByIdRequest_Context_Extension_Name.UNSET;\n        case 1:\n        case \"SHOP_KIT\":\n            return ExportLensesByIdRequest_Context_Extension_Name.SHOP_KIT;\n        case 2:\n        case \"LENS_WEB_BUILDER\":\n            return ExportLensesByIdRequest_Context_Extension_Name.LENS_WEB_BUILDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ExportLensesByIdRequest_Context_Extension_Name.UNRECOGNIZED;\n    }\n}\nexport function exportLensesByIdRequest_Context_Extension_NameToNumber(object: ExportLensesByIdRequest_Context_Extension_Name): number {\n    switch (object) {\n        case ExportLensesByIdRequest_Context_Extension_Name.UNSET:\n            return 0;\n        case ExportLensesByIdRequest_Context_Extension_Name.SHOP_KIT:\n            return 1;\n        case ExportLensesByIdRequest_Context_Extension_Name.LENS_WEB_BUILDER:\n            return 2;\n        default:\n            return 0;\n    }\n}\nexport interface ExportLensesByIdResponse {\n    lenses: {\n        [key: number]: Uint8Array;\n    };\n    excludedLenses: ExportLensesByIdResponse_ExcludedLens[];\n}\nexport interface ExportLensesByIdResponse_LensesEntry {\n    key: number;\n    value: Uint8Array;\n}\nexport interface ExportLensesByIdResponse_ExcludedLens {\n    lensId: number;\n    code: ExportLensesByIdResponse_ExcludedLens_Code;\n    reason: string;\n}\nexport enum ExportLensesByIdResponse_ExcludedLens_Code {\n    UNSET = \"UNSET\",\n    UNKNOWN = \"UNKNOWN\",\n    NOT_FOUND = \"NOT_FOUND\",\n    INCOMPATIBLE_LENS_CORE_VERSION = \"INCOMPATIBLE_LENS_CORE_VERSION\",\n    ARCHIVED_OR_INVISIBLE = \"ARCHIVED_OR_INVISIBLE\",\n    CONTAINS_MUSIC = \"CONTAINS_MUSIC\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function exportLensesByIdResponse_ExcludedLens_CodeFromJSON(object: any): ExportLensesByIdResponse_ExcludedLens_Code {\n    switch (object) {\n        case 0:\n        case \"UNSET\":\n            return ExportLensesByIdResponse_ExcludedLens_Code.UNSET;\n        case 1:\n        case \"UNKNOWN\":\n            return ExportLensesByIdResponse_ExcludedLens_Code.UNKNOWN;\n        case 2:\n        case \"NOT_FOUND\":\n            return ExportLensesByIdResponse_ExcludedLens_Code.NOT_FOUND;\n        case 3:\n        case \"INCOMPATIBLE_LENS_CORE_VERSION\":\n            return ExportLensesByIdResponse_ExcludedLens_Code.INCOMPATIBLE_LENS_CORE_VERSION;\n        case 4:\n        case \"ARCHIVED_OR_INVISIBLE\":\n            return ExportLensesByIdResponse_ExcludedLens_Code.ARCHIVED_OR_INVISIBLE;\n        case 5:\n        case \"CONTAINS_MUSIC\":\n            return ExportLensesByIdResponse_ExcludedLens_Code.CONTAINS_MUSIC;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ExportLensesByIdResponse_ExcludedLens_Code.UNRECOGNIZED;\n    }\n}\nexport function exportLensesByIdResponse_ExcludedLens_CodeToNumber(object: ExportLensesByIdResponse_ExcludedLens_Code): number {\n    switch (object) {\n        case ExportLensesByIdResponse_ExcludedLens_Code.UNSET:\n            return 0;\n        case ExportLensesByIdResponse_ExcludedLens_Code.UNKNOWN:\n            return 1;\n        case ExportLensesByIdResponse_ExcludedLens_Code.NOT_FOUND:\n            return 2;\n        case ExportLensesByIdResponse_ExcludedLens_Code.INCOMPATIBLE_LENS_CORE_VERSION:\n            return 3;\n        case ExportLensesByIdResponse_ExcludedLens_Code.ARCHIVED_OR_INVISIBLE:\n            return 4;\n        case ExportLensesByIdResponse_ExcludedLens_Code.CONTAINS_MUSIC:\n            return 5;\n        default:\n            return 0;\n    }\n}\nexport interface ExtensionRequestContext {\n    userAgent: string;\n    locale: string;\n}\nexport interface Envelope {\n    lenses: Lens[];\n}\nfunction createBaseExportLensesByIdRequest(): ExportLensesByIdRequest {\n    return { unlockableIds: [], context: undefined };\n}\nexport const ExportLensesByIdRequest = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExportLensesByIdRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.unlockableIds.push(longToNumber(reader.int64() as Long));\n                        }\n                    }\n                    else {\n                        message.unlockableIds.push(longToNumber(reader.int64() as Long));\n                    }\n                    break;\n                case 2:\n                    message.context = ExportLensesByIdRequest_Context.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExportLensesByIdRequest>, I>>(object: I): ExportLensesByIdRequest {\n        const message = createBaseExportLensesByIdRequest();\n        message.unlockableIds = object.unlockableIds?.map((e) => e) || [];\n        message.context =\n            object.context !== undefined && object.context !== null\n                ? ExportLensesByIdRequest_Context.fromPartial(object.context)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseExportLensesByIdRequest_Context(): ExportLensesByIdRequest_Context {\n    return {\n        userAgent: \"\",\n        locale: \"\",\n        extention: undefined,\n        extension: undefined,\n        extensionRequestContext: new Uint8Array(),\n    };\n}\nexport const ExportLensesByIdRequest_Context = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdRequest_Context {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExportLensesByIdRequest_Context();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.userAgent = reader.string();\n                    break;\n                case 2:\n                    message.locale = reader.string();\n                    break;\n                case 3:\n                    message.extention = ExportLensesByIdRequest_Context_Extension.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.extension = ExportLensesByIdRequest_Context_Extension.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.extensionRequestContext = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExportLensesByIdRequest_Context>, I>>(object: I): ExportLensesByIdRequest_Context {\n        const message = createBaseExportLensesByIdRequest_Context();\n        message.userAgent = object.userAgent ?? \"\";\n        message.locale = object.locale ?? \"\";\n        message.extention =\n            object.extention !== undefined && object.extention !== null\n                ? ExportLensesByIdRequest_Context_Extension.fromPartial(object.extention)\n                : undefined;\n        message.extension =\n            object.extension !== undefined && object.extension !== null\n                ? ExportLensesByIdRequest_Context_Extension.fromPartial(object.extension)\n                : undefined;\n        message.extensionRequestContext = object.extensionRequestContext ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseExportLensesByIdRequest_Context_Extension(): ExportLensesByIdRequest_Context_Extension {\n    return { name: ExportLensesByIdRequest_Context_Extension_Name.UNSET, version: \"\" };\n}\nexport const ExportLensesByIdRequest_Context_Extension = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdRequest_Context_Extension {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExportLensesByIdRequest_Context_Extension();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = exportLensesByIdRequest_Context_Extension_NameFromJSON(reader.int32());\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExportLensesByIdRequest_Context_Extension>, I>>(object: I): ExportLensesByIdRequest_Context_Extension {\n        const message = createBaseExportLensesByIdRequest_Context_Extension();\n        message.name = object.name ?? ExportLensesByIdRequest_Context_Extension_Name.UNSET;\n        message.version = object.version ?? \"\";\n        return message;\n    },\n};\nfunction createBaseExportLensesByIdResponse(): ExportLensesByIdResponse {\n    return { lenses: {}, excludedLenses: [] };\n}\nexport const ExportLensesByIdResponse = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExportLensesByIdResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = ExportLensesByIdResponse_LensesEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.lenses[entry1.key] = entry1.value;\n                    }\n                    break;\n                case 2:\n                    message.excludedLenses.push(ExportLensesByIdResponse_ExcludedLens.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExportLensesByIdResponse>, I>>(object: I): ExportLensesByIdResponse {\n        const message = createBaseExportLensesByIdResponse();\n        message.lenses = Object.entries(object.lenses ?? {}).reduce<{\n            [key: number]: Uint8Array;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[Number(key)] = value;\n            }\n            return acc;\n        }, {});\n        message.excludedLenses =\n            object.excludedLenses?.map((e) => ExportLensesByIdResponse_ExcludedLens.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseExportLensesByIdResponse_LensesEntry(): ExportLensesByIdResponse_LensesEntry {\n    return { key: 0, value: new Uint8Array() };\n}\nexport const ExportLensesByIdResponse_LensesEntry = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdResponse_LensesEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExportLensesByIdResponse_LensesEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = longToNumber(reader.int64() as Long);\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExportLensesByIdResponse_LensesEntry>, I>>(object: I): ExportLensesByIdResponse_LensesEntry {\n        const message = createBaseExportLensesByIdResponse_LensesEntry();\n        message.key = object.key ?? 0;\n        message.value = object.value ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseExportLensesByIdResponse_ExcludedLens(): ExportLensesByIdResponse_ExcludedLens {\n    return { lensId: 0, code: ExportLensesByIdResponse_ExcludedLens_Code.UNSET, reason: \"\" };\n}\nexport const ExportLensesByIdResponse_ExcludedLens = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdResponse_ExcludedLens {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExportLensesByIdResponse_ExcludedLens();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lensId = longToNumber(reader.int64() as Long);\n                    break;\n                case 2:\n                    message.code = exportLensesByIdResponse_ExcludedLens_CodeFromJSON(reader.int32());\n                    break;\n                case 3:\n                    message.reason = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExportLensesByIdResponse_ExcludedLens>, I>>(object: I): ExportLensesByIdResponse_ExcludedLens {\n        const message = createBaseExportLensesByIdResponse_ExcludedLens();\n        message.lensId = object.lensId ?? 0;\n        message.code = object.code ?? ExportLensesByIdResponse_ExcludedLens_Code.UNSET;\n        message.reason = object.reason ?? \"\";\n        return message;\n    },\n};\nfunction createBaseExtensionRequestContext(): ExtensionRequestContext {\n    return { userAgent: \"\", locale: \"\" };\n}\nexport const ExtensionRequestContext = {\n    encode(message: ExtensionRequestContext, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.userAgent !== \"\") {\n            writer.uint32(10).string(message.userAgent);\n        }\n        if (message.locale !== \"\") {\n            writer.uint32(18).string(message.locale);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExtensionRequestContext {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExtensionRequestContext();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.userAgent = reader.string();\n                    break;\n                case 2:\n                    message.locale = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExtensionRequestContext>, I>>(object: I): ExtensionRequestContext {\n        const message = createBaseExtensionRequestContext();\n        message.userAgent = object.userAgent ?? \"\";\n        message.locale = object.locale ?? \"\";\n        return message;\n    },\n};\nfunction createBaseEnvelope(): Envelope {\n    return { lenses: [] };\n}\nexport const Envelope = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): Envelope {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEnvelope();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lenses.push(Lens.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Envelope>, I>>(object: I): Envelope {\n        const message = createBaseEnvelope();\n        message.lenses = object.lenses?.map((e) => Lens.fromPartial(e)) || [];\n        return message;\n    },\n};\nexport interface Export {\n    ExportLensesById(request: ExportLensesByIdRequest): Promise<ExportLensesByIdResponse>;\n}\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import { Envelope } from \"../generated-proto/pb_schema/camera_kit/v3/export\";\nimport { LensProto } from \"./Lens\";\n\n/**\n * @internal\n */\nfunction decodeEnvelope(envelope: ArrayBuffer) {\n    try {\n        return Envelope.decode(new Uint8Array(envelope)).lenses;\n    } catch {\n        throw new Error(\"Invalid lens envelope.\");\n    }\n}\n\n/**\n * @internal\n */\nexport function decodeEnvelopes(envelopes: ArrayBuffer[]) {\n    return envelopes.reduce<LensProto[]>((lenses, envelope) => [...lenses, ...decodeEnvelope(envelope)], []);\n}\n", "import { Injectable } from \"../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { TypedEventTarget } from \"../events/TypedEventTarget\";\nimport { AssetValidationFailed } from \"../lens/assets/LensAssetsProvider\";\nimport { AssetDownload, LensDownload } from \"./reporters/reportLensAndAssetDownload\";\nimport { LensContentValidationFailed } from \"./reporters/reportLensValidationFailed\";\nimport { LensView } from \"./reporters/reportLensView\";\nimport { LensWait } from \"./reporters/reportLensWait\";\nimport { Session } from \"./reporters/reportUserSession\";\nimport { BenchmarkComplete } from \"./reporters/reportBenchmarks\";\nimport { LegalPrompt } from \"./reporters/reportLegalState\";\nimport { MakeTaggedBusinessEvent } from \"./businessEventsReporter\";\n\n/**\n * The Exception metric reports every time we handle an exception.\n */\nexport type Exception = MakeTaggedBusinessEvent<\"exception\">;\n\nexport type CameraKitBootstrapMetricEvents = TypedCustomEvent<BenchmarkComplete[\"name\"], BenchmarkComplete>;\n\nexport type CameraKitSessionMetricEvents =\n    | TypedCustomEvent<LegalPrompt[\"name\"], LegalPrompt>\n    | TypedCustomEvent<LensView[\"name\"], LensView>\n    | TypedCustomEvent<LensWait[\"name\"], LensWait>\n    | TypedCustomEvent<LensDownload[\"name\"], LensDownload>\n    | TypedCustomEvent<AssetDownload[\"name\"], AssetDownload>\n    | TypedCustomEvent<AssetValidationFailed[\"name\"], AssetValidationFailed>\n    | TypedCustomEvent<LensContentValidationFailed[\"name\"], LensContentValidationFailed>\n    | TypedCustomEvent<Session[\"name\"], Session>;\n\n/**\n * A union of all event types emitted by the {@link CameraKit.events} event emitter.\n *\n * @internal\n */\nexport type CameraKitMetricEvents =\n    | CameraKitSessionMetricEvents\n    | CameraKitBootstrapMetricEvents\n    | TypedCustomEvent<Exception[\"name\"], Exception>;\n\n/**\n * This event target may be used to listen for any of the metrics events reported by CameraKit.\n *\n * @internal\n */\nexport type MetricsEventTarget = TypedEventTarget<CameraKitMetricEvents>;\n\n/**\n * Any metrics that we wish to emit to applications should be dispatched on this event target.\n *\n * Our business events reporter also listens to this event target, and may report the emitted metrics to our backend.\n *\n * @internal\n */\nexport const metricsEventTargetFactory = Injectable(\n    \"metricsEventTarget\",\n    (): MetricsEventTarget => new TypedEventTarget()\n);\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport enum Namespace {\n    DEFAULT = 0,\n    LENS_CORE = 64,\n    CAMERA_KIT_CORE = 65,\n    LENS_CORE_CONFIG = 143,\n    UNRECOGNIZED = -1\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import { BrowserHeaders } from \"browser-headers\";\nimport { getCameraKitUserAgent } from \"../platform/cameraKitUserAgent\";\nimport { ensureError } from \"../common/errorHelpers\";\nimport { CircumstancesServiceClientImpl, GrpcWebImpl } from \"../generated-proto/pb_schema/cdp/cof/circumstance_service\";\nimport { ConfigTargetingRequest } from \"../generated-proto/pb_schema/cdp/cof/config_request\";\nimport { ConfigTargetingResponse } from \"../generated-proto/pb_schema/cdp/cof/config_response\";\nimport { ChainableHandler, HandlerChainBuilder, RequestMetadata } from \"../handlers/HandlerChainBuilder\";\nimport {\n    RequestStateEventTarget,\n    dispatchRequestCompleted,\n    dispatchRequestErrored,\n    dispatchRequestStarted,\n    requestStateEventTargetFactory,\n} from \"../handlers/requestStateEmittingHandler\";\nimport { createResponseCachingHandler, staleWhileRevalidateStrategy } from \"../handlers/responseCachingHandler\";\nimport { createRetryingHandler } from \"../handlers/retryingHandler\";\nimport { createTimeoutHandler } from \"../handlers/timeoutHandler\";\nimport { ExpiringPersistence } from \"../persistence/ExpiringPersistence\";\nimport { IndexedDBPersistence } from \"../persistence/IndexedDBPersistence\";\nimport {\n    OperationalMetricsReporter,\n    operationalMetricReporterFactory,\n} from \"../metrics/operational/operationalMetricsReporter\";\nimport { CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\n\nexport interface Metadata {\n    [key: string]: string;\n}\n\nconst id = <Req, Res, Meta extends RequestMetadata>(h: ChainableHandler<Req, Res, Req, Res, Meta>) => h;\n\nexport const COF_REQUEST_TYPE = \"cof\";\n\nexport type CofDimensions = { requestType: typeof COF_REQUEST_TYPE };\n\n/**\n * Handler chain used to make COF requests. Uses the COF client to perform the\n * requests, with retries, timeout, and caching.\n *\n * The handler will first attempt to retrieve the COF response from cache. If it is found, the result is returned\n * immediately and the cache is updated in the background. If no response is found, a COF request is made. This request\n * will retry (with exponential backoff + jitter) for 5 seconds before returning an error to the caller.\n */\nexport const cofHandlerFactory = Injectable(\n    \"cofHandler\",\n    [configurationToken, requestStateEventTargetFactory.token, operationalMetricReporterFactory.token] as const,\n    (\n        config: CameraKitConfiguration,\n        requestStateEventTarget: RequestStateEventTarget,\n        reporter: OperationalMetricsReporter\n    ) => {\n        // We need to wrap `targetingQuery` to create a usable Handler – the main issue is that HandlerChainBuilder\n        // always adds a `signal` property to the metadata argument (second argument of the Handler), but\n        // `targetingQuery` expects the second argument to only contain headers.\n        return (\n            new HandlerChainBuilder(\n                async (\n                    request: Partial<ConfigTargetingRequest>,\n                    { signal, isSideEffect: _, ...metadata }: Metadata & RequestMetadata\n                ) => {\n                    const rpc = new GrpcWebImpl(`https://${config.apiHostname}`, {});\n                    const client = new CircumstancesServiceClientImpl(rpc);\n                    return new Promise<ConfigTargetingResponse>((resolve, reject) => {\n                        if (signal) {\n                            signal.addEventListener(\"abort\", () =>\n                                reject(new Error(\"COF request aborted by handler chain.\"))\n                            );\n                        }\n                        client\n                            .targetingQuery(\n                                request,\n                                new BrowserHeaders({\n                                    authorization: `Bearer ${config.apiToken}`,\n                                    \"x-snap-client-user-agent\": getCameraKitUserAgent(),\n                                    ...metadata,\n                                })\n                            )\n                            .then((response) => {\n                                // NOTE: in order for cache persistance to work, we need to make the object cloneable,\n                                // i.e. with no methods (it appears targetingQuery() attaches toObject() to response\n                                // object). Safety: We have to cast response object to a type that has toObject\n                                // defined, because that is indeed what generated code has:\n                                // eslint-disable-next-line max-len\n                                // https://github.sc-corp.net/Snapchat/camera-kit-web-sdk/blob/8d6b4e8bfa3717b376ab197a49972a1e410851f7/packages/web-sdk/src/generated-proto/pb_schema/cdp/cof/circumstance_service.ts#L1459\n                                delete (response as any).toObject;\n                                resolve(response);\n                            })\n                            .catch(reject);\n                    });\n                }\n            )\n                .map(\n                    id((next) => async (request, metadata) => {\n                        const dimensions: CofDimensions = { requestType: COF_REQUEST_TYPE };\n                        const { requestId } = dispatchRequestStarted(requestStateEventTarget, { dimensions });\n                        try {\n                            const response = await next(request, metadata);\n                            // TODO: We hardcode status code and sizeByte values because we do not have access to\n                            // underlying transport of configs-web.\n                            // When this ticket is done https://jira.sc-corp.net/browse/CAMKIT-2840,\n                            // we will remove this handler and benefit from existing ones.\n                            const status = 200;\n                            let sizeByte = 0;\n                            try {\n                                sizeByte = new TextEncoder().encode(JSON.stringify(response)).byteLength;\n                            } finally {\n                                dispatchRequestCompleted(requestStateEventTarget, {\n                                    requestId,\n                                    dimensions,\n                                    status,\n                                    sizeByte,\n                                });\n                                return response;\n                            }\n                        } catch (error) {\n                            dispatchRequestErrored(requestStateEventTarget, {\n                                requestId,\n                                dimensions,\n                                error: ensureError(error),\n                            });\n                            throw error;\n                        }\n                    })\n                )\n                // targetingQuery() always converts failed responses into errors (unlike fetch()), so we need a custom\n                // retryPredicate that retries all errors. We'll keep retrying (with backoff) for 20 seconds total\n                // elapsed time before we return an error back up the chain.\n                .map(createRetryingHandler({ retryPredicate: (r) => r instanceof Error }))\n                // API gateway has 15 seconds timeout, so we rely on that first\n                .map(createTimeoutHandler({ timeout: 20 * 1000 }))\n                .map(\n                    createResponseCachingHandler(\n                        // COF responses will be removed from cache after 1 week. Keep in mind that the\n                        // staleWhileRevalidate strategy will update the cache each time COF is requested\n                        //  – this expiration comes into play only if e.g. a user doesn't load the page\n                        // for more than a week.\n                        new ExpiringPersistence<ConfigTargetingResponse>(\n                            () => 7 * 24 * 60 * 60,\n                            new IndexedDBPersistence({ databaseName: \"COFCache\" })\n                        ),\n                        (r: Partial<ConfigTargetingRequest>) => JSON.stringify(r),\n\n                        // If we have a matching response already in cache,\n                        // we'll return it immediately and then update the cache in the background.\n                        staleWhileRevalidateStrategy({ requestType: \"cof\", reporter })\n                    )\n                ).handler\n        );\n    }\n);\n", "import Long from \"long\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Namespace } from \"./namespace\";\nimport { ConfigTargetingRequest } from \"./config_request\";\nimport { ConfigTargetingResponse } from \"./config_response\";\nimport { BrowserHeaders } from \"browser-headers\";\nimport { ConfigResult } from \"./config_result\";\nimport { DebugTrace } from \"./debug_info\";\nimport { Ruid } from \"../../common/ruid\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport interface GetAbConfigValuesRequest {\n    configNames: string[];\n    namespaces: Namespace[];\n    cofConfigNames: string[];\n    includeAllConfigs: boolean;\n    disableExposureLogging: boolean;\n    enableDebug: boolean;\n}\nexport interface GetAbConfigValuesResponse {\n    configResults: ConfigResult[];\n    debugTrace: DebugTrace | undefined;\n}\nexport interface ConfigSetGenerationRequest {\n    targetingParameters: ConfigTargetingRequest | undefined;\n    overrides: ConfigResult[];\n}\nexport interface ConfigSetGenerationResponse {\n    targetingResponse: ConfigTargetingResponse | undefined;\n}\nexport interface PinConfigRequest {\n    configSetToken: string;\n    userId: string;\n    ttlSeconds: number;\n}\nexport interface PinConfigResponse {\n    debug: string;\n}\nexport interface UnpinConfigRequest {\n    configSetToken: string;\n    userId: string;\n}\nexport interface UnpinConfigResponse {\n    debug: string;\n}\nexport interface ConfigWithNamespace {\n    configName: string;\n    namespace: Namespace;\n}\nexport interface GetConfigValuesByTokenRequest {\n    token: string;\n    configNames: ConfigWithNamespace[];\n    namespaces: Namespace[];\n    disableExposureLogging: boolean;\n    getAllConfigs: boolean;\n}\nexport interface GetConfigValuesByTokenResponse {\n    configResults: ConfigResult[];\n}\nexport interface GetCachedConfigResultSequenceIdsRequest {\n}\nexport interface GetCachedConfigResultSequenceIdsResponse {\n    serializedBitmap: Uint8Array;\n}\nexport interface GetConfigResultsBySequenceIdsRequest {\n    sequenceIds: number[];\n}\nexport interface ConfigResultWithSequenceId {\n    sequenceId: number;\n    configResult: ConfigResult | undefined;\n}\nexport interface GetConfigResultsBySequenceIdsResponse {\n    configResultWithSequenceIds: ConfigResultWithSequenceId[];\n}\nexport interface GetBitmapByTokenRequest {\n    token: string;\n}\nexport interface GetBitmapByTokenResponse {\n    idBitmap: Uint8Array;\n}\nexport interface GetUnevaluatedConfigResultsWithAbTargetingRequest {\n    namespaces: Namespace[];\n    edgeConfigClientVersion: string;\n}\nexport interface GetUnevaluatedConfigResultsWithAbTargetingResponse {\n    configResults: ConfigResult[];\n}\nexport interface AddRuidsForDebuggingRequest {\n    ruids: Ruid[];\n    configNames: string[];\n    maxSnapshots: number;\n}\nexport interface AddRuidsForDebuggingResponse {\n}\nfunction createBaseGetAbConfigValuesRequest(): GetAbConfigValuesRequest {\n    return {\n        configNames: [],\n        namespaces: [],\n        cofConfigNames: [],\n        includeAllConfigs: false,\n        disableExposureLogging: false,\n        enableDebug: false,\n    };\n}\nexport const GetAbConfigValuesRequest = {\n    encode(message: GetAbConfigValuesRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configNames) {\n            writer.uint32(10).string(v!);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.namespaces) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        for (const v of message.cofConfigNames) {\n            writer.uint32(26).string(v!);\n        }\n        if (message.includeAllConfigs === true) {\n            writer.uint32(32).bool(message.includeAllConfigs);\n        }\n        if (message.disableExposureLogging === true) {\n            writer.uint32(40).bool(message.disableExposureLogging);\n        }\n        if (message.enableDebug === true) {\n            writer.uint32(104).bool(message.enableDebug);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetAbConfigValuesRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetAbConfigValuesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configNames.push(reader.string());\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.namespaces.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.namespaces.push(reader.int32() as any);\n                    }\n                    break;\n                case 3:\n                    message.cofConfigNames.push(reader.string());\n                    break;\n                case 4:\n                    message.includeAllConfigs = reader.bool();\n                    break;\n                case 5:\n                    message.disableExposureLogging = reader.bool();\n                    break;\n                case 13:\n                    message.enableDebug = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetAbConfigValuesRequest>, I>>(object: I): GetAbConfigValuesRequest {\n        const message = createBaseGetAbConfigValuesRequest();\n        message.configNames = object.configNames?.map((e) => e) || [];\n        message.namespaces = object.namespaces?.map((e) => e) || [];\n        message.cofConfigNames = object.cofConfigNames?.map((e) => e) || [];\n        message.includeAllConfigs = object.includeAllConfigs ?? false;\n        message.disableExposureLogging = object.disableExposureLogging ?? false;\n        message.enableDebug = object.enableDebug ?? false;\n        return message;\n    },\n};\nfunction createBaseGetAbConfigValuesResponse(): GetAbConfigValuesResponse {\n    return { configResults: [], debugTrace: undefined };\n}\nexport const GetAbConfigValuesResponse = {\n    encode(message: GetAbConfigValuesResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.debugTrace !== undefined) {\n            DebugTrace.encode(message.debugTrace, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetAbConfigValuesResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetAbConfigValuesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.debugTrace = DebugTrace.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetAbConfigValuesResponse>, I>>(object: I): GetAbConfigValuesResponse {\n        const message = createBaseGetAbConfigValuesResponse();\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        message.debugTrace =\n            object.debugTrace !== undefined && object.debugTrace !== null\n                ? DebugTrace.fromPartial(object.debugTrace)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseConfigSetGenerationRequest(): ConfigSetGenerationRequest {\n    return { targetingParameters: undefined, overrides: [] };\n}\nexport const ConfigSetGenerationRequest = {\n    encode(message: ConfigSetGenerationRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.targetingParameters !== undefined) {\n            ConfigTargetingRequest.encode(message.targetingParameters, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.overrides) {\n            ConfigResult.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigSetGenerationRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigSetGenerationRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.targetingParameters = ConfigTargetingRequest.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.overrides.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigSetGenerationRequest>, I>>(object: I): ConfigSetGenerationRequest {\n        const message = createBaseConfigSetGenerationRequest();\n        message.targetingParameters =\n            object.targetingParameters !== undefined && object.targetingParameters !== null\n                ? ConfigTargetingRequest.fromPartial(object.targetingParameters)\n                : undefined;\n        message.overrides = object.overrides?.map((e) => ConfigResult.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseConfigSetGenerationResponse(): ConfigSetGenerationResponse {\n    return { targetingResponse: undefined };\n}\nexport const ConfigSetGenerationResponse = {\n    encode(message: ConfigSetGenerationResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.targetingResponse !== undefined) {\n            ConfigTargetingResponse.encode(message.targetingResponse, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigSetGenerationResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigSetGenerationResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.targetingResponse = ConfigTargetingResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigSetGenerationResponse>, I>>(object: I): ConfigSetGenerationResponse {\n        const message = createBaseConfigSetGenerationResponse();\n        message.targetingResponse =\n            object.targetingResponse !== undefined && object.targetingResponse !== null\n                ? ConfigTargetingResponse.fromPartial(object.targetingResponse)\n                : undefined;\n        return message;\n    },\n};\nfunction createBasePinConfigRequest(): PinConfigRequest {\n    return { configSetToken: \"\", userId: \"\", ttlSeconds: 0 };\n}\nexport const PinConfigRequest = {\n    encode(message: PinConfigRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configSetToken !== \"\") {\n            writer.uint32(10).string(message.configSetToken);\n        }\n        if (message.userId !== \"\") {\n            writer.uint32(18).string(message.userId);\n        }\n        if (message.ttlSeconds !== 0) {\n            writer.uint32(24).int32(message.ttlSeconds);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PinConfigRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePinConfigRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configSetToken = reader.string();\n                    break;\n                case 2:\n                    message.userId = reader.string();\n                    break;\n                case 3:\n                    message.ttlSeconds = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PinConfigRequest>, I>>(object: I): PinConfigRequest {\n        const message = createBasePinConfigRequest();\n        message.configSetToken = object.configSetToken ?? \"\";\n        message.userId = object.userId ?? \"\";\n        message.ttlSeconds = object.ttlSeconds ?? 0;\n        return message;\n    },\n};\nfunction createBasePinConfigResponse(): PinConfigResponse {\n    return { debug: \"\" };\n}\nexport const PinConfigResponse = {\n    encode(message: PinConfigResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.debug !== \"\") {\n            writer.uint32(10).string(message.debug);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PinConfigResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePinConfigResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.debug = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PinConfigResponse>, I>>(object: I): PinConfigResponse {\n        const message = createBasePinConfigResponse();\n        message.debug = object.debug ?? \"\";\n        return message;\n    },\n};\nfunction createBaseUnpinConfigRequest(): UnpinConfigRequest {\n    return { configSetToken: \"\", userId: \"\" };\n}\nexport const UnpinConfigRequest = {\n    encode(message: UnpinConfigRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configSetToken !== \"\") {\n            writer.uint32(10).string(message.configSetToken);\n        }\n        if (message.userId !== \"\") {\n            writer.uint32(18).string(message.userId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UnpinConfigRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUnpinConfigRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configSetToken = reader.string();\n                    break;\n                case 2:\n                    message.userId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UnpinConfigRequest>, I>>(object: I): UnpinConfigRequest {\n        const message = createBaseUnpinConfigRequest();\n        message.configSetToken = object.configSetToken ?? \"\";\n        message.userId = object.userId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseUnpinConfigResponse(): UnpinConfigResponse {\n    return { debug: \"\" };\n}\nexport const UnpinConfigResponse = {\n    encode(message: UnpinConfigResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.debug !== \"\") {\n            writer.uint32(10).string(message.debug);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UnpinConfigResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUnpinConfigResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.debug = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UnpinConfigResponse>, I>>(object: I): UnpinConfigResponse {\n        const message = createBaseUnpinConfigResponse();\n        message.debug = object.debug ?? \"\";\n        return message;\n    },\n};\nfunction createBaseConfigWithNamespace(): ConfigWithNamespace {\n    return { configName: \"\", namespace: 0 };\n}\nexport const ConfigWithNamespace = {\n    encode(message: ConfigWithNamespace, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configName !== \"\") {\n            writer.uint32(10).string(message.configName);\n        }\n        if (message.namespace !== 0) {\n            writer.uint32(16).int32(message.namespace);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigWithNamespace {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigWithNamespace();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configName = reader.string();\n                    break;\n                case 2:\n                    message.namespace = reader.int32() as any;\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigWithNamespace>, I>>(object: I): ConfigWithNamespace {\n        const message = createBaseConfigWithNamespace();\n        message.configName = object.configName ?? \"\";\n        message.namespace = object.namespace ?? 0;\n        return message;\n    },\n};\nfunction createBaseGetConfigValuesByTokenRequest(): GetConfigValuesByTokenRequest {\n    return { token: \"\", configNames: [], namespaces: [], disableExposureLogging: false, getAllConfigs: false };\n}\nexport const GetConfigValuesByTokenRequest = {\n    encode(message: GetConfigValuesByTokenRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.token !== \"\") {\n            writer.uint32(10).string(message.token);\n        }\n        for (const v of message.configNames) {\n            ConfigWithNamespace.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        writer.uint32(26).fork();\n        for (const v of message.namespaces) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.disableExposureLogging === true) {\n            writer.uint32(32).bool(message.disableExposureLogging);\n        }\n        if (message.getAllConfigs === true) {\n            writer.uint32(40).bool(message.getAllConfigs);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigValuesByTokenRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetConfigValuesByTokenRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.token = reader.string();\n                    break;\n                case 2:\n                    message.configNames.push(ConfigWithNamespace.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.namespaces.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.namespaces.push(reader.int32() as any);\n                    }\n                    break;\n                case 4:\n                    message.disableExposureLogging = reader.bool();\n                    break;\n                case 5:\n                    message.getAllConfigs = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetConfigValuesByTokenRequest>, I>>(object: I): GetConfigValuesByTokenRequest {\n        const message = createBaseGetConfigValuesByTokenRequest();\n        message.token = object.token ?? \"\";\n        message.configNames = object.configNames?.map((e) => ConfigWithNamespace.fromPartial(e)) || [];\n        message.namespaces = object.namespaces?.map((e) => e) || [];\n        message.disableExposureLogging = object.disableExposureLogging ?? false;\n        message.getAllConfigs = object.getAllConfigs ?? false;\n        return message;\n    },\n};\nfunction createBaseGetConfigValuesByTokenResponse(): GetConfigValuesByTokenResponse {\n    return { configResults: [] };\n}\nexport const GetConfigValuesByTokenResponse = {\n    encode(message: GetConfigValuesByTokenResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigValuesByTokenResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetConfigValuesByTokenResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetConfigValuesByTokenResponse>, I>>(object: I): GetConfigValuesByTokenResponse {\n        const message = createBaseGetConfigValuesByTokenResponse();\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseGetCachedConfigResultSequenceIdsRequest(): GetCachedConfigResultSequenceIdsRequest {\n    return {};\n}\nexport const GetCachedConfigResultSequenceIdsRequest = {\n    encode(_: GetCachedConfigResultSequenceIdsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetCachedConfigResultSequenceIdsRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetCachedConfigResultSequenceIdsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetCachedConfigResultSequenceIdsRequest>, I>>(_: I): GetCachedConfigResultSequenceIdsRequest {\n        const message = createBaseGetCachedConfigResultSequenceIdsRequest();\n        return message;\n    },\n};\nfunction createBaseGetCachedConfigResultSequenceIdsResponse(): GetCachedConfigResultSequenceIdsResponse {\n    return { serializedBitmap: new Uint8Array() };\n}\nexport const GetCachedConfigResultSequenceIdsResponse = {\n    encode(message: GetCachedConfigResultSequenceIdsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.serializedBitmap.length !== 0) {\n            writer.uint32(10).bytes(message.serializedBitmap);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetCachedConfigResultSequenceIdsResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetCachedConfigResultSequenceIdsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.serializedBitmap = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetCachedConfigResultSequenceIdsResponse>, I>>(object: I): GetCachedConfigResultSequenceIdsResponse {\n        const message = createBaseGetCachedConfigResultSequenceIdsResponse();\n        message.serializedBitmap = object.serializedBitmap ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseGetConfigResultsBySequenceIdsRequest(): GetConfigResultsBySequenceIdsRequest {\n    return { sequenceIds: [] };\n}\nexport const GetConfigResultsBySequenceIdsRequest = {\n    encode(message: GetConfigResultsBySequenceIdsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        writer.uint32(10).fork();\n        for (const v of message.sequenceIds) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigResultsBySequenceIdsRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetConfigResultsBySequenceIdsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.sequenceIds.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.sequenceIds.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetConfigResultsBySequenceIdsRequest>, I>>(object: I): GetConfigResultsBySequenceIdsRequest {\n        const message = createBaseGetConfigResultsBySequenceIdsRequest();\n        message.sequenceIds = object.sequenceIds?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseConfigResultWithSequenceId(): ConfigResultWithSequenceId {\n    return { sequenceId: 0, configResult: undefined };\n}\nexport const ConfigResultWithSequenceId = {\n    encode(message: ConfigResultWithSequenceId, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.sequenceId !== 0) {\n            writer.uint32(8).int32(message.sequenceId);\n        }\n        if (message.configResult !== undefined) {\n            ConfigResult.encode(message.configResult, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResultWithSequenceId {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigResultWithSequenceId();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequenceId = reader.int32();\n                    break;\n                case 2:\n                    message.configResult = ConfigResult.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigResultWithSequenceId>, I>>(object: I): ConfigResultWithSequenceId {\n        const message = createBaseConfigResultWithSequenceId();\n        message.sequenceId = object.sequenceId ?? 0;\n        message.configResult =\n            object.configResult !== undefined && object.configResult !== null\n                ? ConfigResult.fromPartial(object.configResult)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseGetConfigResultsBySequenceIdsResponse(): GetConfigResultsBySequenceIdsResponse {\n    return { configResultWithSequenceIds: [] };\n}\nexport const GetConfigResultsBySequenceIdsResponse = {\n    encode(message: GetConfigResultsBySequenceIdsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResultWithSequenceIds) {\n            ConfigResultWithSequenceId.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigResultsBySequenceIdsResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetConfigResultsBySequenceIdsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResultWithSequenceIds.push(ConfigResultWithSequenceId.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetConfigResultsBySequenceIdsResponse>, I>>(object: I): GetConfigResultsBySequenceIdsResponse {\n        const message = createBaseGetConfigResultsBySequenceIdsResponse();\n        message.configResultWithSequenceIds =\n            object.configResultWithSequenceIds?.map((e) => ConfigResultWithSequenceId.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseGetBitmapByTokenRequest(): GetBitmapByTokenRequest {\n    return { token: \"\" };\n}\nexport const GetBitmapByTokenRequest = {\n    encode(message: GetBitmapByTokenRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.token !== \"\") {\n            writer.uint32(10).string(message.token);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetBitmapByTokenRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetBitmapByTokenRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.token = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetBitmapByTokenRequest>, I>>(object: I): GetBitmapByTokenRequest {\n        const message = createBaseGetBitmapByTokenRequest();\n        message.token = object.token ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetBitmapByTokenResponse(): GetBitmapByTokenResponse {\n    return { idBitmap: new Uint8Array() };\n}\nexport const GetBitmapByTokenResponse = {\n    encode(message: GetBitmapByTokenResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.idBitmap.length !== 0) {\n            writer.uint32(10).bytes(message.idBitmap);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetBitmapByTokenResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetBitmapByTokenResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.idBitmap = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetBitmapByTokenResponse>, I>>(object: I): GetBitmapByTokenResponse {\n        const message = createBaseGetBitmapByTokenResponse();\n        message.idBitmap = object.idBitmap ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseGetUnevaluatedConfigResultsWithAbTargetingRequest(): GetUnevaluatedConfigResultsWithAbTargetingRequest {\n    return { namespaces: [], edgeConfigClientVersion: \"\" };\n}\nexport const GetUnevaluatedConfigResultsWithAbTargetingRequest = {\n    encode(message: GetUnevaluatedConfigResultsWithAbTargetingRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        writer.uint32(10).fork();\n        for (const v of message.namespaces) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.edgeConfigClientVersion !== \"\") {\n            writer.uint32(18).string(message.edgeConfigClientVersion);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetUnevaluatedConfigResultsWithAbTargetingRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.namespaces.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.namespaces.push(reader.int32() as any);\n                    }\n                    break;\n                case 2:\n                    message.edgeConfigClientVersion = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingRequest>, I>>(object: I): GetUnevaluatedConfigResultsWithAbTargetingRequest {\n        const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingRequest();\n        message.namespaces = object.namespaces?.map((e) => e) || [];\n        message.edgeConfigClientVersion = object.edgeConfigClientVersion ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetUnevaluatedConfigResultsWithAbTargetingResponse(): GetUnevaluatedConfigResultsWithAbTargetingResponse {\n    return { configResults: [] };\n}\nexport const GetUnevaluatedConfigResultsWithAbTargetingResponse = {\n    encode(message: GetUnevaluatedConfigResultsWithAbTargetingResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetUnevaluatedConfigResultsWithAbTargetingResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingResponse>, I>>(object: I): GetUnevaluatedConfigResultsWithAbTargetingResponse {\n        const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingResponse();\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseAddRuidsForDebuggingRequest(): AddRuidsForDebuggingRequest {\n    return { ruids: [], configNames: [], maxSnapshots: 0 };\n}\nexport const AddRuidsForDebuggingRequest = {\n    encode(message: AddRuidsForDebuggingRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.ruids) {\n            Ruid.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.configNames) {\n            writer.uint32(18).string(v!);\n        }\n        if (message.maxSnapshots !== 0) {\n            writer.uint32(24).int32(message.maxSnapshots);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): AddRuidsForDebuggingRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAddRuidsForDebuggingRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ruids.push(Ruid.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.configNames.push(reader.string());\n                    break;\n                case 3:\n                    message.maxSnapshots = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<AddRuidsForDebuggingRequest>, I>>(object: I): AddRuidsForDebuggingRequest {\n        const message = createBaseAddRuidsForDebuggingRequest();\n        message.ruids = object.ruids?.map((e) => Ruid.fromPartial(e)) || [];\n        message.configNames = object.configNames?.map((e) => e) || [];\n        message.maxSnapshots = object.maxSnapshots ?? 0;\n        return message;\n    },\n};\nfunction createBaseAddRuidsForDebuggingResponse(): AddRuidsForDebuggingResponse {\n    return {};\n}\nexport const AddRuidsForDebuggingResponse = {\n    encode(_: AddRuidsForDebuggingResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): AddRuidsForDebuggingResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAddRuidsForDebuggingResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<AddRuidsForDebuggingResponse>, I>>(_: I): AddRuidsForDebuggingResponse {\n        const message = createBaseAddRuidsForDebuggingResponse();\n        return message;\n    },\n};\nexport interface CircumstancesService {\n    targetingQuery(request: DeepPartial<ConfigTargetingRequest>, metadata?: grpc.Metadata): Promise<ConfigTargetingResponse>;\n    getAbConfigValues(request: DeepPartial<GetAbConfigValuesRequest>, metadata?: grpc.Metadata): Promise<GetAbConfigValuesResponse>;\n    getConfigValuesByToken(request: DeepPartial<GetConfigValuesByTokenRequest>, metadata?: grpc.Metadata): Promise<GetConfigValuesByTokenResponse>;\n    getConfigResultsBySequenceIds(request: DeepPartial<GetConfigResultsBySequenceIdsRequest>, metadata?: grpc.Metadata): Promise<GetConfigResultsBySequenceIdsResponse>;\n    getCachedConfigResultSequenceIds(request: DeepPartial<GetCachedConfigResultSequenceIdsRequest>, metadata?: grpc.Metadata): Promise<GetCachedConfigResultSequenceIdsResponse>;\n    getBitmapByToken(request: DeepPartial<GetBitmapByTokenRequest>, metadata?: grpc.Metadata): Promise<GetBitmapByTokenResponse>;\n    generateConfigSet(request: DeepPartial<ConfigSetGenerationRequest>, metadata?: grpc.Metadata): Promise<ConfigSetGenerationResponse>;\n    pinConfigSet(request: DeepPartial<PinConfigRequest>, metadata?: grpc.Metadata): Promise<PinConfigResponse>;\n    unpinConfigSet(request: DeepPartial<UnpinConfigRequest>, metadata?: grpc.Metadata): Promise<UnpinConfigResponse>;\n    getUnevaluatedConfigResultsWithAbTargeting(request: DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingRequest>, metadata?: grpc.Metadata): Promise<GetUnevaluatedConfigResultsWithAbTargetingResponse>;\n    addRuidsForDebugging(request: DeepPartial<AddRuidsForDebuggingRequest>, metadata?: grpc.Metadata): Promise<AddRuidsForDebuggingResponse>;\n}\nexport class CircumstancesServiceClientImpl implements CircumstancesService {\n    private readonly rpc: Rpc;\n    constructor(rpc: Rpc) {\n        this.rpc = rpc;\n        this.targetingQuery = this.targetingQuery.bind(this);\n        this.getAbConfigValues = this.getAbConfigValues.bind(this);\n        this.getConfigValuesByToken = this.getConfigValuesByToken.bind(this);\n        this.getConfigResultsBySequenceIds = this.getConfigResultsBySequenceIds.bind(this);\n        this.getCachedConfigResultSequenceIds = this.getCachedConfigResultSequenceIds.bind(this);\n        this.getBitmapByToken = this.getBitmapByToken.bind(this);\n        this.generateConfigSet = this.generateConfigSet.bind(this);\n        this.pinConfigSet = this.pinConfigSet.bind(this);\n        this.unpinConfigSet = this.unpinConfigSet.bind(this);\n        this.getUnevaluatedConfigResultsWithAbTargeting = this.getUnevaluatedConfigResultsWithAbTargeting.bind(this);\n        this.addRuidsForDebugging = this.addRuidsForDebugging.bind(this);\n    }\n    targetingQuery(request: DeepPartial<ConfigTargetingRequest>, metadata?: grpc.Metadata): Promise<ConfigTargetingResponse> {\n        return this.rpc.unary(CircumstancesServicetargetingQueryDesc, ConfigTargetingRequest.fromPartial(request), metadata);\n    }\n    getAbConfigValues(request: DeepPartial<GetAbConfigValuesRequest>, metadata?: grpc.Metadata): Promise<GetAbConfigValuesResponse> {\n        return this.rpc.unary(CircumstancesServicegetAbConfigValuesDesc, GetAbConfigValuesRequest.fromPartial(request), metadata);\n    }\n    getConfigValuesByToken(request: DeepPartial<GetConfigValuesByTokenRequest>, metadata?: grpc.Metadata): Promise<GetConfigValuesByTokenResponse> {\n        return this.rpc.unary(CircumstancesServicegetConfigValuesByTokenDesc, GetConfigValuesByTokenRequest.fromPartial(request), metadata);\n    }\n    getConfigResultsBySequenceIds(request: DeepPartial<GetConfigResultsBySequenceIdsRequest>, metadata?: grpc.Metadata): Promise<GetConfigResultsBySequenceIdsResponse> {\n        return this.rpc.unary(CircumstancesServicegetConfigResultsBySequenceIdsDesc, GetConfigResultsBySequenceIdsRequest.fromPartial(request), metadata);\n    }\n    getCachedConfigResultSequenceIds(request: DeepPartial<GetCachedConfigResultSequenceIdsRequest>, metadata?: grpc.Metadata): Promise<GetCachedConfigResultSequenceIdsResponse> {\n        return this.rpc.unary(CircumstancesServicegetCachedConfigResultSequenceIdsDesc, GetCachedConfigResultSequenceIdsRequest.fromPartial(request), metadata);\n    }\n    getBitmapByToken(request: DeepPartial<GetBitmapByTokenRequest>, metadata?: grpc.Metadata): Promise<GetBitmapByTokenResponse> {\n        return this.rpc.unary(CircumstancesServicegetBitmapByTokenDesc, GetBitmapByTokenRequest.fromPartial(request), metadata);\n    }\n    generateConfigSet(request: DeepPartial<ConfigSetGenerationRequest>, metadata?: grpc.Metadata): Promise<ConfigSetGenerationResponse> {\n        return this.rpc.unary(CircumstancesServicegenerateConfigSetDesc, ConfigSetGenerationRequest.fromPartial(request), metadata);\n    }\n    pinConfigSet(request: DeepPartial<PinConfigRequest>, metadata?: grpc.Metadata): Promise<PinConfigResponse> {\n        return this.rpc.unary(CircumstancesServicepinConfigSetDesc, PinConfigRequest.fromPartial(request), metadata);\n    }\n    unpinConfigSet(request: DeepPartial<UnpinConfigRequest>, metadata?: grpc.Metadata): Promise<UnpinConfigResponse> {\n        return this.rpc.unary(CircumstancesServiceunpinConfigSetDesc, UnpinConfigRequest.fromPartial(request), metadata);\n    }\n    getUnevaluatedConfigResultsWithAbTargeting(request: DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingRequest>, metadata?: grpc.Metadata): Promise<GetUnevaluatedConfigResultsWithAbTargetingResponse> {\n        return this.rpc.unary(CircumstancesServicegetUnevaluatedConfigResultsWithAbTargetingDesc, GetUnevaluatedConfigResultsWithAbTargetingRequest.fromPartial(request), metadata);\n    }\n    addRuidsForDebugging(request: DeepPartial<AddRuidsForDebuggingRequest>, metadata?: grpc.Metadata): Promise<AddRuidsForDebuggingResponse> {\n        return this.rpc.unary(CircumstancesServiceaddRuidsForDebuggingDesc, AddRuidsForDebuggingRequest.fromPartial(request), metadata);\n    }\n}\nexport const CircumstancesServiceDesc = {\n    serviceName: \"snapchat.cdp.cof.CircumstancesService\",\n};\nexport const CircumstancesServicetargetingQueryDesc: UnaryMethodDefinitionish = {\n    methodName: \"targetingQuery\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return ConfigTargetingRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...ConfigTargetingResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetAbConfigValuesDesc: UnaryMethodDefinitionish = {\n    methodName: \"getAbConfigValues\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetAbConfigValuesRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetAbConfigValuesResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetConfigValuesByTokenDesc: UnaryMethodDefinitionish = {\n    methodName: \"getConfigValuesByToken\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetConfigValuesByTokenRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetConfigValuesByTokenResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetConfigResultsBySequenceIdsDesc: UnaryMethodDefinitionish = {\n    methodName: \"getConfigResultsBySequenceIds\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetConfigResultsBySequenceIdsRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetConfigResultsBySequenceIdsResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetCachedConfigResultSequenceIdsDesc: UnaryMethodDefinitionish = {\n    methodName: \"getCachedConfigResultSequenceIds\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetCachedConfigResultSequenceIdsRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetCachedConfigResultSequenceIdsResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetBitmapByTokenDesc: UnaryMethodDefinitionish = {\n    methodName: \"getBitmapByToken\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetBitmapByTokenRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetBitmapByTokenResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegenerateConfigSetDesc: UnaryMethodDefinitionish = {\n    methodName: \"generateConfigSet\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return ConfigSetGenerationRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...ConfigSetGenerationResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicepinConfigSetDesc: UnaryMethodDefinitionish = {\n    methodName: \"pinConfigSet\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return PinConfigRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...PinConfigResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServiceunpinConfigSetDesc: UnaryMethodDefinitionish = {\n    methodName: \"unpinConfigSet\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return UnpinConfigRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...UnpinConfigResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetUnevaluatedConfigResultsWithAbTargetingDesc: UnaryMethodDefinitionish = {\n    methodName: \"getUnevaluatedConfigResultsWithAbTargeting\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetUnevaluatedConfigResultsWithAbTargetingRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetUnevaluatedConfigResultsWithAbTargetingResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServiceaddRuidsForDebuggingDesc: UnaryMethodDefinitionish = {\n    methodName: \"addRuidsForDebugging\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return AddRuidsForDebuggingRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...AddRuidsForDebuggingResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\ninterface UnaryMethodDefinitionishR extends grpc.UnaryMethodDefinition<any, any> {\n    requestStream: any;\n    responseStream: any;\n}\ntype UnaryMethodDefinitionish = UnaryMethodDefinitionishR;\ninterface Rpc {\n    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, request: any, metadata: grpc.Metadata | undefined): Promise<any>;\n}\nexport class GrpcWebImpl {\n    private host: string;\n    private options: {\n        transport?: grpc.TransportFactory;\n        debug?: boolean;\n        metadata?: grpc.Metadata;\n    };\n    constructor(host: string, options: {\n        transport?: grpc.TransportFactory;\n        debug?: boolean;\n        metadata?: grpc.Metadata;\n    }) {\n        this.host = host;\n        this.options = options;\n    }\n    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, _request: any, metadata: grpc.Metadata | undefined): Promise<any> {\n        const request = { ..._request, ...methodDesc.requestType };\n        const maybeCombinedMetadata = metadata && this.options.metadata\n            ? new BrowserHeaders({ ...this.options?.metadata.headersMap, ...metadata?.headersMap })\n            : metadata || this.options.metadata;\n        return new Promise((resolve, reject) => {\n            grpc.unary(methodDesc, {\n                request,\n                host: this.host,\n                metadata: maybeCombinedMetadata,\n                transport: this.options.transport,\n                debug: this.options.debug,\n                onEnd: function (response) {\n                    if (response.status === grpc.Code.OK) {\n                        resolve(response.message);\n                    }\n                    else {\n                        const err = new Error(response.statusMessage) as any;\n                        err.code = response.status;\n                        err.metadata = response.trailers;\n                        reject(err);\n                    }\n                },\n            });\n        });\n    }\n}\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Namespace } from \"./namespace\";\nimport { BenchmarkResult } from \"./benchmark\";\nimport { Ruid } from \"../../common/ruid\";\nimport { BoolValue } from \"../../google/protobuf/wrappers\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport enum ConfigTargetingTriggerEventType {\n    UNKNOWN_EVENT_TYPE = 0,\n    COLD_START = 1,\n    WARM_START = 2,\n    FOREGROUND_TRIGGER = 3,\n    BACKGROUND_TRIGGER = 4,\n    UNRECOGNIZED = -1\n}\nexport enum ConfigTargetingAppState {\n    UNKNOWN_APP_STATE = 0,\n    FOREGROUND = 1,\n    BACKGROUND = 2,\n    UNRECOGNIZED = -1\n}\nexport enum ConfigTargetingInstrumentation {\n    DEFAULT_INSTRUMENTATION = 0,\n    USER_AUTHENTICATION = 1,\n    UNRECOGNIZED = -1\n}\nexport interface ConfigTargetingRequest {\n    configResultsEtag: string;\n    namespaces: Namespace[];\n    ghostId: string;\n    countryCode: string;\n    screenWidth: number;\n    screenHeight: number;\n    connectivity: Connectivity | undefined;\n    maxVideoWidthPx: number;\n    maxVideoHeightPx: number;\n    benchmarkResults: BenchmarkResult[];\n    deltaSync: boolean;\n    userAgent: string;\n    triggerEventType: ConfigTargetingTriggerEventType;\n    appState: ConfigTargetingAppState;\n    locale: string;\n    deviceId: string;\n    userId: string;\n    clientIp: string;\n    isUnAuthorized: boolean;\n    appLocale: string;\n    instrumentation: ConfigTargetingInstrumentation;\n    lastSuccessfulSync: number;\n    isLogout: boolean;\n    packageInstaller: string;\n    syncTriggerBlizzardSessionId: string;\n    syncExecutionBlizzardSessionId: string;\n    cofSyncTriggerDelayFromStartupMs: number;\n    cofSyncExecutionDelayFromStartupMs: number;\n    syncTriggerTime: number;\n    decoderEncoderAvailability: DecoderEncoderAvailablity | undefined;\n    snapkitAppId: string;\n    lenscoreVersion: number;\n    ruid: Ruid | undefined;\n    configNames: string[];\n    includeTestUserTreatments: boolean;\n    disableExposureLogging: boolean;\n    lensClusterOrig4: number;\n    clientId: string;\n}\nexport interface Connectivity {\n    networkType: Connectivity_NetworkType;\n    isMetered: boolean | undefined;\n    isRoaming: boolean | undefined;\n    carrier: string;\n}\nexport enum Connectivity_NetworkType {\n    UNKNOWN_NETWORK_TYPE = 0,\n    CELLULAR = 1,\n    WIFI = 2,\n    UNRECOGNIZED = -1\n}\nexport interface DecoderEncoderAvailablity {\n    isSnapVp9DecoderAvailable: boolean;\n    isSnapAv1DecoderAvailable: boolean;\n}\nfunction createBaseConfigTargetingRequest(): ConfigTargetingRequest {\n    return {\n        configResultsEtag: \"\",\n        namespaces: [],\n        ghostId: \"\",\n        countryCode: \"\",\n        screenWidth: 0,\n        screenHeight: 0,\n        connectivity: undefined,\n        maxVideoWidthPx: 0,\n        maxVideoHeightPx: 0,\n        benchmarkResults: [],\n        deltaSync: false,\n        userAgent: \"\",\n        triggerEventType: 0,\n        appState: 0,\n        locale: \"\",\n        deviceId: \"\",\n        userId: \"\",\n        clientIp: \"\",\n        isUnAuthorized: false,\n        appLocale: \"\",\n        instrumentation: 0,\n        lastSuccessfulSync: 0,\n        isLogout: false,\n        packageInstaller: \"\",\n        syncTriggerBlizzardSessionId: \"\",\n        syncExecutionBlizzardSessionId: \"\",\n        cofSyncTriggerDelayFromStartupMs: 0,\n        cofSyncExecutionDelayFromStartupMs: 0,\n        syncTriggerTime: 0,\n        decoderEncoderAvailability: undefined,\n        snapkitAppId: \"\",\n        lenscoreVersion: 0,\n        ruid: undefined,\n        configNames: [],\n        includeTestUserTreatments: false,\n        disableExposureLogging: false,\n        lensClusterOrig4: 0,\n        clientId: \"\",\n    };\n}\nexport const ConfigTargetingRequest = {\n    encode(message: ConfigTargetingRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configResultsEtag !== \"\") {\n            writer.uint32(10).string(message.configResultsEtag);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.namespaces) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.ghostId !== \"\") {\n            writer.uint32(26).string(message.ghostId);\n        }\n        if (message.countryCode !== \"\") {\n            writer.uint32(34).string(message.countryCode);\n        }\n        if (message.screenWidth !== 0) {\n            writer.uint32(40).int32(message.screenWidth);\n        }\n        if (message.screenHeight !== 0) {\n            writer.uint32(48).int32(message.screenHeight);\n        }\n        if (message.connectivity !== undefined) {\n            Connectivity.encode(message.connectivity, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.maxVideoWidthPx !== 0) {\n            writer.uint32(64).int32(message.maxVideoWidthPx);\n        }\n        if (message.maxVideoHeightPx !== 0) {\n            writer.uint32(72).int32(message.maxVideoHeightPx);\n        }\n        for (const v of message.benchmarkResults) {\n            BenchmarkResult.encode(v!, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.deltaSync === true) {\n            writer.uint32(88).bool(message.deltaSync);\n        }\n        if (message.userAgent !== \"\") {\n            writer.uint32(98).string(message.userAgent);\n        }\n        if (message.triggerEventType !== 0) {\n            writer.uint32(104).int32(message.triggerEventType);\n        }\n        if (message.appState !== 0) {\n            writer.uint32(112).int32(message.appState);\n        }\n        if (message.locale !== \"\") {\n            writer.uint32(122).string(message.locale);\n        }\n        if (message.deviceId !== \"\") {\n            writer.uint32(130).string(message.deviceId);\n        }\n        if (message.userId !== \"\") {\n            writer.uint32(138).string(message.userId);\n        }\n        if (message.clientIp !== \"\") {\n            writer.uint32(146).string(message.clientIp);\n        }\n        if (message.isUnAuthorized === true) {\n            writer.uint32(152).bool(message.isUnAuthorized);\n        }\n        if (message.appLocale !== \"\") {\n            writer.uint32(162).string(message.appLocale);\n        }\n        if (message.instrumentation !== 0) {\n            writer.uint32(168).int32(message.instrumentation);\n        }\n        if (message.lastSuccessfulSync !== 0) {\n            writer.uint32(176).int64(message.lastSuccessfulSync);\n        }\n        if (message.isLogout === true) {\n            writer.uint32(184).bool(message.isLogout);\n        }\n        if (message.packageInstaller !== \"\") {\n            writer.uint32(194).string(message.packageInstaller);\n        }\n        if (message.syncTriggerBlizzardSessionId !== \"\") {\n            writer.uint32(202).string(message.syncTriggerBlizzardSessionId);\n        }\n        if (message.syncExecutionBlizzardSessionId !== \"\") {\n            writer.uint32(210).string(message.syncExecutionBlizzardSessionId);\n        }\n        if (message.cofSyncTriggerDelayFromStartupMs !== 0) {\n            writer.uint32(216).int32(message.cofSyncTriggerDelayFromStartupMs);\n        }\n        if (message.cofSyncExecutionDelayFromStartupMs !== 0) {\n            writer.uint32(224).int32(message.cofSyncExecutionDelayFromStartupMs);\n        }\n        if (message.syncTriggerTime !== 0) {\n            writer.uint32(232).int64(message.syncTriggerTime);\n        }\n        if (message.decoderEncoderAvailability !== undefined) {\n            DecoderEncoderAvailablity.encode(message.decoderEncoderAvailability, writer.uint32(242).fork()).ldelim();\n        }\n        if (message.snapkitAppId !== \"\") {\n            writer.uint32(250).string(message.snapkitAppId);\n        }\n        if (message.lenscoreVersion !== 0) {\n            writer.uint32(256).int32(message.lenscoreVersion);\n        }\n        if (message.ruid !== undefined) {\n            Ruid.encode(message.ruid, writer.uint32(266).fork()).ldelim();\n        }\n        for (const v of message.configNames) {\n            writer.uint32(274).string(v!);\n        }\n        if (message.includeTestUserTreatments === true) {\n            writer.uint32(288).bool(message.includeTestUserTreatments);\n        }\n        if (message.disableExposureLogging === true) {\n            writer.uint32(296).bool(message.disableExposureLogging);\n        }\n        if (message.lensClusterOrig4 !== 0) {\n            writer.uint32(304).int32(message.lensClusterOrig4);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(314).string(message.clientId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigTargetingRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigTargetingRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResultsEtag = reader.string();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.namespaces.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.namespaces.push(reader.int32() as any);\n                    }\n                    break;\n                case 3:\n                    message.ghostId = reader.string();\n                    break;\n                case 4:\n                    message.countryCode = reader.string();\n                    break;\n                case 5:\n                    message.screenWidth = reader.int32();\n                    break;\n                case 6:\n                    message.screenHeight = reader.int32();\n                    break;\n                case 7:\n                    message.connectivity = Connectivity.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.maxVideoWidthPx = reader.int32();\n                    break;\n                case 9:\n                    message.maxVideoHeightPx = reader.int32();\n                    break;\n                case 10:\n                    message.benchmarkResults.push(BenchmarkResult.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    message.deltaSync = reader.bool();\n                    break;\n                case 12:\n                    message.userAgent = reader.string();\n                    break;\n                case 13:\n                    message.triggerEventType = reader.int32() as any;\n                    break;\n                case 14:\n                    message.appState = reader.int32() as any;\n                    break;\n                case 15:\n                    message.locale = reader.string();\n                    break;\n                case 16:\n                    message.deviceId = reader.string();\n                    break;\n                case 17:\n                    message.userId = reader.string();\n                    break;\n                case 18:\n                    message.clientIp = reader.string();\n                    break;\n                case 19:\n                    message.isUnAuthorized = reader.bool();\n                    break;\n                case 20:\n                    message.appLocale = reader.string();\n                    break;\n                case 21:\n                    message.instrumentation = reader.int32() as any;\n                    break;\n                case 22:\n                    message.lastSuccessfulSync = longToNumber(reader.int64() as Long);\n                    break;\n                case 23:\n                    message.isLogout = reader.bool();\n                    break;\n                case 24:\n                    message.packageInstaller = reader.string();\n                    break;\n                case 25:\n                    message.syncTriggerBlizzardSessionId = reader.string();\n                    break;\n                case 26:\n                    message.syncExecutionBlizzardSessionId = reader.string();\n                    break;\n                case 27:\n                    message.cofSyncTriggerDelayFromStartupMs = reader.int32();\n                    break;\n                case 28:\n                    message.cofSyncExecutionDelayFromStartupMs = reader.int32();\n                    break;\n                case 29:\n                    message.syncTriggerTime = longToNumber(reader.int64() as Long);\n                    break;\n                case 30:\n                    message.decoderEncoderAvailability = DecoderEncoderAvailablity.decode(reader, reader.uint32());\n                    break;\n                case 31:\n                    message.snapkitAppId = reader.string();\n                    break;\n                case 32:\n                    message.lenscoreVersion = reader.int32();\n                    break;\n                case 33:\n                    message.ruid = Ruid.decode(reader, reader.uint32());\n                    break;\n                case 34:\n                    message.configNames.push(reader.string());\n                    break;\n                case 36:\n                    message.includeTestUserTreatments = reader.bool();\n                    break;\n                case 37:\n                    message.disableExposureLogging = reader.bool();\n                    break;\n                case 38:\n                    message.lensClusterOrig4 = reader.int32();\n                    break;\n                case 39:\n                    message.clientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigTargetingRequest>, I>>(object: I): ConfigTargetingRequest {\n        const message = createBaseConfigTargetingRequest();\n        message.configResultsEtag = object.configResultsEtag ?? \"\";\n        message.namespaces = object.namespaces?.map((e) => e) || [];\n        message.ghostId = object.ghostId ?? \"\";\n        message.countryCode = object.countryCode ?? \"\";\n        message.screenWidth = object.screenWidth ?? 0;\n        message.screenHeight = object.screenHeight ?? 0;\n        message.connectivity =\n            object.connectivity !== undefined && object.connectivity !== null\n                ? Connectivity.fromPartial(object.connectivity)\n                : undefined;\n        message.maxVideoWidthPx = object.maxVideoWidthPx ?? 0;\n        message.maxVideoHeightPx = object.maxVideoHeightPx ?? 0;\n        message.benchmarkResults = object.benchmarkResults?.map((e) => BenchmarkResult.fromPartial(e)) || [];\n        message.deltaSync = object.deltaSync ?? false;\n        message.userAgent = object.userAgent ?? \"\";\n        message.triggerEventType = object.triggerEventType ?? 0;\n        message.appState = object.appState ?? 0;\n        message.locale = object.locale ?? \"\";\n        message.deviceId = object.deviceId ?? \"\";\n        message.userId = object.userId ?? \"\";\n        message.clientIp = object.clientIp ?? \"\";\n        message.isUnAuthorized = object.isUnAuthorized ?? false;\n        message.appLocale = object.appLocale ?? \"\";\n        message.instrumentation = object.instrumentation ?? 0;\n        message.lastSuccessfulSync = object.lastSuccessfulSync ?? 0;\n        message.isLogout = object.isLogout ?? false;\n        message.packageInstaller = object.packageInstaller ?? \"\";\n        message.syncTriggerBlizzardSessionId = object.syncTriggerBlizzardSessionId ?? \"\";\n        message.syncExecutionBlizzardSessionId = object.syncExecutionBlizzardSessionId ?? \"\";\n        message.cofSyncTriggerDelayFromStartupMs = object.cofSyncTriggerDelayFromStartupMs ?? 0;\n        message.cofSyncExecutionDelayFromStartupMs = object.cofSyncExecutionDelayFromStartupMs ?? 0;\n        message.syncTriggerTime = object.syncTriggerTime ?? 0;\n        message.decoderEncoderAvailability =\n            object.decoderEncoderAvailability !== undefined && object.decoderEncoderAvailability !== null\n                ? DecoderEncoderAvailablity.fromPartial(object.decoderEncoderAvailability)\n                : undefined;\n        message.snapkitAppId = object.snapkitAppId ?? \"\";\n        message.lenscoreVersion = object.lenscoreVersion ?? 0;\n        message.ruid = object.ruid !== undefined && object.ruid !== null ? Ruid.fromPartial(object.ruid) : undefined;\n        message.configNames = object.configNames?.map((e) => e) || [];\n        message.includeTestUserTreatments = object.includeTestUserTreatments ?? false;\n        message.disableExposureLogging = object.disableExposureLogging ?? false;\n        message.lensClusterOrig4 = object.lensClusterOrig4 ?? 0;\n        message.clientId = object.clientId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseConnectivity(): Connectivity {\n    return { networkType: 0, isMetered: undefined, isRoaming: undefined, carrier: \"\" };\n}\nexport const Connectivity = {\n    encode(message: Connectivity, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.networkType !== 0) {\n            writer.uint32(8).int32(message.networkType);\n        }\n        if (message.isMetered !== undefined) {\n            BoolValue.encode({ value: message.isMetered! }, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.isRoaming !== undefined) {\n            BoolValue.encode({ value: message.isRoaming! }, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.carrier !== \"\") {\n            writer.uint32(34).string(message.carrier);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Connectivity {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConnectivity();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.networkType = reader.int32() as any;\n                    break;\n                case 2:\n                    message.isMetered = BoolValue.decode(reader, reader.uint32()).value;\n                    break;\n                case 3:\n                    message.isRoaming = BoolValue.decode(reader, reader.uint32()).value;\n                    break;\n                case 4:\n                    message.carrier = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Connectivity>, I>>(object: I): Connectivity {\n        const message = createBaseConnectivity();\n        message.networkType = object.networkType ?? 0;\n        message.isMetered = object.isMetered ?? undefined;\n        message.isRoaming = object.isRoaming ?? undefined;\n        message.carrier = object.carrier ?? \"\";\n        return message;\n    },\n};\nfunction createBaseDecoderEncoderAvailablity(): DecoderEncoderAvailablity {\n    return { isSnapVp9DecoderAvailable: false, isSnapAv1DecoderAvailable: false };\n}\nexport const DecoderEncoderAvailablity = {\n    encode(message: DecoderEncoderAvailablity, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.isSnapVp9DecoderAvailable === true) {\n            writer.uint32(8).bool(message.isSnapVp9DecoderAvailable);\n        }\n        if (message.isSnapAv1DecoderAvailable === true) {\n            writer.uint32(16).bool(message.isSnapAv1DecoderAvailable);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): DecoderEncoderAvailablity {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDecoderEncoderAvailablity();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.isSnapVp9DecoderAvailable = reader.bool();\n                    break;\n                case 2:\n                    message.isSnapAv1DecoderAvailable = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<DecoderEncoderAvailablity>, I>>(object: I): DecoderEncoderAvailablity {\n        const message = createBaseDecoderEncoderAvailablity();\n        message.isSnapVp9DecoderAvailable = object.isSnapVp9DecoderAvailable ?? false;\n        message.isSnapAv1DecoderAvailable = object.isSnapAv1DecoderAvailable ?? false;\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { BenchmarkName } from \"./benchmark_name\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport interface BenchmarkValue {\n    intValue: number | undefined;\n    longValue: number | undefined;\n    boolValue: boolean | undefined;\n    floatValue: number | undefined;\n}\nexport interface BenchmarkRequest {\n    benchmarkNames: BenchmarkName[];\n    expirationTimestamp: Date | undefined;\n}\nexport interface BenchmarkResult {\n    name: BenchmarkName;\n    value: BenchmarkValue | undefined;\n}\nfunction createBaseBenchmarkValue(): BenchmarkValue {\n    return { intValue: undefined, longValue: undefined, boolValue: undefined, floatValue: undefined };\n}\nexport const BenchmarkValue = {\n    encode(message: BenchmarkValue, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.intValue !== undefined) {\n            writer.uint32(8).int32(message.intValue);\n        }\n        if (message.longValue !== undefined) {\n            writer.uint32(16).int64(message.longValue);\n        }\n        if (message.boolValue !== undefined) {\n            writer.uint32(24).bool(message.boolValue);\n        }\n        if (message.floatValue !== undefined) {\n            writer.uint32(37).float(message.floatValue);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BenchmarkValue {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBenchmarkValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.intValue = reader.int32();\n                    break;\n                case 2:\n                    message.longValue = longToNumber(reader.int64() as Long);\n                    break;\n                case 3:\n                    message.boolValue = reader.bool();\n                    break;\n                case 4:\n                    message.floatValue = reader.float();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<BenchmarkValue>, I>>(object: I): BenchmarkValue {\n        const message = createBaseBenchmarkValue();\n        message.intValue = object.intValue ?? undefined;\n        message.longValue = object.longValue ?? undefined;\n        message.boolValue = object.boolValue ?? undefined;\n        message.floatValue = object.floatValue ?? undefined;\n        return message;\n    },\n};\nfunction createBaseBenchmarkRequest(): BenchmarkRequest {\n    return { benchmarkNames: [], expirationTimestamp: undefined };\n}\nexport const BenchmarkRequest = {\n    encode(message: BenchmarkRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        writer.uint32(10).fork();\n        for (const v of message.benchmarkNames) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.expirationTimestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.expirationTimestamp), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BenchmarkRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBenchmarkRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.benchmarkNames.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.benchmarkNames.push(reader.int32() as any);\n                    }\n                    break;\n                case 2:\n                    message.expirationTimestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<BenchmarkRequest>, I>>(object: I): BenchmarkRequest {\n        const message = createBaseBenchmarkRequest();\n        message.benchmarkNames = object.benchmarkNames?.map((e) => e) || [];\n        message.expirationTimestamp = object.expirationTimestamp ?? undefined;\n        return message;\n    },\n};\nfunction createBaseBenchmarkResult(): BenchmarkResult {\n    return { name: 0, value: undefined };\n}\nexport const BenchmarkResult = {\n    encode(message: BenchmarkResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.name !== 0) {\n            writer.uint32(8).int32(message.name);\n        }\n        if (message.value !== undefined) {\n            BenchmarkValue.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BenchmarkResult {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBenchmarkResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.int32() as any;\n                    break;\n                case 2:\n                    message.value = BenchmarkValue.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<BenchmarkResult>, I>>(object: I): BenchmarkResult {\n        const message = createBaseBenchmarkResult();\n        message.name = object.name ?? 0;\n        message.value =\n            object.value !== undefined && object.value !== null ? BenchmarkValue.fromPartial(object.value) : undefined;\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction toTimestamp(date: Date): Timestamp {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t: Timestamp): Date {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nexport interface Timestamp {\n    seconds: number;\n    nanos: number;\n}\nfunction createBaseTimestamp(): Timestamp {\n    return { seconds: 0, nanos: 0 };\n}\nexport const Timestamp = {\n    encode(message: Timestamp, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Timestamp {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTimestamp();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64() as Long);\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Timestamp {\n        return {\n            seconds: isSet(object.seconds) ? Number(object.seconds) : 0,\n            nanos: isSet(object.nanos) ? Number(object.nanos) : 0,\n        };\n    },\n    toJSON(message: Timestamp): unknown {\n        const obj: any = {};\n        message.seconds !== undefined && (obj.seconds = Math.round(message.seconds));\n        message.nanos !== undefined && (obj.nanos = Math.round(message.nanos));\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Timestamp>, I>>(object: I): Timestamp {\n        const message = createBaseTimestamp();\n        message.seconds = object.seconds ?? 0;\n        message.nanos = object.nanos ?? 0;\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.common\";\nexport interface Ruid {\n    type: Ruid_Type;\n    stringValue: string;\n    loggingIdValue: string;\n}\nexport enum Ruid_Type {\n    UNSET = 0,\n    USER = 1,\n    DEVICE = 2,\n    WEB_CLIENT = 3,\n    AD_ACCOUNT = 4,\n    USERNAME = 5,\n    AD_MODERATION_AD = 6,\n    WEB_SNAPCHAT_USER = 7,\n    INTERNAL = 8,\n    AM_ORGANIZATION = 9,\n    AM_MEMBER = 10,\n    AM_SESSION = 11,\n    AM_PROFILE = 12,\n    AM_SNAPCHAT_USER = 13,\n    SNAPCHAT_ADVERTISING = 14,\n    AM_CLIENT = 15,\n    MISCHIEF = 16,\n    ARES_VISITOR = 17,\n    POD_NAME = 18,\n    UNRECOGNIZED = -1\n}\nfunction createBaseRuid(): Ruid {\n    return { type: 0, stringValue: \"\", loggingIdValue: \"\" };\n}\nexport const Ruid = {\n    encode(message: Ruid, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.stringValue !== \"\") {\n            writer.uint32(18).string(message.stringValue);\n        }\n        if (message.loggingIdValue !== \"\") {\n            writer.uint32(26).string(message.loggingIdValue);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Ruid {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRuid();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32() as any;\n                    break;\n                case 2:\n                    message.stringValue = reader.string();\n                    break;\n                case 3:\n                    message.loggingIdValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Ruid>, I>>(object: I): Ruid {\n        const message = createBaseRuid();\n        message.type = object.type ?? 0;\n        message.stringValue = object.stringValue ?? \"\";\n        message.loggingIdValue = object.loggingIdValue ?? \"\";\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { ConfigResult } from \"./config_result\";\nimport { BenchmarkRequest } from \"./benchmark\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport interface ConfigTargetingResponseDebugData {\n    abResultChecksumInput: string;\n}\nexport interface ConfigTargetingResponse {\n    configResults: ConfigResult[];\n    configResultsEtag: string;\n    benchmarkRequest: BenchmarkRequest | undefined;\n    fullResults: boolean;\n    abResultChecksum: number;\n    iso3166Alpha2CountryCodeFromRequestIp: string;\n    debugData: ConfigTargetingResponseDebugData | undefined;\n}\nfunction createBaseConfigTargetingResponseDebugData(): ConfigTargetingResponseDebugData {\n    return { abResultChecksumInput: \"\" };\n}\nexport const ConfigTargetingResponseDebugData = {\n    encode(message: ConfigTargetingResponseDebugData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.abResultChecksumInput !== \"\") {\n            writer.uint32(10).string(message.abResultChecksumInput);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigTargetingResponseDebugData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigTargetingResponseDebugData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.abResultChecksumInput = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigTargetingResponseDebugData>, I>>(object: I): ConfigTargetingResponseDebugData {\n        const message = createBaseConfigTargetingResponseDebugData();\n        message.abResultChecksumInput = object.abResultChecksumInput ?? \"\";\n        return message;\n    },\n};\nfunction createBaseConfigTargetingResponse(): ConfigTargetingResponse {\n    return {\n        configResults: [],\n        configResultsEtag: \"\",\n        benchmarkRequest: undefined,\n        fullResults: false,\n        abResultChecksum: 0,\n        iso3166Alpha2CountryCodeFromRequestIp: \"\",\n        debugData: undefined,\n    };\n}\nexport const ConfigTargetingResponse = {\n    encode(message: ConfigTargetingResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.configResultsEtag !== \"\") {\n            writer.uint32(18).string(message.configResultsEtag);\n        }\n        if (message.benchmarkRequest !== undefined) {\n            BenchmarkRequest.encode(message.benchmarkRequest, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.fullResults === true) {\n            writer.uint32(32).bool(message.fullResults);\n        }\n        if (message.abResultChecksum !== 0) {\n            writer.uint32(40).int32(message.abResultChecksum);\n        }\n        if (message.iso3166Alpha2CountryCodeFromRequestIp !== \"\") {\n            writer.uint32(50).string(message.iso3166Alpha2CountryCodeFromRequestIp);\n        }\n        if (message.debugData !== undefined) {\n            ConfigTargetingResponseDebugData.encode(message.debugData, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigTargetingResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigTargetingResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.configResultsEtag = reader.string();\n                    break;\n                case 3:\n                    message.benchmarkRequest = BenchmarkRequest.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.fullResults = reader.bool();\n                    break;\n                case 5:\n                    message.abResultChecksum = reader.int32();\n                    break;\n                case 6:\n                    message.iso3166Alpha2CountryCodeFromRequestIp = reader.string();\n                    break;\n                case 7:\n                    message.debugData = ConfigTargetingResponseDebugData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigTargetingResponse>, I>>(object: I): ConfigTargetingResponse {\n        const message = createBaseConfigTargetingResponse();\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        message.configResultsEtag = object.configResultsEtag ?? \"\";\n        message.benchmarkRequest =\n            object.benchmarkRequest !== undefined && object.benchmarkRequest !== null\n                ? BenchmarkRequest.fromPartial(object.benchmarkRequest)\n                : undefined;\n        message.fullResults = object.fullResults ?? false;\n        message.abResultChecksum = object.abResultChecksum ?? 0;\n        message.iso3166Alpha2CountryCodeFromRequestIp = object.iso3166Alpha2CountryCodeFromRequestIp ?? \"\";\n        message.debugData =\n            object.debugData !== undefined && object.debugData !== null\n                ? ConfigTargetingResponseDebugData.fromPartial(object.debugData)\n                : undefined;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Namespace } from \"./namespace\";\nimport { Ruid_Type } from \"../../common/ruid\";\nimport { Value } from \"../../common/value\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport interface ConfigResult {\n    configId: string;\n    value: Value | undefined;\n    targetingExpression: ClientTargetingExpression | undefined;\n    ttlSeconds: number;\n    configRuleUuidBytes: Uint8Array;\n    priority: number;\n    namespace: Namespace;\n    studyName: string;\n    experimentId: number;\n    delete: boolean;\n    servePlatforms: ConfigResult_ServePlatform[];\n    sequenceId: number;\n    ruidType: Ruid_Type;\n    segmentOrdinal: number;\n    generatedFromAbAllowlists: boolean;\n    internalFields: ConfigResult_InternalFields | undefined;\n}\nexport enum ConfigResult_ServePlatform {\n    UNKNOWN_CONTEXT_PLATFORM = 0,\n    IOS_PLATFORM = 1,\n    ANDROID_PLATFORM = 2,\n    SERVER_PLATFORM = 3,\n    UNRECOGNIZED = -1\n}\nexport interface ConfigResult_InternalFields {\n    configBitmapIndex: number;\n    configResultBitmapIndex: number;\n    hasServerPropertiesOnly: boolean;\n    globalPriority: number;\n    sequenceIds: ConfigResult_InternalFields_SequenceIdCandidate[];\n    studySegmentOrdinal: number;\n    experimentGuid: number;\n    isAbStudyStatusCompleted: boolean;\n}\nexport interface ConfigResult_InternalFields_SequenceIdCandidate {\n    targetingExpression: ClientTargetingExpression | undefined;\n    sequenceId: number;\n}\nexport interface ConfigResultBundle {\n    etag: string;\n    configResults: ConfigResult[];\n}\nexport interface SequenceIdCandidate {\n    targetingExpression: ClientTargetingExpression | undefined;\n    sequenceId: number;\n}\nexport interface ClientTargetingExpression {\n    operator: ClientTargetingExpression_Operator;\n    children: ClientTargetingExpression[];\n    property: ClientTargetingExpression_Property;\n    predicateOperator: ClientTargetingExpression_PredicateOperator;\n    value: Value | undefined;\n    propertyMetadata: ClientTargetingExpression_PropertyMetadata | undefined;\n}\nexport enum ClientTargetingExpression_Operator {\n    UNKNOWN_OPERATOR = 0,\n    AND = 1,\n    OR = 2,\n    UNRECOGNIZED = -1\n}\nexport enum ClientTargetingExpression_PredicateOperator {\n    UNKNOWN_PREDICATE_OPERATOR = 0,\n    EQUAL = 1,\n    NOT_EQUAL = 2,\n    GREATER_THAN_OR_EQUAL_TO = 3,\n    LESS_THAN_OR_EQUAL_TO = 4,\n    UNRECOGNIZED = -1\n}\nexport enum ClientTargetingExpression_Property {\n    UNKNOWN_PROPERTY = 0,\n    BATTERY_LEVEL = 1,\n    IS_OFFLINE = 2,\n    IS_CHARGING = 3,\n    BANDWIDTH = 4,\n    DISK_SIZE = 5,\n    DISK_AVAILABLE = 6,\n    MEDIA_TYPE_DEPRECATED = 7,\n    IS_PUBLIC_STORY = 8,\n    IS_OFFICIAL_STORY = 9,\n    CAMERA_DIRECTION = 10,\n    CAMERA_CONTEXT = 11,\n    CAMERA_API = 12,\n    CAMERA_FLASH_STATE = 13,\n    SNAP_SOURCE = 14,\n    LEGACY_MUSHROOM_CONTENT_TYPE = 15,\n    UPLOAD_BANDWIDTH = 16,\n    CAMERA2_LEVEL = 17,\n    CAMERA_NIGHT_MODE_STATE = 18,\n    USER_LANGUAGE = 19,\n    VIDEO_DURATION = 20,\n    REALTIME_MOBILE_NETWORK_GENERATION = 21,\n    REALTIME_NETWORK_TYPE = 22,\n    REALTIME_NETWORK_IS_METERED = 23,\n    REALTIME_NETWORK_IS_ROAMING = 24,\n    CAMERA_IS_FIRST_CAPTURE = 25,\n    PICTURE_MODE = 26,\n    BOLT_USE_CASE = 27,\n    BOLT_CDN_EXPERIMENTATION_ID = 28,\n    MINS_SINCE_LAST_LENS_ACTIVATION = 29,\n    MINS_SINCE_LAST_SNAPPABLE_LENS_ACTIVATION = 30,\n    DAYS_SINCE_LAST_LOGIN_OR_OPEN = 31,\n    SPECTACLES_VERSION = 32,\n    STICKY_MAX_CONNECTION_TYPE = 33,\n    WITH_ANIMATED_OVERLAY = 34,\n    ESTIMATED_DURATION_FOR_EVENT_MS = 35,\n    URL = 36,\n    MEDIA_SOURCE = 37,\n    ASSET_TYPE = 38,\n    BOLT_IS_CONTENT_POPULAR = 39,\n    CAPTURE_MODE = 40,\n    VP9_SOFTWARE_DECODING_SUPPORTED = 41,\n    AV1_SOFTWARE_DECODING_SUPPORTED = 42,\n    WITH_MUSIC = 43,\n    FEATURE_PROVIDED_SIZE = 44,\n    MEDIA_TYPE = 45,\n    SCANNED_CATEGORY_IDS = 46,\n    CONTENT_VIEW_SOURCE = 47,\n    RECIPIENTS_SUPPORT_HEVC = 48,\n    COGNAC_APP_ID = 49,\n    EMAIL_VERIFIED = 50,\n    PHONE_VERIFIED = 51,\n    NOTIFICATION_PERM_GRANTED = 52,\n    CONTACT_PERM_GRANTED = 53,\n    MUTUAL_FRIENDS_COUNT = 54,\n    GROUPS_COUNT = 55,\n    HAS_NON_TEAM_SNAPCHAT_CONVERSATIONS = 56,\n    PLAYBACK_ITEM_TYPE = 57,\n    SUP_BOOLEAN_PROPERTY = 58,\n    SUP_INTEGER_PROPERTY = 59,\n    SUP_LONG_PROPERTY = 60,\n    SUP_STRING_PROPERTY = 61,\n    SUP_DOUBLE_PROPERTY = 62,\n    SUP_MILLIS_PROPERTY_TO_NOW = 63,\n    HAS_USED_SPECTACLES = 64,\n    SUP_SECS_PROPERTY_TO_NOW = 65,\n    BOLT_CLIENT_APP_STATE = 66,\n    EMAIL_SET = 67,\n    BITMOJI_SET = 68,\n    QUICK_TAP_CAMERA_SUPPORTED_ENABLED = 69,\n    HAS_ADD_FRIENDS_REQUEST = 70,\n    APP_LAUNCH_FROM_PUSH = 71,\n    APP_LAUNCH_TYPE = 72,\n    BILLBOARD_CAMPAIGN_LOCAL_IMPRESSION_COUNT = 73,\n    BILLBOARD_CAMPAIGN_LOCAL_LAST_IMPRESSION_TIME_SECS_TO_NOW = 74,\n    BILLBOARD_CAMPAIGN_LOCAL_CONTINUOUS_DISMISS_COUNT = 75,\n    FST_NUM_IN_APP_WARNINGS = 76,\n    FST_SHOULD_CHANGE_PASSWORD = 77,\n    FST_IS_BACKGROUND_CHECK = 78,\n    AUDIO_RECORD_PERM_GRANTED = 79,\n    MUTUAL_FRIENDS_WITH_BIRTHDAY_COUNT = 80,\n    BILLBOARD_CAMPAIGN_LOCAL_DISMISS_COUNT = 81,\n    USE_VERTICAL_NAVIGATION = 82,\n    FREEABLE_DISK_AVAILABLE = 83,\n    MEMORIES_COUNT = 84,\n    DEVICE_MODEL = 85,\n    COUNTRY = 86,\n    OS = 87,\n    OS_VERSION = 88,\n    APP_VERSION = 89,\n    BUILD_FLAVOR = 90,\n    USER_ID = 91,\n    LOCALE = 92,\n    DEVICE_CLUSTER = 93,\n    DEVICE_BRAND = 94,\n    IS_EMPLOYEE = 95,\n    USERNAME = 96,\n    IS_TEST_USER = 97,\n    USER_PROFILE = 98,\n    SCREEN_WIDTH = 99,\n    SCREEN_HEIGHT = 100,\n    HEVC_SUPPORT = 101,\n    NETWORK_TYPE = 102,\n    MAX_VIDEO_WIDTH = 103,\n    MAX_VIDEO_HEIGHT = 104,\n    IS_NETWORK_METERED = 105,\n    IS_ROAMING = 106,\n    APP_ENGAGEMENT_LEVEL = 107,\n    COMMUNICATION_ENGAGEMENT_LEVEL = 108,\n    FRIEND_STORY_ENGAGEMENT_LEVEL = 109,\n    PUBLIC_USER_STORY_ENGAGEMENT_LEVEL = 110,\n    PUBLISHER_STORY_ENGAGEMENT_LEVEL = 111,\n    LENS_ENGAGEMENT_LEVEL = 112,\n    NON_FRIEND_STORY_ENGAGEMENT_LEVEL = 113,\n    FOLLOWER_SIZE_LEVEL = 114,\n    DAYS_SINCE_CREATION = 115,\n    USER_PERSONA = 116,\n    USER_CREATION_TIME = 117,\n    MOBILE_NETWORK_TYPE = 118,\n    AGGREGATED_USER_BANDWIDTH = 119,\n    LENS_CLUSTER_BIASED = 120,\n    LENS_CLUSTER_LOG = 121,\n    LENS_CLUSTER_ORIG = 122,\n    LENS_CLUSTER_ORIG_4 = 123,\n    LENS_CLUSTER_BIASED_LOG = 124,\n    APP_LOCALE = 125,\n    DEVICE_COMMON_NAME = 126,\n    USER_FRIEND_COUNT = 127,\n    L90_COUNTRY = 128,\n    STUB = 129,\n    IS_TRUE = 130,\n    STORY_POST_RATIO = 131,\n    GENDER = 132,\n    INFERRED_AGE_BUCKET = 133,\n    STORIES = 134,\n    SENDS = 135,\n    SNAP_CREATE_L7 = 136,\n    STORY_POST_L7 = 137,\n    COMMUNICATION_L7 = 138,\n    DF_L7 = 139,\n    APP_L7 = 140,\n    DAYS_SINCE_CREATION_BUCKET = 141,\n    BIDIRECTIONAL_FRIEND_STATUS = 142,\n    STORY_POST_PREDICTION = 143,\n    APP_OPENS = 144,\n    LENS_SWIPES = 145,\n    LENS_SNAPS = 146,\n    LENS_OPS = 147,\n    W1_APP_OPENS = 148,\n    W1_LENS_SWIPES = 149,\n    W1_LENS_SNAPS = 150,\n    W1_LENS_OPS = 151,\n    W2_APP_OPENS = 152,\n    W2_LENS_SWIPES = 153,\n    W2_LENS_SNAPS = 154,\n    W2_LENS_OPS = 155,\n    W34_APP_OPENS = 156,\n    W34_LENS_SWIPES = 157,\n    W34_LENS_SNAPS = 158,\n    W34_LENS_OPS = 159,\n    LENS_SWIPES_PREDICTION = 160,\n    REGISTRATION_COUNTRY = 161,\n    IP_ASN = 162,\n    IP_REGION = 163,\n    IP_CITY = 164,\n    HAS_USER_ID = 165,\n    HAS_BITMOJI = 166,\n    NUM_APP_OPENS_LAST_8_DAYS = 167,\n    NUM_FEATURE_STORY_VIEW_DAYS_L7 = 168,\n    NUM_FEATURE_STORY_SYNC_DAYS_L7 = 169,\n    HEXAGON_NN_SUPPORTED_VERSION = 170,\n    NETWORK_QUALITY = 171,\n    DEVICE_MEMORY_MB = 172,\n    DEVICE_GL_VERSION = 173,\n    SNAP_PRO_STATUS = 174,\n    DEVICE_VP9_DECODING_SUPPORT = 175,\n    AVG_FRIEND_STORY_VIEW_COUNT_L7 = 176,\n    GAME_JOIN_TIME = 177,\n    GAME_LAST_ACTIVE_TIME = 178,\n    DAYS_SINCE_FIRST_GAME_ACTIVITY = 179,\n    DAYS_SINCE_LAST_GAME_ACTIVITY = 180,\n    PF_PAGE_SESSIONS_WITH_LONG_IMP = 181,\n    WIRELESS_CARRIER = 182,\n    MINIS_JOIN_TIME = 183,\n    MINIS_LAST_ACTIVE_TIME = 184,\n    DAYS_SINCE_FIRST_MINIS_ACTIVITY = 185,\n    DAYS_SINCE_LAST_MINIS_ACTIVITY = 186,\n    DEVICE_AV1_DECODING_SUPPORT = 187,\n    APP_PACKAGE_INSTALLER = 188,\n    STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL = 189,\n    REPORTED_AGE = 190,\n    ANDROID_MOBILE_SERVICES_PROVIDER = 191,\n    IS_ACQUIRED_USER = 192,\n    YDPI = 193,\n    BIDIRECTIONAL_FRIEND_STATUS_VELLUM = 194,\n    ORIGIN = 195,\n    LENSCORE_VERSION = 196,\n    SNAPKIT_APP_ID = 197,\n    GPU = 198,\n    CHIPSET_NAME = 199,\n    CHIPSET_VERSION = 200,\n    HAS_ZERO_IDFA = 201,\n    LIMIT_AD_TRACKING = 202,\n    ATT_AUTH_STATUS = 203,\n    CAMERA2_FRONT_SS_GAIN_OVER_TPA = 204,\n    ATTACHMENT_TOOL_V2 = 205,\n    USER_PERSONA_V3 = 206,\n    SNAPS_SEND_WITH_HEVC = 207,\n    SNAPS_SEND_WITHOUT_HEVC = 208,\n    CAMERA2_NATIVE_CRASH_OVER_CAMERA1 = 209,\n    CAMERA2_G2S_LATENCY_OVER_CAMERA1 = 210,\n    IS_INTERNAL = 211,\n    IS_WEB = 212,\n    APP_OPEN_TO_MAP = 213,\n    APP_OPEN_TO_FRIENDSFEED = 214,\n    APP_OPEN_TO_LENSES = 215,\n    APP_OPEN_TO_MEMORIES = 216,\n    APP_OPEN_TO_COMMUNITY = 217,\n    APP_OPEN_TO_SPOTLIGHT = 218,\n    IS_IMPACTED_BY_PINC_893 = 219,\n    DAYS_BEFORE_BIRTHDAY = 220,\n    HAS_BIPA = 221,\n    SPOTLIGHT_STORY_ENGAGEMENT_STATUS = 222,\n    INCLUSION_PANEL_MEMBER = 223,\n    HEVC_HW_DECODER = 224,\n    HEVC_SW_DECODER = 225,\n    HASH_MURMUR3_128_MOD_100 = 226,\n    HAS_ACTIVE_SNAPCHAT_PLUS = 227,\n    SNAP_KIT_OAUTH_ID = 228,\n    ORGANIZATION_TYPE = 229,\n    CHUNK_UPLOAD_SUPPORT_REQUIRED = 230,\n    CLOUDFRONT_POP = 231,\n    BILLBOARD_CAMPAIGN_LOCAL_FIRST_IMPRESSION_TIME_SECS_TO_NOW = 232,\n    BILLBOARD_CAMPAIGN_LOCAL_CLICK_COUNT = 233,\n    BILLBOARD_CAMPAIGN_LOCAL_INTERACTION_COUNT = 234,\n    BILLBOARD_CAMPAIGN_LOCAL_LAST_INTERACTION_TIME_SECS_TO_NOW = 235,\n    FST_LOCK_SCREEN_WIDGET_BILLBOARD_LAUNCHED_FROM_PUSH = 236,\n    WEB_SCREEN_WIDTH = 237,\n    WEB_SCREEN_HEIGHT = 238,\n    SUP_IOS_LOCK_SCREEN_WIDGET_ENABLED = 239,\n    SNAP_PRIVACY = 240,\n    ADS_INTERFACES_IS_NEW_ORGANIZATION = 241,\n    SERVER_ONLY = 242,\n    GHE_ORGANIZATION = 243,\n    GHE_REPOSITORY = 244,\n    GHE_USER_EMAIL = 245,\n    BUILD_DEFINITION_ID = 246,\n    BUILD_DEFINITION_NAME = 247,\n    LCA_PRINCIPAL = 248,\n    MEDIA_PERFORMANCE_CLASS = 249,\n    COMMUNITY_COUNT = 250,\n    RECIPIENTS_SUPPORT_FMP4 = 251,\n    SCREEN_ASPECT_RATIO = 252,\n    USER_GROUP = 253,\n    USER_HAS_DENIED_CAMERA_PERM = 254,\n    CAMEOS_ENGAGEMENT_LEVEL = 255,\n    HAS_CAMEOS = 256,\n    IS_ACTIVE_LENS_VIDEO_CHAT_USER = 257,\n    NUM_SPOTLIGHT_POSTS_L7 = 258,\n    NUM_MAP_POSTS_L7 = 259,\n    HAS_CREATED_PUBLIC_PROFILE = 260,\n    HAS_PUBLIC_PROFILE_ACCESS_VIA_ROLE = 261,\n    DAYS_SINCE_LAST_CAMERA_PERM_DENY = 262,\n    DAYS_SINCE_AD_ORG_JOIN = 263,\n    DAYS_SINCE_FIRST_AD_CREATE = 264,\n    ORGANIZATION_COUNTRY = 265,\n    DAYS_SINCE_FIRST_DWEB_VISIT = 266,\n    DAYS_SINCE_LAST_DWEB_VISIT = 267,\n    WEEKS_SINCE_USING_DWEB = 268,\n    HAS_LENS = 269,\n    BILLBOARD_SERVER_IMPRESSION_COUNT = 270,\n    BILLBOARD_SERVER_CLICK_COUNT = 271,\n    BILLBOARD_SERVER_DISMISS_COUNT = 272,\n    BILLBOARD_SERVER_INTERACTION_COUNT = 273,\n    BILLBOARD_SERVER_FIRST_IMPRESSION_TIME_SECS_TO_NOW = 274,\n    BILLBOARD_SERVER_LAST_IMPRESSION_TIME_SECS_TO_NOW = 275,\n    BILLBOARD_SERVER_FIRST_CLICK_TIME_SECS_TO_NOW = 276,\n    BILLBOARD_SERVER_LAST_CLICK_TIME_SECS_TO_NOW = 277,\n    BILLBOARD_SERVER_FIRST_DISMISS_TIME_SECS_TO_NOW = 278,\n    BILLBOARD_SERVER_LAST_DISMISS_TIME_SECS_TO_NOW = 279,\n    BILLBOARD_SERVER_FIRST_INTERACTION_TIME_SECS_TO_NOW = 280,\n    BILLBOARD_SERVER_LAST_INTERACTION_TIME_SECS_TO_NOW = 281,\n    BILLBOARD_SERVER_CONTINUOUS_DISMISS_COUNT = 282,\n    BILLBOARD_CAMPAIGN_LOCAL_FIRST_CLICK_TIME_SECS_TO_NOW = 283,\n    BILLBOARD_CAMPAIGN_LOCAL_LAST_CLICK_TIME_SECS_TO_NOW = 284,\n    BILLBOARD_CAMPAIGN_LOCAL_FIRST_DISMISS_TIME_SECS_TO_NOW = 285,\n    BILLBOARD_CAMPAIGN_LOCAL_LAST_DISMISS_TIME_SECS_TO_NOW = 286,\n    BILLBOARD_CAMPAIGN_LOCAL_FIRST_INTERACTION_TIME_SECS_TO_NOW = 287,\n    DAYS_SINCE_FIRST_AD_SPEND = 288,\n    DAYS_SINCE_LAST_AD_SPEND = 289,\n    SPOTLIGHT_2_PLUS_STORY_SESSION_7D_STATUS_DETAILED = 290,\n    SPOTLIGHT_5_PLUS_STORY_SESSION_7D_STATUS_DETAILED = 291,\n    SPOTLIGHT_STORY_VIEW_7D_STATUS_DETAILED = 292,\n    LAST_USER_ACCEPTED_TOS = 293,\n    UPDATED_DEVICE_CLUSTER = 294,\n    CREATOR_TIER = 295,\n    AV1_SW_DECODER = 296,\n    AV1_HW_DECODER = 297,\n    HAS_EXPLICIT_PUBLIC_PROFILE = 298,\n    LARGER_TEXT_DISPLAY_OPTION_ENABLED = 299,\n    IS_PUBLIC_POSTING_PREFERRED_USER = 300,\n    RUID = 301,\n    MUTABLE_USERNAME = 302,\n    BUDGET_GROUP_ID = 303,\n    AB_POPULATION_RANGE_HASH_FUNC = 304,\n    AB_TREATMENT_RANGE_HASH_FUNC = 305,\n    REGISTRATION_IP_REGION = 306,\n    RUID_TYPE = 307,\n    PLUS_INTERNAL_ONLY = 308,\n    COF_ROLLOUT_RANGE_HASH_FUNC = 309,\n    HAS_AI_SELFIE = 341,\n    HAS_DREAMS = 342,\n    DAYS_SINCE_LAST_ACTIVITY = 343,\n    CONTACT_PERM_OS_GRANTED = 344,\n    CONTACT_PERM_USER_GRANTED = 345,\n    LENS_CLUSTER_GPU_V2 = 346,\n    CAN_ACCESS_ADS_TAB = 347,\n    GOOGLE_CDN_POP = 348,\n    NUM_STRONG_RELATIONSHIPS_V3 = 349,\n    NUM_CLOSE_PLUS_RELATIONSHIPS_V3 = 350,\n    NUM_ACQUAINTANCE_PLUS_RELATIONSHIPS_V3 = 351,\n    UNRECOGNIZED = -1\n}\nexport interface ClientTargetingExpression_PropertyMetadata {\n    itemId: number;\n    signalToHash: ClientTargetingExpression_PropertyMetadata_SignalToHash;\n    abNamespaceForHashing: string;\n    abSeedForHashing: string;\n    ruidType: Ruid_Type | undefined;\n    cofRolloutSeedForHashing: string;\n}\nexport enum ClientTargetingExpression_PropertyMetadata_SignalToHash {\n    UNKNOWN_SIGNAL_TO_HASH = 0,\n    HASH_SEED_AND_USER_ID = 1,\n    HASH_USER_ID_AND_NAMESPACE = 2,\n    UNRECOGNIZED = -1\n}\nfunction createBaseConfigResult(): ConfigResult {\n    return {\n        configId: \"\",\n        value: undefined,\n        targetingExpression: undefined,\n        ttlSeconds: 0,\n        configRuleUuidBytes: new Uint8Array(),\n        priority: 0,\n        namespace: 0,\n        studyName: \"\",\n        experimentId: 0,\n        delete: false,\n        servePlatforms: [],\n        sequenceId: 0,\n        ruidType: 0,\n        segmentOrdinal: 0,\n        generatedFromAbAllowlists: false,\n        internalFields: undefined,\n    };\n}\nexport const ConfigResult = {\n    encode(message: ConfigResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configId !== \"\") {\n            writer.uint32(10).string(message.configId);\n        }\n        if (message.value !== undefined) {\n            Value.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.targetingExpression !== undefined) {\n            ClientTargetingExpression.encode(message.targetingExpression, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.ttlSeconds !== 0) {\n            writer.uint32(32).int64(message.ttlSeconds);\n        }\n        if (message.configRuleUuidBytes.length !== 0) {\n            writer.uint32(42).bytes(message.configRuleUuidBytes);\n        }\n        if (message.priority !== 0) {\n            writer.uint32(48).int32(message.priority);\n        }\n        if (message.namespace !== 0) {\n            writer.uint32(56).int32(message.namespace);\n        }\n        if (message.studyName !== \"\") {\n            writer.uint32(66).string(message.studyName);\n        }\n        if (message.experimentId !== 0) {\n            writer.uint32(72).int32(message.experimentId);\n        }\n        if (message.delete === true) {\n            writer.uint32(80).bool(message.delete);\n        }\n        writer.uint32(90).fork();\n        for (const v of message.servePlatforms) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.sequenceId !== 0) {\n            writer.uint32(96).int32(message.sequenceId);\n        }\n        if (message.ruidType !== 0) {\n            writer.uint32(104).int32(message.ruidType);\n        }\n        if (message.segmentOrdinal !== 0) {\n            writer.uint32(112).int32(message.segmentOrdinal);\n        }\n        if (message.generatedFromAbAllowlists === true) {\n            writer.uint32(120).bool(message.generatedFromAbAllowlists);\n        }\n        if (message.internalFields !== undefined) {\n            ConfigResult_InternalFields.encode(message.internalFields, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResult {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configId = reader.string();\n                    break;\n                case 2:\n                    message.value = Value.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.targetingExpression = ClientTargetingExpression.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.ttlSeconds = longToNumber(reader.int64() as Long);\n                    break;\n                case 5:\n                    message.configRuleUuidBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.priority = reader.int32();\n                    break;\n                case 7:\n                    message.namespace = reader.int32() as any;\n                    break;\n                case 8:\n                    message.studyName = reader.string();\n                    break;\n                case 9:\n                    message.experimentId = reader.int32();\n                    break;\n                case 10:\n                    message.delete = reader.bool();\n                    break;\n                case 11:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.servePlatforms.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.servePlatforms.push(reader.int32() as any);\n                    }\n                    break;\n                case 12:\n                    message.sequenceId = reader.int32();\n                    break;\n                case 13:\n                    message.ruidType = reader.int32() as any;\n                    break;\n                case 14:\n                    message.segmentOrdinal = reader.int32();\n                    break;\n                case 15:\n                    message.generatedFromAbAllowlists = reader.bool();\n                    break;\n                case 16:\n                    message.internalFields = ConfigResult_InternalFields.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigResult>, I>>(object: I): ConfigResult {\n        const message = createBaseConfigResult();\n        message.configId = object.configId ?? \"\";\n        message.value = object.value !== undefined && object.value !== null ? Value.fromPartial(object.value) : undefined;\n        message.targetingExpression =\n            object.targetingExpression !== undefined && object.targetingExpression !== null\n                ? ClientTargetingExpression.fromPartial(object.targetingExpression)\n                : undefined;\n        message.ttlSeconds = object.ttlSeconds ?? 0;\n        message.configRuleUuidBytes = object.configRuleUuidBytes ?? new Uint8Array();\n        message.priority = object.priority ?? 0;\n        message.namespace = object.namespace ?? 0;\n        message.studyName = object.studyName ?? \"\";\n        message.experimentId = object.experimentId ?? 0;\n        message.delete = object.delete ?? false;\n        message.servePlatforms = object.servePlatforms?.map((e) => e) || [];\n        message.sequenceId = object.sequenceId ?? 0;\n        message.ruidType = object.ruidType ?? 0;\n        message.segmentOrdinal = object.segmentOrdinal ?? 0;\n        message.generatedFromAbAllowlists = object.generatedFromAbAllowlists ?? false;\n        message.internalFields =\n            object.internalFields !== undefined && object.internalFields !== null\n                ? ConfigResult_InternalFields.fromPartial(object.internalFields)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseConfigResult_InternalFields(): ConfigResult_InternalFields {\n    return {\n        configBitmapIndex: 0,\n        configResultBitmapIndex: 0,\n        hasServerPropertiesOnly: false,\n        globalPriority: 0,\n        sequenceIds: [],\n        studySegmentOrdinal: 0,\n        experimentGuid: 0,\n        isAbStudyStatusCompleted: false,\n    };\n}\nexport const ConfigResult_InternalFields = {\n    encode(message: ConfigResult_InternalFields, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configBitmapIndex !== 0) {\n            writer.uint32(8).int32(message.configBitmapIndex);\n        }\n        if (message.configResultBitmapIndex !== 0) {\n            writer.uint32(16).int32(message.configResultBitmapIndex);\n        }\n        if (message.hasServerPropertiesOnly === true) {\n            writer.uint32(24).bool(message.hasServerPropertiesOnly);\n        }\n        if (message.globalPriority !== 0) {\n            writer.uint32(32).int32(message.globalPriority);\n        }\n        for (const v of message.sequenceIds) {\n            ConfigResult_InternalFields_SequenceIdCandidate.encode(v!, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.studySegmentOrdinal !== 0) {\n            writer.uint32(48).int32(message.studySegmentOrdinal);\n        }\n        if (message.experimentGuid !== 0) {\n            writer.uint32(56).uint64(message.experimentGuid);\n        }\n        if (message.isAbStudyStatusCompleted === true) {\n            writer.uint32(64).bool(message.isAbStudyStatusCompleted);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResult_InternalFields {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigResult_InternalFields();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configBitmapIndex = reader.int32();\n                    break;\n                case 2:\n                    message.configResultBitmapIndex = reader.int32();\n                    break;\n                case 3:\n                    message.hasServerPropertiesOnly = reader.bool();\n                    break;\n                case 4:\n                    message.globalPriority = reader.int32();\n                    break;\n                case 5:\n                    message.sequenceIds.push(ConfigResult_InternalFields_SequenceIdCandidate.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.studySegmentOrdinal = reader.int32();\n                    break;\n                case 7:\n                    message.experimentGuid = longToNumber(reader.uint64() as Long);\n                    break;\n                case 8:\n                    message.isAbStudyStatusCompleted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigResult_InternalFields>, I>>(object: I): ConfigResult_InternalFields {\n        const message = createBaseConfigResult_InternalFields();\n        message.configBitmapIndex = object.configBitmapIndex ?? 0;\n        message.configResultBitmapIndex = object.configResultBitmapIndex ?? 0;\n        message.hasServerPropertiesOnly = object.hasServerPropertiesOnly ?? false;\n        message.globalPriority = object.globalPriority ?? 0;\n        message.sequenceIds =\n            object.sequenceIds?.map((e) => ConfigResult_InternalFields_SequenceIdCandidate.fromPartial(e)) || [];\n        message.studySegmentOrdinal = object.studySegmentOrdinal ?? 0;\n        message.experimentGuid = object.experimentGuid ?? 0;\n        message.isAbStudyStatusCompleted = object.isAbStudyStatusCompleted ?? false;\n        return message;\n    },\n};\nfunction createBaseConfigResult_InternalFields_SequenceIdCandidate(): ConfigResult_InternalFields_SequenceIdCandidate {\n    return { targetingExpression: undefined, sequenceId: 0 };\n}\nexport const ConfigResult_InternalFields_SequenceIdCandidate = {\n    encode(message: ConfigResult_InternalFields_SequenceIdCandidate, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.targetingExpression !== undefined) {\n            ClientTargetingExpression.encode(message.targetingExpression, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.sequenceId !== 0) {\n            writer.uint32(16).int32(message.sequenceId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResult_InternalFields_SequenceIdCandidate {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigResult_InternalFields_SequenceIdCandidate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.targetingExpression = ClientTargetingExpression.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.sequenceId = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigResult_InternalFields_SequenceIdCandidate>, I>>(object: I): ConfigResult_InternalFields_SequenceIdCandidate {\n        const message = createBaseConfigResult_InternalFields_SequenceIdCandidate();\n        message.targetingExpression =\n            object.targetingExpression !== undefined && object.targetingExpression !== null\n                ? ClientTargetingExpression.fromPartial(object.targetingExpression)\n                : undefined;\n        message.sequenceId = object.sequenceId ?? 0;\n        return message;\n    },\n};\nfunction createBaseConfigResultBundle(): ConfigResultBundle {\n    return { etag: \"\", configResults: [] };\n}\nexport const ConfigResultBundle = {\n    encode(message: ConfigResultBundle, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.etag !== \"\") {\n            writer.uint32(10).string(message.etag);\n        }\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResultBundle {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigResultBundle();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.etag = reader.string();\n                    break;\n                case 2:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigResultBundle>, I>>(object: I): ConfigResultBundle {\n        const message = createBaseConfigResultBundle();\n        message.etag = object.etag ?? \"\";\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseSequenceIdCandidate(): SequenceIdCandidate {\n    return { targetingExpression: undefined, sequenceId: 0 };\n}\nexport const SequenceIdCandidate = {\n    encode(message: SequenceIdCandidate, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.targetingExpression !== undefined) {\n            ClientTargetingExpression.encode(message.targetingExpression, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.sequenceId !== 0) {\n            writer.uint32(16).int32(message.sequenceId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SequenceIdCandidate {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSequenceIdCandidate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.targetingExpression = ClientTargetingExpression.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.sequenceId = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<SequenceIdCandidate>, I>>(object: I): SequenceIdCandidate {\n        const message = createBaseSequenceIdCandidate();\n        message.targetingExpression =\n            object.targetingExpression !== undefined && object.targetingExpression !== null\n                ? ClientTargetingExpression.fromPartial(object.targetingExpression)\n                : undefined;\n        message.sequenceId = object.sequenceId ?? 0;\n        return message;\n    },\n};\nfunction createBaseClientTargetingExpression(): ClientTargetingExpression {\n    return {\n        operator: 0,\n        children: [],\n        property: 0,\n        predicateOperator: 0,\n        value: undefined,\n        propertyMetadata: undefined,\n    };\n}\nexport const ClientTargetingExpression = {\n    encode(message: ClientTargetingExpression, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.operator !== 0) {\n            writer.uint32(8).int32(message.operator);\n        }\n        for (const v of message.children) {\n            ClientTargetingExpression.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.property !== 0) {\n            writer.uint32(24).int32(message.property);\n        }\n        if (message.predicateOperator !== 0) {\n            writer.uint32(32).int32(message.predicateOperator);\n        }\n        if (message.value !== undefined) {\n            Value.encode(message.value, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.propertyMetadata !== undefined) {\n            ClientTargetingExpression_PropertyMetadata.encode(message.propertyMetadata, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ClientTargetingExpression {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseClientTargetingExpression();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operator = reader.int32() as any;\n                    break;\n                case 2:\n                    message.children.push(ClientTargetingExpression.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.property = reader.int32() as any;\n                    break;\n                case 4:\n                    message.predicateOperator = reader.int32() as any;\n                    break;\n                case 5:\n                    message.value = Value.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.propertyMetadata = ClientTargetingExpression_PropertyMetadata.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ClientTargetingExpression>, I>>(object: I): ClientTargetingExpression {\n        const message = createBaseClientTargetingExpression();\n        message.operator = object.operator ?? 0;\n        message.children = object.children?.map((e) => ClientTargetingExpression.fromPartial(e)) || [];\n        message.property = object.property ?? 0;\n        message.predicateOperator = object.predicateOperator ?? 0;\n        message.value = object.value !== undefined && object.value !== null ? Value.fromPartial(object.value) : undefined;\n        message.propertyMetadata =\n            object.propertyMetadata !== undefined && object.propertyMetadata !== null\n                ? ClientTargetingExpression_PropertyMetadata.fromPartial(object.propertyMetadata)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseClientTargetingExpression_PropertyMetadata(): ClientTargetingExpression_PropertyMetadata {\n    return {\n        itemId: 0,\n        signalToHash: 0,\n        abNamespaceForHashing: \"\",\n        abSeedForHashing: \"\",\n        ruidType: undefined,\n        cofRolloutSeedForHashing: \"\",\n    };\n}\nexport const ClientTargetingExpression_PropertyMetadata = {\n    encode(message: ClientTargetingExpression_PropertyMetadata, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.itemId !== 0) {\n            writer.uint32(8).int32(message.itemId);\n        }\n        if (message.signalToHash !== 0) {\n            writer.uint32(16).int32(message.signalToHash);\n        }\n        if (message.abNamespaceForHashing !== \"\") {\n            writer.uint32(26).string(message.abNamespaceForHashing);\n        }\n        if (message.abSeedForHashing !== \"\") {\n            writer.uint32(34).string(message.abSeedForHashing);\n        }\n        if (message.ruidType !== undefined) {\n            writer.uint32(40).int32(message.ruidType);\n        }\n        if (message.cofRolloutSeedForHashing !== \"\") {\n            writer.uint32(50).string(message.cofRolloutSeedForHashing);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ClientTargetingExpression_PropertyMetadata {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseClientTargetingExpression_PropertyMetadata();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.itemId = reader.int32();\n                    break;\n                case 2:\n                    message.signalToHash = reader.int32() as any;\n                    break;\n                case 3:\n                    message.abNamespaceForHashing = reader.string();\n                    break;\n                case 4:\n                    message.abSeedForHashing = reader.string();\n                    break;\n                case 5:\n                    message.ruidType = reader.int32() as any;\n                    break;\n                case 6:\n                    message.cofRolloutSeedForHashing = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ClientTargetingExpression_PropertyMetadata>, I>>(object: I): ClientTargetingExpression_PropertyMetadata {\n        const message = createBaseClientTargetingExpression_PropertyMetadata();\n        message.itemId = object.itemId ?? 0;\n        message.signalToHash = object.signalToHash ?? 0;\n        message.abNamespaceForHashing = object.abNamespaceForHashing ?? \"\";\n        message.abSeedForHashing = object.abSeedForHashing ?? \"\";\n        message.ruidType = object.ruidType ?? undefined;\n        message.cofRolloutSeedForHashing = object.cofRolloutSeedForHashing ?? \"\";\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../google/protobuf/any\";\nexport const protobufPackage = \"snapchat.common\";\nexport interface MapRecord {\n    key: string;\n    value: string;\n}\nexport interface MapRecords {\n    records: MapRecord[];\n}\nexport interface StringArray {\n    value: string[];\n}\nexport interface Value {\n    intValue: number | undefined;\n    longValue: number | undefined;\n    floatValue: number | undefined;\n    doubleValue: number | undefined;\n    boolValue: boolean | undefined;\n    stringValue: string | undefined;\n    anyValue: Any | undefined;\n    mapValue: MapRecords | undefined;\n    intPairValue: number | undefined;\n    stringArrayValue: StringArray | undefined;\n}\nfunction createBaseMapRecord(): MapRecord {\n    return { key: \"\", value: \"\" };\n}\nexport const MapRecord = {\n    encode(message: MapRecord, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): MapRecord {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMapRecord();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<MapRecord>, I>>(object: I): MapRecord {\n        const message = createBaseMapRecord();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMapRecords(): MapRecords {\n    return { records: [] };\n}\nexport const MapRecords = {\n    encode(message: MapRecords, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.records) {\n            MapRecord.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): MapRecords {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMapRecords();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.records.push(MapRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<MapRecords>, I>>(object: I): MapRecords {\n        const message = createBaseMapRecords();\n        message.records = object.records?.map((e) => MapRecord.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseStringArray(): StringArray {\n    return { value: [] };\n}\nexport const StringArray = {\n    encode(message: StringArray, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.value) {\n            writer.uint32(10).string(v!);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): StringArray {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStringArray();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<StringArray>, I>>(object: I): StringArray {\n        const message = createBaseStringArray();\n        message.value = object.value?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseValue(): Value {\n    return {\n        intValue: undefined,\n        longValue: undefined,\n        floatValue: undefined,\n        doubleValue: undefined,\n        boolValue: undefined,\n        stringValue: undefined,\n        anyValue: undefined,\n        mapValue: undefined,\n        intPairValue: undefined,\n        stringArrayValue: undefined,\n    };\n}\nexport const Value = {\n    encode(message: Value, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.intValue !== undefined) {\n            writer.uint32(8).int32(message.intValue);\n        }\n        if (message.longValue !== undefined) {\n            writer.uint32(16).int64(message.longValue);\n        }\n        if (message.floatValue !== undefined) {\n            writer.uint32(29).float(message.floatValue);\n        }\n        if (message.doubleValue !== undefined) {\n            writer.uint32(73).double(message.doubleValue);\n        }\n        if (message.boolValue !== undefined) {\n            writer.uint32(32).bool(message.boolValue);\n        }\n        if (message.stringValue !== undefined) {\n            writer.uint32(42).string(message.stringValue);\n        }\n        if (message.anyValue !== undefined) {\n            Any.encode(message.anyValue, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.mapValue !== undefined) {\n            MapRecords.encode(message.mapValue, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.intPairValue !== undefined) {\n            writer.uint32(65).fixed64(message.intPairValue);\n        }\n        if (message.stringArrayValue !== undefined) {\n            StringArray.encode(message.stringArrayValue, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Value {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.intValue = reader.int32();\n                    break;\n                case 2:\n                    message.longValue = longToNumber(reader.int64() as Long);\n                    break;\n                case 3:\n                    message.floatValue = reader.float();\n                    break;\n                case 9:\n                    message.doubleValue = reader.double();\n                    break;\n                case 4:\n                    message.boolValue = reader.bool();\n                    break;\n                case 5:\n                    message.stringValue = reader.string();\n                    break;\n                case 6:\n                    message.anyValue = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.mapValue = MapRecords.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.intPairValue = longToNumber(reader.fixed64() as Long);\n                    break;\n                case 10:\n                    message.stringArrayValue = StringArray.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Value>, I>>(object: I): Value {\n        const message = createBaseValue();\n        message.intValue = object.intValue ?? undefined;\n        message.longValue = object.longValue ?? undefined;\n        message.floatValue = object.floatValue ?? undefined;\n        message.doubleValue = object.doubleValue ?? undefined;\n        message.boolValue = object.boolValue ?? undefined;\n        message.stringValue = object.stringValue ?? undefined;\n        message.anyValue =\n            object.anyValue !== undefined && object.anyValue !== null ? Any.fromPartial(object.anyValue) : undefined;\n        message.mapValue =\n            object.mapValue !== undefined && object.mapValue !== null ? MapRecords.fromPartial(object.mapValue) : undefined;\n        message.intPairValue = object.intPairValue ?? undefined;\n        message.stringArrayValue =\n            object.stringArrayValue !== undefined && object.stringArrayValue !== null\n                ? StringArray.fromPartial(object.stringArrayValue)\n                : undefined;\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport enum AbStep {\n    USER_WHITELISTED = 0,\n    USER_GROUP_WHITELISTED = 1,\n    FILTER_CONDITIONS = 2,\n    SLICE_RANGE = 3,\n    TRAFFIC_ALLOCATED = 4,\n    UNRECOGNIZED = -1\n}\nexport enum CofStep {\n    VALIDATE_REQUEST = 0,\n    REQUEST_ATLAS = 1,\n    BUILD_TARGETING_INFO = 2,\n    QUERY_INDEX = 3,\n    REQUEST_AB = 4,\n    UNRECOGNIZED = -1\n}\nexport interface AbStepInfo {\n    abStep: AbStep;\n    info: string;\n}\nexport interface CofStepInfo {\n    cofStep: CofStep;\n    info: string;\n}\nexport interface DebugTrace {\n    lastCofStep: CofStepInfo | undefined;\n    lastAbStep: AbStepInfo | undefined;\n    budgetGroupId: number;\n}\nfunction createBaseAbStepInfo(): AbStepInfo {\n    return { abStep: 0, info: \"\" };\n}\nexport const AbStepInfo = {\n    encode(message: AbStepInfo, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.abStep !== 0) {\n            writer.uint32(8).int32(message.abStep);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(18).string(message.info);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): AbStepInfo {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAbStepInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.abStep = reader.int32() as any;\n                    break;\n                case 2:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<AbStepInfo>, I>>(object: I): AbStepInfo {\n        const message = createBaseAbStepInfo();\n        message.abStep = object.abStep ?? 0;\n        message.info = object.info ?? \"\";\n        return message;\n    },\n};\nfunction createBaseCofStepInfo(): CofStepInfo {\n    return { cofStep: 0, info: \"\" };\n}\nexport const CofStepInfo = {\n    encode(message: CofStepInfo, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.cofStep !== 0) {\n            writer.uint32(8).int32(message.cofStep);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(18).string(message.info);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): CofStepInfo {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCofStepInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cofStep = reader.int32() as any;\n                    break;\n                case 2:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<CofStepInfo>, I>>(object: I): CofStepInfo {\n        const message = createBaseCofStepInfo();\n        message.cofStep = object.cofStep ?? 0;\n        message.info = object.info ?? \"\";\n        return message;\n    },\n};\nfunction createBaseDebugTrace(): DebugTrace {\n    return { lastCofStep: undefined, lastAbStep: undefined, budgetGroupId: 0 };\n}\nexport const DebugTrace = {\n    encode(message: DebugTrace, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.lastCofStep !== undefined) {\n            CofStepInfo.encode(message.lastCofStep, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastAbStep !== undefined) {\n            AbStepInfo.encode(message.lastAbStep, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.budgetGroupId !== 0) {\n            writer.uint32(24).uint32(message.budgetGroupId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): DebugTrace {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDebugTrace();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lastCofStep = CofStepInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastAbStep = AbStepInfo.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.budgetGroupId = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<DebugTrace>, I>>(object: I): DebugTrace {\n        const message = createBaseDebugTrace();\n        message.lastCofStep =\n            object.lastCofStep !== undefined && object.lastCofStep !== null\n                ? CofStepInfo.fromPartial(object.lastCofStep)\n                : undefined;\n        message.lastAbStep =\n            object.lastAbStep !== undefined && object.lastAbStep !== null\n                ? AbStepInfo.fromPartial(object.lastAbStep)\n                : undefined;\n        message.budgetGroupId = object.budgetGroupId ?? 0;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import { ensureError } from \"../common/errorHelpers\";\nimport { cacheKeyNotFoundError } from \"../namedErrors\";\nimport { getLogger } from \"../logger/logger\";\nimport { Persistence, ValidKey } from \"../persistence/Persistence\";\nimport { OperationalMetricsReporter } from \"../metrics/operational/operationalMetricsReporter\";\nimport { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\n\nconst logger = getLogger(\"responseCachingHandler\");\nconst notFound = (key: ValidKey) => cacheKeyNotFoundError(`Response for key ${key} not found in cache.`);\nconst strategyFailed = (key: ValidKey, cause?: unknown) =>\n    new Error(`Network request and cache lookup for key ${key} both failed.`, { cause });\n\nexport type CachingStrategy<T> = (\n    key: ValidKey,\n    cache: Persistence<T>,\n    network: (metadata?: RequestMetadata) => Promise<T>\n) => Promise<T>;\n\n/**\n * Create a CachingStrategy that first makes a request to the network, falling back to cache if the network request\n * fails. If the network request fails and a prior response has not been cached, an error is returned to the caller.\n */\nexport const staleIfErrorStrategy =\n    <T>(): CachingStrategy<T> =>\n    async (key, cache, network) => {\n        try {\n            const response = await network();\n            cache.store(key, response).catch((error) => {\n                logger.warn(`staleIfErrorStrategy failed to store key ${key}.`, error);\n            });\n            return response;\n        } catch (networkError) {\n            try {\n                const cachedResponse = await cache.retrieve(key);\n                if (!cachedResponse) throw notFound(key);\n                logger.debug(\n                    `staleIfErrorStrategy successfully fell back to cache for key ${key} after network error.`,\n                    networkError\n                );\n                return cachedResponse;\n            } catch (cacheError) {\n                const error = ensureError(cacheError);\n                error.cause = networkError;\n                throw strategyFailed(key, error);\n            }\n        }\n    };\n\n/**\n * If provided these options allow staleWhileRevalidateStrategy to report cache_miss metrics.\n */\nexport interface StaleWhileRevalidateOptions {\n    requestType: string;\n    reporter: OperationalMetricsReporter;\n}\n/**\n * Create a CachingStrategy that first does a cache lookup – if the response is found in cache, it is returned and the\n * entry is updated with a request to the network in the background. If no cached response is found, the network request\n * is made, the result cached and returned to the caller.\n */\nexport const staleWhileRevalidateStrategy =\n    <T>(options?: StaleWhileRevalidateOptions): CachingStrategy<T> =>\n    async (key, cache, network) => {\n        try {\n            const cachedResponse = await cache.retrieve(key);\n            if (!cachedResponse) throw notFound(key);\n\n            // By specifying isSideEffect: true, the handler chain allows the network handler to run to completion,\n            // even though we return an immediate response from the cache. In the typical use-case, once a response has\n            // resolved, any ongoing handlers are aborted because the handler chain knows their result will not be\n            // used -- but here, the network handler is run as a side-effect to update the cache after the cached\n            // response has been resolved.\n            network({ isSideEffect: true })\n                .then((response) => cache.store(key, response))\n                .catch((error) => {\n                    logger.warn(`staleWhileRevalidateStrategy failed to retrieve and store key ${key}.`, error);\n                });\n            return cachedResponse;\n        } catch (cacheError) {\n            options?.reporter.count(\"cache_miss\", 1, new Map([[\"request_type\", options.requestType]]));\n            try {\n                const response = await network();\n                cache.store(key, response).catch((error) => {\n                    logger.warn(`staleWhileRevalidateStrategy failed to store key ${key}.`, error);\n                });\n                logger.debug(\n                    `staleWhileRevalidateStrategy successfully fell back to network for key ${key} after cache error.`,\n                    cacheError\n                );\n                return response;\n            } catch (networkError) {\n                const error = ensureError(networkError);\n                error.cause = cacheError;\n                throw strategyFailed(key, error);\n            }\n        }\n    };\n\n/**\n * Create a Handler capable of caching responses using various caching strategies.\n *\n * More than one caching strategy can be provided, and they will be composed into a single strategy. For example, an\n * expiringStrategy could be composed with a staleIfErrorStrategy so that responses\n *\n * @param cache A Persistence instance capable of storing responses.\n * @param resolveKey This function is called once for each request, and must return a valid persistence key\n * corresponding uniquely to that request.\n * @param strategy A CachingStrategy used to determine when to retrieve from cache vs. request from the network.\n * @returns\n */\nexport const createResponseCachingHandler = <Req, Res, Meta extends RequestMetadata>(\n    cache: Persistence<Res>,\n    resolveKey: (request: Req, metadata?: Meta) => ValidKey,\n    strategy: CachingStrategy<Res>\n): ChainableHandler<Req, Res, Req, Res, Meta> => {\n    return (next) => async (request, metadata) => {\n        const network = (additionalMetadata: RequestMetadata = {}) => {\n            const m = { ...metadata, ...additionalMetadata } as Meta;\n            return next(request, m);\n        };\n\n        let key: ValidKey;\n        try {\n            key = resolveKey(request, metadata);\n        } catch (error) {\n            logger.warn(\"Cache lookup failed because the cache key could not be resolved.\", error);\n            return network();\n        }\n        return strategy(key, cache, network);\n    };\n};\n", "import { ensureError } from \"../common/errorHelpers\";\nimport { getLogger } from \"../logger/logger\";\nimport { Persistence, ValidKey } from \"./Persistence\";\n\nconst logger = getLogger(\"ExpiringPersistence\");\n\n/**\n * Create a Persistence that will remove entries after they expire.\n *\n * An expiration function must be provided, which is called each time a value is stored. It must return the expiration\n * time for that value, given in seconds from now. For example, to expire a value 24 hours after it is stored, the\n * expiration function should return 86400 (the number of seconds in 24 hours).\n */\nexport class ExpiringPersistence<T> implements Persistence<T> {\n    constructor(\n        private readonly expiration: (value: T) => number,\n        private readonly persistence: Persistence<[number, T]>\n    ) {\n        this.removeExpired().catch(() => {\n            logger.warn(\"Failed to cleanup expired entries on startup.\");\n        });\n    }\n\n    get size(): number {\n        return this.persistence.size;\n    }\n\n    async retrieve(key: ValidKey): Promise<T | undefined> {\n        const [expiry, value] = (await this.persistence.retrieve(key)) ?? [];\n        if (value === undefined || expiry === undefined) return undefined;\n\n        if (Date.now() > expiry) {\n            await this.persistence.remove(key).catch((error) => {\n                logger.warn(`Key ${key} is expired, but removing it from persistence failed.`, ensureError(error));\n            });\n            return undefined;\n        }\n        return value;\n    }\n\n    async retrieveAll(): Promise<Array<[ValidKey, T]>> {\n        const now = Date.now();\n        return (await this.persistence.retrieveAll()).filter(([, [expiry]]) => expiry >= now).map(([, v]) => v);\n    }\n\n    remove(key: ValidKey): Promise<void> {\n        return this.persistence.remove(key);\n    }\n\n    async removeAll(): Promise<T[]> {\n        const results = await this.persistence.removeAll();\n        return results.map(([, v]) => v);\n    }\n\n    async removeExpired(): Promise<void> {\n        for (const [key, [expiry]] of await this.persistence.retrieveAll()) {\n            if (Date.now() >= expiry) {\n                await this.persistence\n                    .remove(key)\n                    .catch((error) => logger.warn(`Failed to remove expired key ${key}.`, error));\n            }\n        }\n    }\n\n    store(value: T): Promise<ValidKey>;\n    store(key: ValidKey, value: T): Promise<ValidKey>;\n    store(keyOrValue: T | ValidKey, maybeValue?: T): Promise<ValidKey> {\n        const [key, value] =\n            maybeValue === undefined ? [undefined, keyOrValue as T] : [keyOrValue as ValidKey, maybeValue];\n        const expiry = Date.now() + this.expiration(value) * 1000;\n        return key === undefined\n            ? this.persistence.store([expiry, value])\n            : this.persistence.store(key, [expiry, value]);\n    }\n}\n", "/**\n * Different persistence mechanisms (e.g. localStorage, IndexedDB) may support different key types. This type should be\n * a valid key across all concrete Persistence implementations.\n */\nexport type ValidKey = string | number;\n\nexport const isValidKey = (key: unknown): key is ValidKey => typeof key === \"string\" || typeof key === \"number\";\n\n/**\n * The abstract Persistence class defines an async interface for interacting with persistent client-side storage. This\n * is modeled as a simple key/value store.\n *\n * Subclasses may be implemented to support a variety of persistence mechanisms – e.g. localStorage, IndexedDB, etc.\n */\nexport abstract class Persistence<T> {\n    abstract size: number;\n\n    abstract retrieve(key: ValidKey): Promise<T | undefined>;\n\n    abstract retrieveAll(): Promise<Array<[ValidKey, T]>>;\n\n    abstract remove(key: ValidKey): Promise<void>;\n\n    abstract removeAll(): Promise<T[]>;\n\n    /**\n     * Persistence implementations must be capable of generating unique keys, or accepting a unique key from the\n     * caller.\n     */\n    abstract store(value: T): Promise<ValidKey>;\n    abstract store(key: ValidKey, value: T): Promise<ValidKey>;\n}\n", "import { isValidKey, Persistence, ValidKey } from \"./Persistence\";\n\ntype IDBRequestPromise<T = any> = Promise<T> & { request: IDBRequest<T> };\n\ninterface EnhancedIDBTransaction {\n    tx: IDBTransaction;\n    store: IDBObjectStore;\n    done: Promise<void>;\n}\n\ninterface EnhancedIDBCursor<T> {\n    cursor: (IDBCursor & { readonly value: T }) | null;\n    continue: () => Promise<EnhancedIDBCursor<T>>;\n}\n\n/**\n * The IndexedDB API makes use of event callbacks that can be cumbersome to use. This method wraps an IDBRequest in a\n * Promise, making it easier to use.\n */\nfunction wrapRequest(request: IDBOpenDBRequest): Promise<IDBDatabase> & { request: IDBOpenDBRequest };\nfunction wrapRequest<T>(request: IDBRequest<T>): IDBRequestPromise<T>;\nfunction wrapRequest(request: IDBRequest): IDBRequestPromise {\n    const p = new Promise((resolve, reject) => {\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = () => reject(request.error);\n    });\n    (p as IDBRequestPromise).request = request;\n    return p as IDBRequestPromise;\n}\n\n/**\n * IndexedDB cursor requests are unique, in that their `onsuccess` handler may be called multiple times. To support\n * this, and allow for an easier-to-use Promise-based API, we wrap the cursor request to support usage like:\n * ```ts\n * let request = await wrapCursorRequest(store.openCursor())\n * while (request.cursor) {\n *   console.log(request.cursor.key, request.cursor.value)\n *   request = await request.continue()\n * }\n * ```\n */\nfunction wrapCursorRequest<T>(request: IDBRequest<IDBCursorWithValue | null>): Promise<EnhancedIDBCursor<T>> {\n    return new Promise((resolve, reject) => {\n        request.onsuccess = () => {\n            const cursor = request.result;\n            if (!cursor) resolve({ cursor: null, continue: () => Promise.reject() });\n            else\n                resolve({\n                    cursor,\n                    continue: () => {\n                        cursor.continue();\n                        return wrapCursorRequest<T>(request);\n                    },\n                });\n        };\n        request.onerror = () => reject(request.error);\n    });\n}\n\n/**\n * Specify a database name for this {@link IndexedDBPersistence} instance to use.\n * This will be prefixed by `Snap.CameraKit`.\n *\n * A databaseVersion and objectStore may also be specified. Keep in mind the following limitations:\n * - IndexedDBPersistence currently does nothing to migrate data between versions.\n * - If two different IndexedDBPersistence instances use the same databaseName, they must also use the same objectStore.\n * Otherwise a race condition will occur which prevents the creation of all but one objectStore per database.\n */\nexport interface IndexedDBPersistenceOptions {\n    databaseName: string;\n    databaseVersion?: number;\n    objectStore?: string;\n}\n\n/**\n * A simple key/value persistence using an IndexedDB storage backend.\n *\n * See [Using IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB) for an\n * introduction to how IndexedDB works, its APIs, and how to use it.\n *\n * Note: Currently there is no support for database upgrades. Each instance of this class uses a single IDBObjectStore\n * object set at instantiation time, and there are no hooks for performing migrations between versions. This may be\n * added in the future if such functionality is needed.\n */\nexport class IndexedDBPersistence<T> implements Persistence<T> {\n    size: number;\n\n    private db: Promise<IDBDatabase>;\n    private readonly databaseName: string;\n    private readonly databaseVersion?: number;\n    private readonly objectStore: string;\n\n    /**\n     * Construct an {@link IndexedDBPersistence} instance corresponding to a given IndexedDB database version.\n     *\n     * Throws `ConstraintError` if the version number is invalid (e.g. NaN, or less than 1).\n     */\n    constructor(options: IndexedDBPersistenceOptions) {\n        // We'll namespace our DB names to A) avoid collisions with host applications and B) be transparent about who\n        // is using persistence.\n        this.databaseName = `Snap.CameraKit.${options.databaseName}`;\n        this.databaseVersion = options.databaseVersion;\n        this.objectStore = options.objectStore ?? options.databaseName;\n\n        // `open()` will throw if the version is invalid -- this is desirable vs. rejecting the `db` promise, since then\n        // the error is only reported when callers try to perform some operation. Instead, we want the instantiating\n        // code to see the error.\n        this.db = this.openDatabase(indexedDB.open(this.databaseName, this.databaseVersion));\n        this.size = 0;\n    }\n\n    retrieve(key: ValidKey): Promise<T | undefined> {\n        return this.simpleTransaction(\"readonly\", (store) => store.get(key));\n    }\n\n    async retrieveAll(): Promise<Array<[ValidKey, T]>> {\n        const results: Array<[ValidKey, T]> = [];\n        const { store, done } = await this.transaction(\"readonly\");\n        let request = await wrapCursorRequest<T>(store.openCursor());\n\n        while (request.cursor) {\n            results.push([request.cursor.primaryKey as ValidKey, request.cursor.value]);\n            request = await request.continue();\n        }\n\n        await done;\n        return results;\n    }\n\n    async remove(key: ValidKey): Promise<void> {\n        await this.simpleTransaction(\"readwrite\", (store) => store.delete(key));\n        this.size--;\n    }\n\n    async removeAll(): Promise<T[]> {\n        const results: T[] = [];\n        const { store, done } = await this.transaction(\"readwrite\");\n        let request = await wrapCursorRequest<T>(store.openCursor());\n        const deleteRequests: Promise<any>[] = [];\n        while (request.cursor) {\n            results.push(request.cursor.value);\n            // If any of the deletes fail (e.g. if the user deletes the object store during the transaction), it will\n            // fail the whole transaction. Since the primary expected cause of this failure mode is that the entire\n            // object store no longer exists, it's unlikely this will result in unbounded DB growth. That said, callers\n            // may want to attempt to retry the removal, or raise an alarm if the persistence size grows unexpectedly.\n            deleteRequests.push(wrapRequest(store.delete(request.cursor.key)));\n            request = await request.continue();\n        }\n        await Promise.all(deleteRequests.concat(done));\n        this.size = 0;\n        return results;\n    }\n\n    async store(value: T): Promise<ValidKey>;\n    async store(key: ValidKey, value: T): Promise<ValidKey>;\n    async store(keyOrValue: T | ValidKey, maybeValue?: T): Promise<ValidKey> {\n        const [key, value] = maybeValue === undefined ? [undefined, keyOrValue] : [keyOrValue, maybeValue];\n\n        // The key must be ValidKey | undefined.\n        if (!isValidKey(key) && typeof key !== \"undefined\")\n            throw new TypeError(`IndexedDBPersistence failed to ` + `store a value. Invalid key type: ${typeof key}`);\n\n        const storedKey = await this.simpleTransaction(\"readwrite\", (store) => store.put(value, key));\n        this.size++;\n\n        // Type safety: we already assert any given key is valid, and if the key is undefined IndexedDB will generate\n        // a numeric key (https://w3c.github.io/IndexedDB/#key-generator).\n        return storedKey as ValidKey;\n    }\n\n    private async openDatabase(request: IDBOpenDBRequest): Promise<IDBDatabase> {\n        // The `open()` call will throw if databaseVersion is invalid (e.g. < 1).\n        const dbPromise = wrapRequest(request);\n        dbPromise.request.onupgradeneeded = () => {\n            try {\n                // The following DOMExceptions may be thrown by `createObjectStore()` – they should all be logically\n                // impossible. We handle the one recoverable exception which could occur below.\n                //\n                // TransactionInactiveError: the database does not exist.\n                // InvalidStateError: `createObjectStore` was called outside a `versionchange` transaction.\n                // InvalidAccessError: `autoIncrement` is true and `keyPath` contains an empty string.\n                dbPromise.request.result.createObjectStore(this.objectStore, { autoIncrement: true });\n            } catch (error) {\n                // ConstraintError is thrown if the object store already exists. Could happen if multiple tabs to the\n                // same domain are opened and race to create the object store. In this case we can safely ignore the\n                // error and continue.\n                if (error instanceof DOMException && error.name === \"ConstraintError\") return;\n                throw error;\n            }\n        };\n        const db = await dbPromise;\n        db.onclose = () => {\n            // The 'close` event fires when the DB is unexpectedly closed (e.g. user clears application data). We'll\n            // attempt to re-open it (which may fail, in which case no further attempts will be made, and all future\n            // transactions will fail).\n            this.db = this.openDatabase(indexedDB.open(this.databaseName, this.databaseVersion));\n        };\n        return db;\n    }\n\n    private async simpleTransaction<R>(\n        mode: IDBTransactionMode,\n        operation: (tx: IDBObjectStore) => IDBRequest<R>\n    ): Promise<R> {\n        const { store, done } = await this.transaction(mode);\n        const [result] = await Promise.all([wrapRequest(operation(store)), done]);\n        return result;\n    }\n\n    private async transaction(mode: IDBTransactionMode): Promise<EnhancedIDBTransaction> {\n        const db = await this.db;\n        // The following DOMExceptions may be thrown – they should all be logically impossible, or could be\n        // triggered by the user deleting or modifying the database (e.g. via DevTools) at the right time. We won't\n        // attempt to recover from them now, but may decide to do so in the future (if we see them in the wild).\n        //\n        // InvalidStateError: `close()` has previously been called on the IDBDatabase\n        // NotFoundError: the object store does not exist.\n        // TypeError: the `mode` parameter is invalid.\n        // InvalidAccessError: the function was called with an empty list of object stores.\n        const tx = db.transaction(this.objectStore, mode);\n\n        // Similarly, the following DOMExceptions may be thrown by `objectStore()`:\n        //\n        // InvalidStateError: the transaction has already completed.\n        // NotFoundError: the object store is not in the transaction's scope.\n        const store = tx.objectStore(this.objectStore);\n        const done = new Promise<void>((resolve, reject) => {\n            tx.oncomplete = () => resolve();\n            tx.onerror = () => reject(tx.error);\n            tx.onabort = () => reject(new DOMException(\"The transaction was aborted\", \"AbortError\"));\n        });\n        return { tx, store, done };\n    }\n}\n", "import { PageVisibility } from \"../common/pageVisibility\";\nimport { ChainableHandler, Handler, RequestMetadata } from \"./HandlerChainBuilder\";\n\ninterface MappableRequest<T> {\n    map: () => T | Promise<T>;\n    next: (request: T) => Promise<void>;\n    reject: (reason: unknown) => void;\n}\n\n/**\n * Map from one request type to another, potentially asynchronously.\n *\n * **NOTE:** If `maxMapConcurrency` is set to some finite number, and more requests are handled than are allowed to\n * be concurrently mapped, the waiting requests will be placed into a unbounded buffer. If, for example, requests are\n * handled with high frequency, `maxMapConcurrency` is low, and the `map` function returns a long-running Promise, this\n * buffer could use a large amount of memory. Keep this in mind when using this handler.\n *\n * @param map Transform each request, may be sync or async.\n * @param pageVisibility Determines whether to flush buffered requests when the page becomes hidden.\n * `false` value indicates that page visibility handling is avoided, while\n * a {@link PageVisibility} instance is used to subscribe to page visibility change events.\n * @param maxMapConcurrency If the `map` function is async, it will be invoked at most this number of times\n * concurrently. Setting this to 1 could be useful if it's important for `map` to be called in serial.\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createMappingHandler = <Req, MappedReq, Res, Meta extends RequestMetadata>(\n    map: (request: Req) => MappedReq | Promise<MappedReq>,\n    pageVisibility: PageVisibility | false,\n    maxMapConcurrency: number = Number.POSITIVE_INFINITY\n): ChainableHandler<Req, Res, MappedReq, Res, Meta> => {\n    const buffer: MappableRequest<MappedReq>[] = [];\n    let mapConcurrency = 0;\n\n    const processRequest = async (request: MappableRequest<MappedReq>) => {\n        try {\n            mapConcurrency++;\n            const mapped = request.map();\n            // We want to make sure that if the mapping operation is not async, we don't introduce asynchronicity here\n            // (which unfortunately happens even if you `await` a non-Promise value). This is important so that e.g.\n            // handlers which run when the page is terminated can send requests synchronously, since the browser may\n            // not pick up any async handlers registered to run on the following event loop.\n            if (mapped instanceof Promise) request.next(await mapped);\n            else if (mapped) request.next(mapped);\n        } catch (error) {\n            request.reject(error);\n        } finally {\n            mapConcurrency--;\n        }\n        while (buffer.length > 0 && mapConcurrency < maxMapConcurrency) {\n            // Safety: we just checked for `buffer.length > 0`, so the shifted value will never be undefined.\n            processRequest(buffer.shift()!);\n        }\n    };\n\n    // This may indicate that the page is being unloaded, in which case we may want to flush any buffered requests\n    // regardless of our max concurrency – otherwise those requests will be lost when the page terminates.\n    if (pageVisibility) {\n        pageVisibility.onPageHidden(() => {\n            while (buffer.length > 0) processRequest(buffer.shift()!);\n        });\n    }\n\n    return (next: Handler<MappedReq, Res, Meta>) => (request: Req, metadata?: Meta) => {\n        return new Promise<Res>((resolve, reject) => {\n            const mappableRequest: MappableRequest<MappedReq> = {\n                map: () => map(request),\n                next: (mappedRequest) => next(mappedRequest, metadata).then(resolve).catch(reject),\n                reject,\n            };\n            if (mapConcurrency < maxMapConcurrency) processRequest(mappableRequest);\n            else buffer.push(mappableRequest);\n        });\n    };\n};\n", "import { PageVisibility } from \"../common/pageVisibility\";\nimport { ChainableHandler, Handler, RequestMetadata } from \"./HandlerChainBuilder\";\nimport { createMappingHandler } from \"./mappingHandler\";\n\nexport interface BatchingHandlerOptions<Req, BatchReq> {\n    batchReduce: (batch: BatchReq | undefined, req: Req) => BatchReq | Promise<BatchReq>;\n    isBatchComplete: (batch: BatchReq) => boolean;\n    maxBatchAge?: number;\n    /**\n     * Determines whether to flush buffered requests when the page becomes hidden.\n     * `false` value indicates that page visibility handling is avoided, while\n     * a {@link PageVisibility} instance is used to subscribe to page visibility change events.\n     */\n    pageVisibility: PageVisibility | false;\n}\n\n/**\n * Accumulate requests into batches, which are then sent to the next handler in the chain. Batches are sent when either:\n * - the given `isBatchComplete` function returns true, closing the current batch and sending it down the chain.\n * - an optional `maxBatchAge` time has elapsed since the first request in the batch was received.\n * - the page terminates.\n *\n * When handling a request, the Promise returned will resolve when that request has been successfully added to the\n * current batch – **NOT** when that batch has been successfully processed by the rest of the handler chain.\n *\n * The `next` handler in the chain will receive the batch and should handle any errors arising from further processing\n * on the batch (e.g. sending it to a server).\n *\n * **Note:** This handler does not support aborting handled requests via AbortSignal.\n *\n * @param options\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createBatchingHandler = <Req, BatchReq, BatchRes, Meta extends RequestMetadata>({\n    batchReduce,\n    isBatchComplete,\n    maxBatchAge,\n    pageVisibility,\n}: BatchingHandlerOptions<Req, BatchReq>): ChainableHandler<Req, void, BatchReq, BatchRes, Meta> => {\n    // TODO: this should just be `number`, but we're picking up NodeJS types (@types/node) when building, so setTimeout\n    // gets a different return type than what it should have in the browser. We should build without NodeJS types, but\n    // that will require some fixes across the codebase.\n    let batchTimeout: ReturnType<typeof setTimeout>;\n    let currentBatch: BatchReq | undefined = undefined;\n    let clearOnHidden = () => {};\n\n    const reducingHandler = createMappingHandler<Req, BatchReq, void, Meta>(\n        async (request) => {\n            currentBatch = await batchReduce(currentBatch, request);\n            return currentBatch;\n        },\n        pageVisibility,\n        1\n    );\n\n    const batchAndSend = (next: Handler<BatchReq, BatchRes, Meta>, request?: Req, metadata?: Meta) => {\n        const batch = request ? batchReduce(currentBatch, request) : currentBatch;\n        if (!batch) return;\n\n        // `next` should handle its own errors – that is, the batchingHandler is meant to be placed in a handler chain\n        // prior to any error logging, retrying, etc. handlers.\n        const complete =\n            batch instanceof Promise\n                ? batch.then((b) => next(b, metadata)).catch(() => {})\n                : next(batch, metadata).catch(() => {});\n\n        currentBatch = undefined;\n        clearTimeout(batchTimeout);\n        clearOnHidden();\n\n        return complete;\n    };\n\n    return (next) => async (request, metadata) => {\n        // Requests may be made while the page is transitioning to hidden – for example, the page is being unloaded and\n        // we're reporting final metrics. In this case, we need to skip batching and synchronously call `next` so that\n        // the request is not lost.\n        if (pageVisibility && pageVisibility.isDuringVisibilityTransition(\"hidden\")) {\n            await batchAndSend(next, request, metadata);\n            return;\n        }\n\n        // If this is the first request in a batch, we need to set up some callbacks to flush the batch when certain\n        // events occur:\n        //\n        // - maxBatchAge time passes.\n        // - page visibility transitions to hidden (which could indicate the page is being unloaded).\n        //\n        if (currentBatch === undefined) {\n            const sendBatch = () => batchAndSend(next, undefined, metadata);\n            if (maxBatchAge !== undefined) batchTimeout = setTimeout(sendBatch, maxBatchAge);\n            if (pageVisibility) clearOnHidden = pageVisibility.onPageHidden(sendBatch);\n        }\n\n        const handle = reducingHandler(async () => {\n            if (!currentBatch) return;\n            if (!isBatchComplete(currentBatch)) return;\n            await batchAndSend(next, undefined, metadata);\n        });\n\n        return handle(request, metadata);\n    };\n};\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { RankingData } from \"./ranking\";\nimport { Lens } from \"./lens\";\nimport { LegalPrompt } from \"./legal_prompt\";\nimport { OperationalMetricsBundle } from \"./operational_metrics\";\nimport { Any } from \"../../google/protobuf/any\";\nimport { ExtensionEventBase } from \"./business_events\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface GetGroupRequest {\n    id: string;\n    rankingData: RankingData | undefined;\n}\nexport interface GetGroupResponse {\n    id: string;\n    lenses: Lens[];\n}\nexport interface GetGroupLensRequest {\n    lensId: string;\n    groupId: string;\n}\nexport interface GetGroupLensResponse {\n    lens: Lens | undefined;\n    groupId: string;\n}\nexport interface BatchGetGroupLensRequest {\n    getRequests: GetGroupLensRequest[];\n}\nexport interface BatchGetGroupLensResponse {\n    getResponses: GetGroupLensResponse[];\n}\nexport interface GetPlaceholderConfigRequest {\n}\nexport interface GetPlaceholderConfigResponse {\n    configs: {\n        [key: string]: string;\n    };\n}\nexport interface GetPlaceholderConfigResponse_ConfigsEntry {\n    key: string;\n    value: string;\n}\nexport interface GetInitializationConfigRequest {\n}\nexport interface GetInitializationConfigResponse {\n    appVendorUuidOptIn: boolean;\n    watermarkEnabled: boolean;\n    childrenProtectionActRestricted: boolean;\n    legalPrompt: LegalPrompt | undefined;\n}\nexport interface SetOperationalMetricsRequest {\n    metrics: OperationalMetricsBundle | undefined;\n}\nexport interface SetOperationalMetricsResponse {\n}\nexport interface SetBusinessEventsRequest {\n    batchEvents: Any | undefined;\n}\nexport interface SetBusinessEventsResponse {\n}\nexport interface SetExtensionBusinessEventsRequest {\n    events: Any[];\n    extensionEventBase: ExtensionEventBase | undefined;\n}\nexport interface SetExtensionBusinessEventsResponse {\n}\nfunction createBaseGetGroupRequest(): GetGroupRequest {\n    return { id: \"\", rankingData: undefined };\n}\nexport const GetGroupRequest = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetGroupRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.rankingData = RankingData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetGroupRequest {\n        return {\n            id: isSet(object.id) ? String(object.id) : \"\",\n            rankingData: isSet(object.rankingData) ? RankingData.fromJSON(object.rankingData) : undefined,\n        };\n    },\n    toJSON(message: GetGroupRequest): unknown {\n        const obj: any = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.rankingData !== undefined &&\n            (obj.rankingData = message.rankingData ? RankingData.toJSON(message.rankingData) : undefined);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetGroupRequest>, I>>(object: I): GetGroupRequest {\n        const message = createBaseGetGroupRequest();\n        message.id = object.id ?? \"\";\n        message.rankingData =\n            object.rankingData !== undefined && object.rankingData !== null\n                ? RankingData.fromPartial(object.rankingData)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseGetGroupResponse(): GetGroupResponse {\n    return { id: \"\", lenses: [] };\n}\nexport const GetGroupResponse = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetGroupResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.lenses.push(Lens.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetGroupResponse {\n        return {\n            id: isSet(object.id) ? String(object.id) : \"\",\n            lenses: Array.isArray(object?.lenses) ? object.lenses.map((e: any) => Lens.fromJSON(e)) : [],\n        };\n    },\n    toJSON(message: GetGroupResponse): unknown {\n        const obj: any = {};\n        message.id !== undefined && (obj.id = message.id);\n        if (message.lenses) {\n            obj.lenses = message.lenses.map((e) => (e ? Lens.toJSON(e) : undefined));\n        }\n        else {\n            obj.lenses = [];\n        }\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetGroupResponse>, I>>(object: I): GetGroupResponse {\n        const message = createBaseGetGroupResponse();\n        message.id = object.id ?? \"\";\n        message.lenses = object.lenses?.map((e) => Lens.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseGetGroupLensRequest(): GetGroupLensRequest {\n    return { lensId: \"\", groupId: \"\" };\n}\nexport const GetGroupLensRequest = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupLensRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetGroupLensRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lensId = reader.string();\n                    break;\n                case 2:\n                    message.groupId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetGroupLensRequest {\n        return {\n            lensId: isSet(object.lensId) ? String(object.lensId) : \"\",\n            groupId: isSet(object.groupId) ? String(object.groupId) : \"\",\n        };\n    },\n    toJSON(message: GetGroupLensRequest): unknown {\n        const obj: any = {};\n        message.lensId !== undefined && (obj.lensId = message.lensId);\n        message.groupId !== undefined && (obj.groupId = message.groupId);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetGroupLensRequest>, I>>(object: I): GetGroupLensRequest {\n        const message = createBaseGetGroupLensRequest();\n        message.lensId = object.lensId ?? \"\";\n        message.groupId = object.groupId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetGroupLensResponse(): GetGroupLensResponse {\n    return { lens: undefined, groupId: \"\" };\n}\nexport const GetGroupLensResponse = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupLensResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetGroupLensResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lens = Lens.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.groupId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetGroupLensResponse {\n        return {\n            lens: isSet(object.lens) ? Lens.fromJSON(object.lens) : undefined,\n            groupId: isSet(object.groupId) ? String(object.groupId) : \"\",\n        };\n    },\n    toJSON(message: GetGroupLensResponse): unknown {\n        const obj: any = {};\n        message.lens !== undefined && (obj.lens = message.lens ? Lens.toJSON(message.lens) : undefined);\n        message.groupId !== undefined && (obj.groupId = message.groupId);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetGroupLensResponse>, I>>(object: I): GetGroupLensResponse {\n        const message = createBaseGetGroupLensResponse();\n        message.lens = object.lens !== undefined && object.lens !== null ? Lens.fromPartial(object.lens) : undefined;\n        message.groupId = object.groupId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseBatchGetGroupLensRequest(): BatchGetGroupLensRequest {\n    return { getRequests: [] };\n}\nexport const BatchGetGroupLensRequest = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): BatchGetGroupLensRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBatchGetGroupLensRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.getRequests.push(GetGroupLensRequest.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): BatchGetGroupLensRequest {\n        return {\n            getRequests: Array.isArray(object?.getRequests)\n                ? object.getRequests.map((e: any) => GetGroupLensRequest.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message: BatchGetGroupLensRequest): unknown {\n        const obj: any = {};\n        if (message.getRequests) {\n            obj.getRequests = message.getRequests.map((e) => (e ? GetGroupLensRequest.toJSON(e) : undefined));\n        }\n        else {\n            obj.getRequests = [];\n        }\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<BatchGetGroupLensRequest>, I>>(object: I): BatchGetGroupLensRequest {\n        const message = createBaseBatchGetGroupLensRequest();\n        message.getRequests = object.getRequests?.map((e) => GetGroupLensRequest.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseBatchGetGroupLensResponse(): BatchGetGroupLensResponse {\n    return { getResponses: [] };\n}\nexport const BatchGetGroupLensResponse = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): BatchGetGroupLensResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBatchGetGroupLensResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.getResponses.push(GetGroupLensResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): BatchGetGroupLensResponse {\n        return {\n            getResponses: Array.isArray(object?.getResponses)\n                ? object.getResponses.map((e: any) => GetGroupLensResponse.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message: BatchGetGroupLensResponse): unknown {\n        const obj: any = {};\n        if (message.getResponses) {\n            obj.getResponses = message.getResponses.map((e) => (e ? GetGroupLensResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.getResponses = [];\n        }\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<BatchGetGroupLensResponse>, I>>(object: I): BatchGetGroupLensResponse {\n        const message = createBaseBatchGetGroupLensResponse();\n        message.getResponses = object.getResponses?.map((e) => GetGroupLensResponse.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseGetPlaceholderConfigRequest(): GetPlaceholderConfigRequest {\n    return {};\n}\nexport const GetPlaceholderConfigRequest = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetPlaceholderConfigRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetPlaceholderConfigRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_: any): GetPlaceholderConfigRequest {\n        return {};\n    },\n    toJSON(_: GetPlaceholderConfigRequest): unknown {\n        const obj: any = {};\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetPlaceholderConfigRequest>, I>>(_: I): GetPlaceholderConfigRequest {\n        const message = createBaseGetPlaceholderConfigRequest();\n        return message;\n    },\n};\nfunction createBaseGetPlaceholderConfigResponse(): GetPlaceholderConfigResponse {\n    return { configs: {} };\n}\nexport const GetPlaceholderConfigResponse = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetPlaceholderConfigResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetPlaceholderConfigResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = GetPlaceholderConfigResponse_ConfigsEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.configs[entry1.key] = entry1.value;\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetPlaceholderConfigResponse {\n        return {\n            configs: isObject(object.configs)\n                ? Object.entries(object.configs).reduce<{\n                    [key: string]: string;\n                }>((acc, [key, value]) => {\n                    acc[key] = String(value);\n                    return acc;\n                }, {})\n                : {},\n        };\n    },\n    toJSON(message: GetPlaceholderConfigResponse): unknown {\n        const obj: any = {};\n        obj.configs = {};\n        if (message.configs) {\n            Object.entries(message.configs).forEach(([k, v]) => {\n                obj.configs[k] = v;\n            });\n        }\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetPlaceholderConfigResponse>, I>>(object: I): GetPlaceholderConfigResponse {\n        const message = createBaseGetPlaceholderConfigResponse();\n        message.configs = Object.entries(object.configs ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        return message;\n    },\n};\nfunction createBaseGetPlaceholderConfigResponse_ConfigsEntry(): GetPlaceholderConfigResponse_ConfigsEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const GetPlaceholderConfigResponse_ConfigsEntry = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetPlaceholderConfigResponse_ConfigsEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetPlaceholderConfigResponse_ConfigsEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetPlaceholderConfigResponse_ConfigsEntry {\n        return {\n            key: isSet(object.key) ? String(object.key) : \"\",\n            value: isSet(object.value) ? String(object.value) : \"\",\n        };\n    },\n    toJSON(message: GetPlaceholderConfigResponse_ConfigsEntry): unknown {\n        const obj: any = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetPlaceholderConfigResponse_ConfigsEntry>, I>>(object: I): GetPlaceholderConfigResponse_ConfigsEntry {\n        const message = createBaseGetPlaceholderConfigResponse_ConfigsEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetInitializationConfigRequest(): GetInitializationConfigRequest {\n    return {};\n}\nexport const GetInitializationConfigRequest = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetInitializationConfigRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetInitializationConfigRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_: any): GetInitializationConfigRequest {\n        return {};\n    },\n    toJSON(_: GetInitializationConfigRequest): unknown {\n        const obj: any = {};\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetInitializationConfigRequest>, I>>(_: I): GetInitializationConfigRequest {\n        const message = createBaseGetInitializationConfigRequest();\n        return message;\n    },\n};\nfunction createBaseGetInitializationConfigResponse(): GetInitializationConfigResponse {\n    return {\n        appVendorUuidOptIn: false,\n        watermarkEnabled: false,\n        childrenProtectionActRestricted: false,\n        legalPrompt: undefined,\n    };\n}\nexport const GetInitializationConfigResponse = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetInitializationConfigResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetInitializationConfigResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVendorUuidOptIn = reader.bool();\n                    break;\n                case 2:\n                    message.watermarkEnabled = reader.bool();\n                    break;\n                case 3:\n                    message.childrenProtectionActRestricted = reader.bool();\n                    break;\n                case 4:\n                    message.legalPrompt = LegalPrompt.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetInitializationConfigResponse {\n        return {\n            appVendorUuidOptIn: isSet(object.appVendorUuidOptIn) ? Boolean(object.appVendorUuidOptIn) : false,\n            watermarkEnabled: isSet(object.watermarkEnabled) ? Boolean(object.watermarkEnabled) : false,\n            childrenProtectionActRestricted: isSet(object.childrenProtectionActRestricted)\n                ? Boolean(object.childrenProtectionActRestricted)\n                : false,\n            legalPrompt: isSet(object.legalPrompt) ? LegalPrompt.fromJSON(object.legalPrompt) : undefined,\n        };\n    },\n    toJSON(message: GetInitializationConfigResponse): unknown {\n        const obj: any = {};\n        message.appVendorUuidOptIn !== undefined && (obj.appVendorUuidOptIn = message.appVendorUuidOptIn);\n        message.watermarkEnabled !== undefined && (obj.watermarkEnabled = message.watermarkEnabled);\n        message.childrenProtectionActRestricted !== undefined &&\n            (obj.childrenProtectionActRestricted = message.childrenProtectionActRestricted);\n        message.legalPrompt !== undefined &&\n            (obj.legalPrompt = message.legalPrompt ? LegalPrompt.toJSON(message.legalPrompt) : undefined);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetInitializationConfigResponse>, I>>(object: I): GetInitializationConfigResponse {\n        const message = createBaseGetInitializationConfigResponse();\n        message.appVendorUuidOptIn = object.appVendorUuidOptIn ?? false;\n        message.watermarkEnabled = object.watermarkEnabled ?? false;\n        message.childrenProtectionActRestricted = object.childrenProtectionActRestricted ?? false;\n        message.legalPrompt =\n            object.legalPrompt !== undefined && object.legalPrompt !== null\n                ? LegalPrompt.fromPartial(object.legalPrompt)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseSetOperationalMetricsRequest(): SetOperationalMetricsRequest {\n    return { metrics: undefined };\n}\nexport const SetOperationalMetricsRequest = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): SetOperationalMetricsRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSetOperationalMetricsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.metrics = OperationalMetricsBundle.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): SetOperationalMetricsRequest {\n        return {\n            metrics: isSet(object.metrics) ? OperationalMetricsBundle.fromJSON(object.metrics) : undefined,\n        };\n    },\n    toJSON(message: SetOperationalMetricsRequest): unknown {\n        const obj: any = {};\n        message.metrics !== undefined &&\n            (obj.metrics = message.metrics ? OperationalMetricsBundle.toJSON(message.metrics) : undefined);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<SetOperationalMetricsRequest>, I>>(object: I): SetOperationalMetricsRequest {\n        const message = createBaseSetOperationalMetricsRequest();\n        message.metrics =\n            object.metrics !== undefined && object.metrics !== null\n                ? OperationalMetricsBundle.fromPartial(object.metrics)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseSetOperationalMetricsResponse(): SetOperationalMetricsResponse {\n    return {};\n}\nexport const SetOperationalMetricsResponse = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): SetOperationalMetricsResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSetOperationalMetricsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_: any): SetOperationalMetricsResponse {\n        return {};\n    },\n    toJSON(_: SetOperationalMetricsResponse): unknown {\n        const obj: any = {};\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<SetOperationalMetricsResponse>, I>>(_: I): SetOperationalMetricsResponse {\n        const message = createBaseSetOperationalMetricsResponse();\n        return message;\n    },\n};\nfunction createBaseSetBusinessEventsRequest(): SetBusinessEventsRequest {\n    return { batchEvents: undefined };\n}\nexport const SetBusinessEventsRequest = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): SetBusinessEventsRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSetBusinessEventsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.batchEvents = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): SetBusinessEventsRequest {\n        return {\n            batchEvents: isSet(object.batchEvents) ? Any.fromJSON(object.batchEvents) : undefined,\n        };\n    },\n    toJSON(message: SetBusinessEventsRequest): unknown {\n        const obj: any = {};\n        message.batchEvents !== undefined &&\n            (obj.batchEvents = message.batchEvents ? Any.toJSON(message.batchEvents) : undefined);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<SetBusinessEventsRequest>, I>>(object: I): SetBusinessEventsRequest {\n        const message = createBaseSetBusinessEventsRequest();\n        message.batchEvents =\n            object.batchEvents !== undefined && object.batchEvents !== null ? Any.fromPartial(object.batchEvents) : undefined;\n        return message;\n    },\n};\nfunction createBaseSetBusinessEventsResponse(): SetBusinessEventsResponse {\n    return {};\n}\nexport const SetBusinessEventsResponse = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): SetBusinessEventsResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSetBusinessEventsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_: any): SetBusinessEventsResponse {\n        return {};\n    },\n    toJSON(_: SetBusinessEventsResponse): unknown {\n        const obj: any = {};\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<SetBusinessEventsResponse>, I>>(_: I): SetBusinessEventsResponse {\n        const message = createBaseSetBusinessEventsResponse();\n        return message;\n    },\n};\nfunction createBaseSetExtensionBusinessEventsRequest(): SetExtensionBusinessEventsRequest {\n    return { events: [], extensionEventBase: undefined };\n}\nexport const SetExtensionBusinessEventsRequest = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): SetExtensionBusinessEventsRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSetExtensionBusinessEventsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Any.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.extensionEventBase = ExtensionEventBase.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): SetExtensionBusinessEventsRequest {\n        return {\n            events: Array.isArray(object?.events) ? object.events.map((e: any) => Any.fromJSON(e)) : [],\n            extensionEventBase: isSet(object.extensionEventBase)\n                ? ExtensionEventBase.fromJSON(object.extensionEventBase)\n                : undefined,\n        };\n    },\n    toJSON(message: SetExtensionBusinessEventsRequest): unknown {\n        const obj: any = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.extensionEventBase !== undefined &&\n            (obj.extensionEventBase = message.extensionEventBase\n                ? ExtensionEventBase.toJSON(message.extensionEventBase)\n                : undefined);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<SetExtensionBusinessEventsRequest>, I>>(object: I): SetExtensionBusinessEventsRequest {\n        const message = createBaseSetExtensionBusinessEventsRequest();\n        message.events = object.events?.map((e) => Any.fromPartial(e)) || [];\n        message.extensionEventBase =\n            object.extensionEventBase !== undefined && object.extensionEventBase !== null\n                ? ExtensionEventBase.fromPartial(object.extensionEventBase)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseSetExtensionBusinessEventsResponse(): SetExtensionBusinessEventsResponse {\n    return {};\n}\nexport const SetExtensionBusinessEventsResponse = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): SetExtensionBusinessEventsResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSetExtensionBusinessEventsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_: any): SetExtensionBusinessEventsResponse {\n        return {};\n    },\n    toJSON(_: SetExtensionBusinessEventsResponse): unknown {\n        const obj: any = {};\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<SetExtensionBusinessEventsResponse>, I>>(_: I): SetExtensionBusinessEventsResponse {\n        const message = createBaseSetExtensionBusinessEventsResponse();\n        return message;\n    },\n};\nexport interface Lenses {\n    GetGroup(request: GetGroupRequest): Promise<GetGroupResponse>;\n    GetGroupLens(request: GetGroupLensRequest): Promise<GetGroupLensResponse>;\n    BatchGetGroupLens(request: BatchGetGroupLensRequest): Promise<BatchGetGroupLensResponse>;\n    GetPlaceholderConfig(request: GetPlaceholderConfigRequest): Promise<GetPlaceholderConfigResponse>;\n}\nexport interface Metrics {\n    SetOperationalMetrics(request: SetOperationalMetricsRequest): Promise<SetOperationalMetricsResponse>;\n    SetBusinessEvents(request: SetBusinessEventsRequest): Promise<SetBusinessEventsResponse>;\n    SetExtensionBusinessEvents(request: SetExtensionBusinessEventsRequest): Promise<SetExtensionBusinessEventsResponse>;\n    GetInitializationConfig(request: GetInitializationConfigRequest): Promise<GetInitializationConfigResponse>;\n}\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isObject(value: any): boolean {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface RankingData {\n    sessionId: string;\n    locale: string;\n    osType: RankingData_OSType;\n    connectivityType: RankingData_ConnectivityType;\n}\nexport enum RankingData_OSType {\n    OS_TYPE_UNSET = \"OS_TYPE_UNSET\",\n    OS_TYPE_ANDROID = \"OS_TYPE_ANDROID\",\n    OS_TYPE_IOS = \"OS_TYPE_IOS\",\n    OS_TYPE_IPAD_OS = \"OS_TYPE_IPAD_OS\",\n    OS_TYPE_MAC_OS = \"OS_TYPE_MAC_OS\",\n    OS_TYPE_WINDOWS = \"OS_TYPE_WINDOWS\",\n    OS_TYPE_LINUX = \"OS_TYPE_LINUX\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function rankingData_OSTypeFromJSON(object: any): RankingData_OSType {\n    switch (object) {\n        case 0:\n        case \"OS_TYPE_UNSET\":\n            return RankingData_OSType.OS_TYPE_UNSET;\n        case 1:\n        case \"OS_TYPE_ANDROID\":\n            return RankingData_OSType.OS_TYPE_ANDROID;\n        case 2:\n        case \"OS_TYPE_IOS\":\n            return RankingData_OSType.OS_TYPE_IOS;\n        case 3:\n        case \"OS_TYPE_IPAD_OS\":\n            return RankingData_OSType.OS_TYPE_IPAD_OS;\n        case 4:\n        case \"OS_TYPE_MAC_OS\":\n            return RankingData_OSType.OS_TYPE_MAC_OS;\n        case 5:\n        case \"OS_TYPE_WINDOWS\":\n            return RankingData_OSType.OS_TYPE_WINDOWS;\n        case 6:\n        case \"OS_TYPE_LINUX\":\n            return RankingData_OSType.OS_TYPE_LINUX;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return RankingData_OSType.UNRECOGNIZED;\n    }\n}\nexport function rankingData_OSTypeToJSON(object: RankingData_OSType): string {\n    switch (object) {\n        case RankingData_OSType.OS_TYPE_UNSET:\n            return \"OS_TYPE_UNSET\";\n        case RankingData_OSType.OS_TYPE_ANDROID:\n            return \"OS_TYPE_ANDROID\";\n        case RankingData_OSType.OS_TYPE_IOS:\n            return \"OS_TYPE_IOS\";\n        case RankingData_OSType.OS_TYPE_IPAD_OS:\n            return \"OS_TYPE_IPAD_OS\";\n        case RankingData_OSType.OS_TYPE_MAC_OS:\n            return \"OS_TYPE_MAC_OS\";\n        case RankingData_OSType.OS_TYPE_WINDOWS:\n            return \"OS_TYPE_WINDOWS\";\n        case RankingData_OSType.OS_TYPE_LINUX:\n            return \"OS_TYPE_LINUX\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport function rankingData_OSTypeToNumber(object: RankingData_OSType): number {\n    switch (object) {\n        case RankingData_OSType.OS_TYPE_UNSET:\n            return 0;\n        case RankingData_OSType.OS_TYPE_ANDROID:\n            return 1;\n        case RankingData_OSType.OS_TYPE_IOS:\n            return 2;\n        case RankingData_OSType.OS_TYPE_IPAD_OS:\n            return 3;\n        case RankingData_OSType.OS_TYPE_MAC_OS:\n            return 4;\n        case RankingData_OSType.OS_TYPE_WINDOWS:\n            return 5;\n        case RankingData_OSType.OS_TYPE_LINUX:\n            return 6;\n        default:\n            return 0;\n    }\n}\nexport enum RankingData_ConnectivityType {\n    CONNECTIVITY_TYPE_UNSET = \"CONNECTIVITY_TYPE_UNSET\",\n    CONNECTIVITY_TYPE_WIFI = \"CONNECTIVITY_TYPE_WIFI\",\n    CONNECTIVITY_TYPE_MOBILE = \"CONNECTIVITY_TYPE_MOBILE\",\n    CONNECTIVITY_TYPE_UNREACHABLE = \"CONNECTIVITY_TYPE_UNREACHABLE\",\n    CONNECTIVITY_TYPE_BLUETOOTH = \"CONNECTIVITY_TYPE_BLUETOOTH\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function rankingData_ConnectivityTypeFromJSON(object: any): RankingData_ConnectivityType {\n    switch (object) {\n        case 0:\n        case \"CONNECTIVITY_TYPE_UNSET\":\n            return RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNSET;\n        case 1:\n        case \"CONNECTIVITY_TYPE_WIFI\":\n            return RankingData_ConnectivityType.CONNECTIVITY_TYPE_WIFI;\n        case 2:\n        case \"CONNECTIVITY_TYPE_MOBILE\":\n            return RankingData_ConnectivityType.CONNECTIVITY_TYPE_MOBILE;\n        case 3:\n        case \"CONNECTIVITY_TYPE_UNREACHABLE\":\n            return RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNREACHABLE;\n        case 4:\n        case \"CONNECTIVITY_TYPE_BLUETOOTH\":\n            return RankingData_ConnectivityType.CONNECTIVITY_TYPE_BLUETOOTH;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return RankingData_ConnectivityType.UNRECOGNIZED;\n    }\n}\nexport function rankingData_ConnectivityTypeToJSON(object: RankingData_ConnectivityType): string {\n    switch (object) {\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNSET:\n            return \"CONNECTIVITY_TYPE_UNSET\";\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_WIFI:\n            return \"CONNECTIVITY_TYPE_WIFI\";\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_MOBILE:\n            return \"CONNECTIVITY_TYPE_MOBILE\";\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNREACHABLE:\n            return \"CONNECTIVITY_TYPE_UNREACHABLE\";\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_BLUETOOTH:\n            return \"CONNECTIVITY_TYPE_BLUETOOTH\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport function rankingData_ConnectivityTypeToNumber(object: RankingData_ConnectivityType): number {\n    switch (object) {\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNSET:\n            return 0;\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_WIFI:\n            return 1;\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_MOBILE:\n            return 2;\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNREACHABLE:\n            return 3;\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_BLUETOOTH:\n            return 4;\n        default:\n            return 0;\n    }\n}\nfunction createBaseRankingData(): RankingData {\n    return {\n        sessionId: \"\",\n        locale: \"\",\n        osType: RankingData_OSType.OS_TYPE_UNSET,\n        connectivityType: RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNSET,\n    };\n}\nexport const RankingData = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): RankingData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRankingData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sessionId = reader.string();\n                    break;\n                case 2:\n                    message.locale = reader.string();\n                    break;\n                case 3:\n                    message.osType = rankingData_OSTypeFromJSON(reader.int32());\n                    break;\n                case 4:\n                    message.connectivityType = rankingData_ConnectivityTypeFromJSON(reader.int32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): RankingData {\n        return {\n            sessionId: isSet(object.sessionId) ? String(object.sessionId) : \"\",\n            locale: isSet(object.locale) ? String(object.locale) : \"\",\n            osType: isSet(object.osType) ? rankingData_OSTypeFromJSON(object.osType) : RankingData_OSType.OS_TYPE_UNSET,\n            connectivityType: isSet(object.connectivityType)\n                ? rankingData_ConnectivityTypeFromJSON(object.connectivityType)\n                : RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNSET,\n        };\n    },\n    toJSON(message: RankingData): unknown {\n        const obj: any = {};\n        message.sessionId !== undefined && (obj.sessionId = message.sessionId);\n        message.locale !== undefined && (obj.locale = message.locale);\n        message.osType !== undefined && (obj.osType = rankingData_OSTypeToJSON(message.osType));\n        message.connectivityType !== undefined &&\n            (obj.connectivityType = rankingData_ConnectivityTypeToJSON(message.connectivityType));\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<RankingData>, I>>(object: I): RankingData {\n        const message = createBaseRankingData();\n        message.sessionId = object.sessionId ?? \"\";\n        message.locale = object.locale ?? \"\";\n        message.osType = object.osType ?? RankingData_OSType.OS_TYPE_UNSET;\n        message.connectivityType = object.connectivityType ?? RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNSET;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface LegalPrompt {\n    documents: LegalDocument[];\n    disabled: boolean;\n}\nexport interface LegalDocument {\n    type: LegalDocument_Type;\n    webUrl: string;\n    version: string;\n    timestamp: Date | undefined;\n}\nexport enum LegalDocument_Type {\n    UNSET = \"UNSET\",\n    TERMS_OF_SERVICE = \"TERMS_OF_SERVICE\",\n    PRIVACY_POLICY = \"PRIVACY_POLICY\",\n    LEARN_MORE = \"LEARN_MORE\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function legalDocument_TypeFromJSON(object: any): LegalDocument_Type {\n    switch (object) {\n        case 0:\n        case \"UNSET\":\n            return LegalDocument_Type.UNSET;\n        case 1:\n        case \"TERMS_OF_SERVICE\":\n            return LegalDocument_Type.TERMS_OF_SERVICE;\n        case 2:\n        case \"PRIVACY_POLICY\":\n            return LegalDocument_Type.PRIVACY_POLICY;\n        case 3:\n        case \"LEARN_MORE\":\n            return LegalDocument_Type.LEARN_MORE;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LegalDocument_Type.UNRECOGNIZED;\n    }\n}\nexport function legalDocument_TypeToJSON(object: LegalDocument_Type): string {\n    switch (object) {\n        case LegalDocument_Type.UNSET:\n            return \"UNSET\";\n        case LegalDocument_Type.TERMS_OF_SERVICE:\n            return \"TERMS_OF_SERVICE\";\n        case LegalDocument_Type.PRIVACY_POLICY:\n            return \"PRIVACY_POLICY\";\n        case LegalDocument_Type.LEARN_MORE:\n            return \"LEARN_MORE\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport function legalDocument_TypeToNumber(object: LegalDocument_Type): number {\n    switch (object) {\n        case LegalDocument_Type.UNSET:\n            return 0;\n        case LegalDocument_Type.TERMS_OF_SERVICE:\n            return 1;\n        case LegalDocument_Type.PRIVACY_POLICY:\n            return 2;\n        case LegalDocument_Type.LEARN_MORE:\n            return 3;\n        default:\n            return 0;\n    }\n}\nfunction createBaseLegalPrompt(): LegalPrompt {\n    return { documents: [], disabled: false };\n}\nexport const LegalPrompt = {\n    encode(message: LegalPrompt, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.documents) {\n            LegalDocument.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.disabled === true) {\n            writer.uint32(16).bool(message.disabled);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LegalPrompt {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLegalPrompt();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.documents.push(LegalDocument.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.disabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): LegalPrompt {\n        return {\n            documents: Array.isArray(object?.documents) ? object.documents.map((e: any) => LegalDocument.fromJSON(e)) : [],\n            disabled: isSet(object.disabled) ? Boolean(object.disabled) : false,\n        };\n    },\n    toJSON(message: LegalPrompt): unknown {\n        const obj: any = {};\n        if (message.documents) {\n            obj.documents = message.documents.map((e) => (e ? LegalDocument.toJSON(e) : undefined));\n        }\n        else {\n            obj.documents = [];\n        }\n        message.disabled !== undefined && (obj.disabled = message.disabled);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<LegalPrompt>, I>>(object: I): LegalPrompt {\n        const message = createBaseLegalPrompt();\n        message.documents = object.documents?.map((e) => LegalDocument.fromPartial(e)) || [];\n        message.disabled = object.disabled ?? false;\n        return message;\n    },\n};\nfunction createBaseLegalDocument(): LegalDocument {\n    return { type: LegalDocument_Type.UNSET, webUrl: \"\", version: \"\", timestamp: undefined };\n}\nexport const LegalDocument = {\n    encode(message: LegalDocument, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.type !== LegalDocument_Type.UNSET) {\n            writer.uint32(8).int32(legalDocument_TypeToNumber(message.type));\n        }\n        if (message.webUrl !== \"\") {\n            writer.uint32(18).string(message.webUrl);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(26).string(message.version);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LegalDocument {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLegalDocument();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = legalDocument_TypeFromJSON(reader.int32());\n                    break;\n                case 2:\n                    message.webUrl = reader.string();\n                    break;\n                case 3:\n                    message.version = reader.string();\n                    break;\n                case 4:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): LegalDocument {\n        return {\n            type: isSet(object.type) ? legalDocument_TypeFromJSON(object.type) : LegalDocument_Type.UNSET,\n            webUrl: isSet(object.webUrl) ? String(object.webUrl) : \"\",\n            version: isSet(object.version) ? String(object.version) : \"\",\n            timestamp: isSet(object.timestamp) ? fromJsonTimestamp(object.timestamp) : undefined,\n        };\n    },\n    toJSON(message: LegalDocument): unknown {\n        const obj: any = {};\n        message.type !== undefined && (obj.type = legalDocument_TypeToJSON(message.type));\n        message.webUrl !== undefined && (obj.webUrl = message.webUrl);\n        message.version !== undefined && (obj.version = message.version);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp.toISOString());\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<LegalDocument>, I>>(object: I): LegalDocument {\n        const message = createBaseLegalDocument();\n        message.type = object.type ?? LegalDocument_Type.UNSET;\n        message.webUrl = object.webUrl ?? \"\";\n        message.version = object.version ?? \"\";\n        message.timestamp = object.timestamp ?? undefined;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction toTimestamp(date: Date): Timestamp {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t: Timestamp): Date {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o: any): Date {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface OperationalMetric {\n    name: string;\n    timestamp: Date | undefined;\n    metric?: {\n        $case: \"count\";\n        count: number;\n    } | {\n        $case: \"latencyMillis\";\n        latencyMillis: number;\n    } | {\n        $case: \"histogram\";\n        histogram: number;\n    };\n}\nexport interface OperationalMetricsBundle {\n    metrics: OperationalMetric[];\n}\nfunction createBaseOperationalMetric(): OperationalMetric {\n    return { name: \"\", timestamp: undefined, metric: undefined };\n}\nexport const OperationalMetric = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): OperationalMetric {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOperationalMetric();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.metric = { $case: \"count\", count: longToNumber(reader.uint64() as Long) };\n                    break;\n                case 4:\n                    message.metric = { $case: \"latencyMillis\", latencyMillis: longToNumber(reader.uint64() as Long) };\n                    break;\n                case 5:\n                    message.metric = { $case: \"histogram\", histogram: longToNumber(reader.int64() as Long) };\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): OperationalMetric {\n        return {\n            name: isSet(object.name) ? String(object.name) : \"\",\n            timestamp: isSet(object.timestamp) ? fromJsonTimestamp(object.timestamp) : undefined,\n            metric: isSet(object.count)\n                ? { $case: \"count\", count: Number(object.count) }\n                : isSet(object.latencyMillis)\n                    ? { $case: \"latencyMillis\", latencyMillis: Number(object.latencyMillis) }\n                    : isSet(object.histogram)\n                        ? { $case: \"histogram\", histogram: Number(object.histogram) }\n                        : undefined,\n        };\n    },\n    toJSON(message: OperationalMetric): unknown {\n        const obj: any = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp.toISOString());\n        message.metric?.$case === \"count\" && (obj.count = Math.round(message.metric?.count));\n        message.metric?.$case === \"latencyMillis\" && (obj.latencyMillis = Math.round(message.metric?.latencyMillis));\n        message.metric?.$case === \"histogram\" && (obj.histogram = Math.round(message.metric?.histogram));\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<OperationalMetric>, I>>(object: I): OperationalMetric {\n        const message = createBaseOperationalMetric();\n        message.name = object.name ?? \"\";\n        message.timestamp = object.timestamp ?? undefined;\n        if (object.metric?.$case === \"count\" && object.metric?.count !== undefined && object.metric?.count !== null) {\n            message.metric = { $case: \"count\", count: object.metric.count };\n        }\n        if (object.metric?.$case === \"latencyMillis\" &&\n            object.metric?.latencyMillis !== undefined &&\n            object.metric?.latencyMillis !== null) {\n            message.metric = { $case: \"latencyMillis\", latencyMillis: object.metric.latencyMillis };\n        }\n        if (object.metric?.$case === \"histogram\" &&\n            object.metric?.histogram !== undefined &&\n            object.metric?.histogram !== null) {\n            message.metric = { $case: \"histogram\", histogram: object.metric.histogram };\n        }\n        return message;\n    },\n};\nfunction createBaseOperationalMetricsBundle(): OperationalMetricsBundle {\n    return { metrics: [] };\n}\nexport const OperationalMetricsBundle = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): OperationalMetricsBundle {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOperationalMetricsBundle();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.metrics.push(OperationalMetric.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): OperationalMetricsBundle {\n        return {\n            metrics: Array.isArray(object?.metrics) ? object.metrics.map((e: any) => OperationalMetric.fromJSON(e)) : [],\n        };\n    },\n    toJSON(message: OperationalMetricsBundle): unknown {\n        const obj: any = {};\n        if (message.metrics) {\n            obj.metrics = message.metrics.map((e) => (e ? OperationalMetric.toJSON(e) : undefined));\n        }\n        else {\n            obj.metrics = [];\n        }\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<OperationalMetricsBundle>, I>>(object: I): OperationalMetricsBundle {\n        const message = createBaseOperationalMetricsBundle();\n        message.metrics = object.metrics?.map((e) => OperationalMetric.fromPartial(e)) || [];\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction fromTimestamp(t: Timestamp): Date {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o: any): Date {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport enum CameraKitFlavor {\n    CAMERA_KIT_FLAVOR_UNSET = \"CAMERA_KIT_FLAVOR_UNSET\",\n    CAMERA_KIT_FLAVOR_DEBUG = \"CAMERA_KIT_FLAVOR_DEBUG\",\n    CAMERA_KIT_FLAVOR_RELEASE = \"CAMERA_KIT_FLAVOR_RELEASE\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function cameraKitFlavorFromJSON(object: any): CameraKitFlavor {\n    switch (object) {\n        case 0:\n        case \"CAMERA_KIT_FLAVOR_UNSET\":\n            return CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET;\n        case 1:\n        case \"CAMERA_KIT_FLAVOR_DEBUG\":\n            return CameraKitFlavor.CAMERA_KIT_FLAVOR_DEBUG;\n        case 2:\n        case \"CAMERA_KIT_FLAVOR_RELEASE\":\n            return CameraKitFlavor.CAMERA_KIT_FLAVOR_RELEASE;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CameraKitFlavor.UNRECOGNIZED;\n    }\n}\nexport function cameraKitFlavorToJSON(object: CameraKitFlavor): string {\n    switch (object) {\n        case CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET:\n            return \"CAMERA_KIT_FLAVOR_UNSET\";\n        case CameraKitFlavor.CAMERA_KIT_FLAVOR_DEBUG:\n            return \"CAMERA_KIT_FLAVOR_DEBUG\";\n        case CameraKitFlavor.CAMERA_KIT_FLAVOR_RELEASE:\n            return \"CAMERA_KIT_FLAVOR_RELEASE\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport function cameraKitFlavorToNumber(object: CameraKitFlavor): number {\n    switch (object) {\n        case CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET:\n            return 0;\n        case CameraKitFlavor.CAMERA_KIT_FLAVOR_DEBUG:\n            return 1;\n        case CameraKitFlavor.CAMERA_KIT_FLAVOR_RELEASE:\n            return 2;\n        default:\n            return 0;\n    }\n}\nexport enum CameraKitConnectivityType {\n    CAMERA_KIT_CONNECTIVITY_TYPE_UNSET = \"CAMERA_KIT_CONNECTIVITY_TYPE_UNSET\",\n    CAMERA_KIT_CONNECTIVITY_TYPE_WIFI = \"CAMERA_KIT_CONNECTIVITY_TYPE_WIFI\",\n    CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE = \"CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE\",\n    CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE = \"CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE\",\n    CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH = \"CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function cameraKitConnectivityTypeFromJSON(object: any): CameraKitConnectivityType {\n    switch (object) {\n        case 0:\n        case \"CAMERA_KIT_CONNECTIVITY_TYPE_UNSET\":\n            return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET;\n        case 1:\n        case \"CAMERA_KIT_CONNECTIVITY_TYPE_WIFI\":\n            return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_WIFI;\n        case 2:\n        case \"CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE\":\n            return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE;\n        case 3:\n        case \"CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE\":\n            return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE;\n        case 4:\n        case \"CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH\":\n            return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CameraKitConnectivityType.UNRECOGNIZED;\n    }\n}\nexport function cameraKitConnectivityTypeToJSON(object: CameraKitConnectivityType): string {\n    switch (object) {\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET:\n            return \"CAMERA_KIT_CONNECTIVITY_TYPE_UNSET\";\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_WIFI:\n            return \"CAMERA_KIT_CONNECTIVITY_TYPE_WIFI\";\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE:\n            return \"CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE\";\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE:\n            return \"CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE\";\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH:\n            return \"CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport function cameraKitConnectivityTypeToNumber(object: CameraKitConnectivityType): number {\n    switch (object) {\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET:\n            return 0;\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_WIFI:\n            return 1;\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE:\n            return 2;\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE:\n            return 3;\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH:\n            return 4;\n        default:\n            return 0;\n    }\n}\nexport enum CameraKitEnvironment {\n    CAMERA_KIT_ENVIRONMENT_UNSET = \"CAMERA_KIT_ENVIRONMENT_UNSET\",\n    CAMERA_KIT_ENVIRONMENT_STAGING = \"CAMERA_KIT_ENVIRONMENT_STAGING\",\n    CAMERA_KIT_ENVIRONMENT_PRODUCTION = \"CAMERA_KIT_ENVIRONMENT_PRODUCTION\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function cameraKitEnvironmentFromJSON(object: any): CameraKitEnvironment {\n    switch (object) {\n        case 0:\n        case \"CAMERA_KIT_ENVIRONMENT_UNSET\":\n            return CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_UNSET;\n        case 1:\n        case \"CAMERA_KIT_ENVIRONMENT_STAGING\":\n            return CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_STAGING;\n        case 2:\n        case \"CAMERA_KIT_ENVIRONMENT_PRODUCTION\":\n            return CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_PRODUCTION;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CameraKitEnvironment.UNRECOGNIZED;\n    }\n}\nexport function cameraKitEnvironmentToJSON(object: CameraKitEnvironment): string {\n    switch (object) {\n        case CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_UNSET:\n            return \"CAMERA_KIT_ENVIRONMENT_UNSET\";\n        case CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_STAGING:\n            return \"CAMERA_KIT_ENVIRONMENT_STAGING\";\n        case CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_PRODUCTION:\n            return \"CAMERA_KIT_ENVIRONMENT_PRODUCTION\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport function cameraKitEnvironmentToNumber(object: CameraKitEnvironment): number {\n    switch (object) {\n        case CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_UNSET:\n            return 0;\n        case CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_STAGING:\n            return 1;\n        case CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_PRODUCTION:\n            return 2;\n        default:\n            return 0;\n    }\n}\nexport interface ExtensionEventBase {\n    extensionName: string;\n    extensionVersion: string;\n    deviceCluster: number;\n    cameraKitVersion: string;\n    lensCoreVersion: string;\n    deviceModel: string;\n    cameraKitFlavor: CameraKitFlavor;\n    appId: string;\n    deviceConnectivity: CameraKitConnectivityType;\n    sessionId: string;\n    cameraKitEnvironment: CameraKitEnvironment;\n}\nfunction createBaseExtensionEventBase(): ExtensionEventBase {\n    return {\n        extensionName: \"\",\n        extensionVersion: \"\",\n        deviceCluster: 0,\n        cameraKitVersion: \"\",\n        lensCoreVersion: \"\",\n        deviceModel: \"\",\n        cameraKitFlavor: CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET,\n        appId: \"\",\n        deviceConnectivity: CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET,\n        sessionId: \"\",\n        cameraKitEnvironment: CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_UNSET,\n    };\n}\nexport const ExtensionEventBase = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExtensionEventBase {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExtensionEventBase();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.extensionName = reader.string();\n                    break;\n                case 2:\n                    message.extensionVersion = reader.string();\n                    break;\n                case 3:\n                    message.deviceCluster = longToNumber(reader.int64() as Long);\n                    break;\n                case 4:\n                    message.cameraKitVersion = reader.string();\n                    break;\n                case 5:\n                    message.lensCoreVersion = reader.string();\n                    break;\n                case 6:\n                    message.deviceModel = reader.string();\n                    break;\n                case 7:\n                    message.cameraKitFlavor = cameraKitFlavorFromJSON(reader.int32());\n                    break;\n                case 8:\n                    message.appId = reader.string();\n                    break;\n                case 9:\n                    message.deviceConnectivity = cameraKitConnectivityTypeFromJSON(reader.int32());\n                    break;\n                case 10:\n                    message.sessionId = reader.string();\n                    break;\n                case 11:\n                    message.cameraKitEnvironment = cameraKitEnvironmentFromJSON(reader.int32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): ExtensionEventBase {\n        return {\n            extensionName: isSet(object.extensionName) ? String(object.extensionName) : \"\",\n            extensionVersion: isSet(object.extensionVersion) ? String(object.extensionVersion) : \"\",\n            deviceCluster: isSet(object.deviceCluster) ? Number(object.deviceCluster) : 0,\n            cameraKitVersion: isSet(object.cameraKitVersion) ? String(object.cameraKitVersion) : \"\",\n            lensCoreVersion: isSet(object.lensCoreVersion) ? String(object.lensCoreVersion) : \"\",\n            deviceModel: isSet(object.deviceModel) ? String(object.deviceModel) : \"\",\n            cameraKitFlavor: isSet(object.cameraKitFlavor)\n                ? cameraKitFlavorFromJSON(object.cameraKitFlavor)\n                : CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET,\n            appId: isSet(object.appId) ? String(object.appId) : \"\",\n            deviceConnectivity: isSet(object.deviceConnectivity)\n                ? cameraKitConnectivityTypeFromJSON(object.deviceConnectivity)\n                : CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET,\n            sessionId: isSet(object.sessionId) ? String(object.sessionId) : \"\",\n            cameraKitEnvironment: isSet(object.cameraKitEnvironment)\n                ? cameraKitEnvironmentFromJSON(object.cameraKitEnvironment)\n                : CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_UNSET,\n        };\n    },\n    toJSON(message: ExtensionEventBase): unknown {\n        const obj: any = {};\n        message.extensionName !== undefined && (obj.extensionName = message.extensionName);\n        message.extensionVersion !== undefined && (obj.extensionVersion = message.extensionVersion);\n        message.deviceCluster !== undefined && (obj.deviceCluster = Math.round(message.deviceCluster));\n        message.cameraKitVersion !== undefined && (obj.cameraKitVersion = message.cameraKitVersion);\n        message.lensCoreVersion !== undefined && (obj.lensCoreVersion = message.lensCoreVersion);\n        message.deviceModel !== undefined && (obj.deviceModel = message.deviceModel);\n        message.cameraKitFlavor !== undefined && (obj.cameraKitFlavor = cameraKitFlavorToJSON(message.cameraKitFlavor));\n        message.appId !== undefined && (obj.appId = message.appId);\n        message.deviceConnectivity !== undefined &&\n            (obj.deviceConnectivity = cameraKitConnectivityTypeToJSON(message.deviceConnectivity));\n        message.sessionId !== undefined && (obj.sessionId = message.sessionId);\n        message.cameraKitEnvironment !== undefined &&\n            (obj.cameraKitEnvironment = cameraKitEnvironmentToJSON(message.cameraKitEnvironment));\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExtensionEventBase>, I>>(object: I): ExtensionEventBase {\n        const message = createBaseExtensionEventBase();\n        message.extensionName = object.extensionName ?? \"\";\n        message.extensionVersion = object.extensionVersion ?? \"\";\n        message.deviceCluster = object.deviceCluster ?? 0;\n        message.cameraKitVersion = object.cameraKitVersion ?? \"\";\n        message.lensCoreVersion = object.lensCoreVersion ?? \"\";\n        message.deviceModel = object.deviceModel ?? \"\";\n        message.cameraKitFlavor = object.cameraKitFlavor ?? CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET;\n        message.appId = object.appId ?? \"\";\n        message.deviceConnectivity =\n            object.deviceConnectivity ?? CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET;\n        message.sessionId = object.sessionId ?? \"\";\n        message.cameraKitEnvironment = object.cameraKitEnvironment ?? CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_UNSET;\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n", "import { Injectable } from \"../dependency-injection/Injectable\";\n\nexport class PageVisibility {\n    private onHiddenHandlers = new Set<() => void>();\n    private onVisibleHandlers = new Set<() => void>();\n\n    private previousVisibilityState = document.visibilityState;\n    private visibilityTransition: false | DocumentVisibilityState = false;\n\n    constructor() {\n        this.onVisibilityChange = this.onVisibilityChange.bind(this);\n        this.isDuringVisibilityTransition = this.isDuringVisibilityTransition.bind(this);\n        this.onPageHidden = this.onPageHidden.bind(this);\n        this.onPageVisible = this.onPageVisible.bind(this);\n        this.destroy = this.destroy.bind(this);\n        document.addEventListener(\"visibilitychange\", this.onVisibilityChange);\n    }\n\n    isDuringVisibilityTransition(test: DocumentVisibilityState): boolean {\n        return test === this.visibilityTransition;\n    }\n\n    /**\n     * Run a function when the page is hidden. If this occurs due to tab / browser closure,\n     * only synchronous functions will run to completion.\n     *\n     * If the given handler throws an error, it will be silently swallowed.\n     *\n     * @param handler\n     * @returns A function which, when called, removes the function from the set of visibility change handlers.\n     */\n    onPageHidden(handler: () => void): () => void {\n        this.onHiddenHandlers.add(handler);\n        return () => this.onHiddenHandlers.delete(handler);\n    }\n\n    /**\n     * Run a function when the page is made visible.\n     *\n     * If the given handler throws an error, it will be silently swallowed.\n     *\n     * @param handler\n     * @returns A function which, when called, removes the function from the set of visibility change handlers.\n     */\n    onPageVisible(handler: () => void): () => void {\n        this.onVisibleHandlers.add(handler);\n        return () => this.onVisibleHandlers.delete(handler);\n    }\n\n    destroy() {\n        document.removeEventListener(\"visibilitychange\", this.onVisibilityChange);\n        this.onHiddenHandlers.clear();\n        this.onVisibleHandlers.clear();\n    }\n\n    private onVisibilityChange() {\n        const handlers =\n            this.previousVisibilityState === \"visible\" && document.visibilityState === \"hidden\"\n                ? this.onHiddenHandlers\n                : this.previousVisibilityState === \"hidden\" && document.visibilityState === \"visible\"\n                ? this.onVisibleHandlers\n                : new Set<() => void>();\n\n        this.visibilityTransition = document.visibilityState;\n\n        for (const handler of handlers) {\n            try {\n                handler();\n            } catch (error) {\n                // We'll do the same thing here that we would do if the handler was added directly as an event\n                // listener and dispatch an error event if we can.\n                if (typeof window !== \"undefined\") window.dispatchEvent(new CustomEvent(\"error\", { detail: error }));\n            }\n        }\n\n        this.previousVisibilityState = this.visibilityTransition;\n        this.visibilityTransition = false;\n    }\n}\n\nexport const pageVisibilityFactory = Injectable(\"pageVisibility\", () => new PageVisibility());\n", "import { PageVisibility } from \"../common/pageVisibility\";\nimport { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\nimport { createMappingHandler } from \"./mappingHandler\";\n\nconst delay = (duration: number) => new Promise<void>((resolve) => setTimeout(resolve, duration));\n\n/**\n * Limit the rate at which requests are passed to the next handler in the chain.\n *\n * During any page transitions to \"hidden\" – possibly indicating the page is about to terminate – requests will not be\n * rate limited, to ensure that they are not lost.\n *\n * TODO: If there are requests in the queue waiting to be sent when the page transitions to \"hidden,\" these will not\n * be immediately sent. This means there still is an edge case in which a request may be lost on page termination. This\n * can be fixed with changes to `createMappingHandler`.\n *\n * **NOTE:** Under the hood, requests that come in faster than the set `duration` are placed in an unbounded buffer.\n * If many requests are made quickly and `duration` is long, this could result in high memory usage. Keep this in mind\n * when using this handler.\n *\n * @param duration In milliseconds. Requests will be passed to the next handler in the chain no faster than this. That\n * is, if `duration` is `1000`, the next handler will be called at most once per second.\n * @param pageVisibility Determines whether to flush buffered requests when the page becomes hidden.\n * `false` value indicates that page visibility handling is avoided, while\n * a {@link PageVisibility} instance is used to subscribe to page visibility change events.\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createRateLimitingHandler = <Req, Res, Meta extends RequestMetadata>(\n    duration: number,\n    pageVisibility: PageVisibility | false\n): ChainableHandler<Req, Res, Req, Res, Meta> => {\n    let mostRecentSendTime: number | undefined = undefined;\n\n    const mappingHandler = createMappingHandler<Req, Req, Res, Meta>(\n        async (request) => {\n            if (mostRecentSendTime !== undefined) {\n                const millisUntilNextSend = duration - (Date.now() - mostRecentSendTime);\n                if (millisUntilNextSend > 0) await delay(millisUntilNextSend);\n            }\n            mostRecentSendTime = Date.now();\n            return request;\n        },\n        pageVisibility,\n        1\n    );\n\n    return (next) => (request, metadata) => {\n        // Requests may be made while the page is transitioning to hidden – for example, the page is being unloaded and\n        // we're reporting final metrics. In this case, we need to skip rate limiting and synchronously call `next`\n        // so that the request is not lost.\n        if (pageVisibility && pageVisibility.isDuringVisibilityTransition(\"hidden\")) return next(request, metadata);\n        return mappingHandler(next)(request, metadata);\n    };\n};\n", "import { Injectable } from \"../dependency-injection/Injectable\";\nimport { FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { cameraKitServiceFetchHandlerFactory } from \"../handlers/cameraKitServiceFetchHandlerFactory\";\nimport { HandlerChainBuilder } from \"../handlers/HandlerChainBuilder\";\nimport { createRateLimitingHandler } from \"../handlers/rateLimitingHandler\";\nimport { PageVisibility, pageVisibilityFactory } from \"../common/pageVisibility\";\n\nconst METRIC_REQUEST_RATE_LIMIT_MS = 1000; // send at most one metric request per second.\n\n/**\n * @internal\n */\nexport const metricsHandlerFactory = Injectable(\n    \"metricsHandler\",\n    [cameraKitServiceFetchHandlerFactory.token, pageVisibilityFactory.token] as const,\n    (fetchHandler: FetchHandler, pageVisibility: PageVisibility) => {\n        return new HandlerChainBuilder(fetchHandler).map(\n            createRateLimitingHandler(METRIC_REQUEST_RATE_LIMIT_MS, pageVisibility)\n        ).handler;\n    }\n);\n", "import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"../../handlers/HandlerChainBuilder\";\nimport { createBatchingHandler } from \"../../handlers/batchingHandler\";\nimport {\n    OperationalMetric,\n    OperationalMetricsBundle,\n} from \"../../generated-proto/pb_schema/camera_kit/v3/operational_metrics\";\nimport { SetOperationalMetricsRequest } from \"../../generated-proto/pb_schema/camera_kit/v3/service\";\nimport { createMappingHandler } from \"../../handlers/mappingHandler\";\nimport { PageVisibility, pageVisibilityFactory } from \"../../common/pageVisibility\";\nimport { metricsHandlerFactory } from \"../metricsHandler\";\nimport { CameraKitConfiguration, configurationToken } from \"../../configuration\";\nimport { Metric } from \"./Metric\";\n\ntype MetricsHandler = (metric: OperationalMetric) => Promise<void>;\ntype CountMetricValue = Extract<OperationalMetric[\"metric\"], { $case: \"count\" }>;\n\n// CameraKit's prod metrics endpoint.\n// See: https://github.sc-corp.net/Snapchat/pb_schema/blob/c390b9c/proto/camera_kit/v3/service.proto#L126\n\nconst DIMENSION_DELIMITER = \".\";\n\n// These values are (currently) arbitrarily selected.\n// TODO: Once we have gathered a sufficient quantity of metrics data, we should tune these numbers to ensure we're\n// operating with the right cost vs. alarming SLA vs. IDB storage size tradeoffs.\nconst METRIC_BATCH_MAX_SIZE = 100;\nconst METRIC_BATCH_MAX_AGE_MS = 5000;\n\n/**\n * Use this class to report operational metrics – these are metrics that describe aspects of the SDK's performance,\n * which may be used to assess and investigate operational issues.\n */\n/** @internal */\nexport class OperationalMetricsReporter {\n    constructor(private readonly metricsHandler: MetricsHandler) {}\n\n    /**\n     * Record a count.\n     *\n     * @param name\n     * @param count\n     * @param dimensions An optional Map containing dimensions which describe the metric.\n     * For example: `new Map([['status', '200']])`\n     * @returns Promise which resolves when the metric has been handled.\n     */\n    count(name: string, count: number, dimensions?: Map<string, string>): Promise<void> {\n        return this.record(name, { $case: \"count\", count }, dimensions);\n    }\n\n    /**\n     * Record a duration in milliseconds.\n     *\n     * @param name\n     * @param latencyMillis\n     * @param dimensions An optional Map containing dimensions which describe the metric.\n     * For example: `new Map([['status', '200']])`\n     * @returns Promise which resolves when the metric has been handled.\n     */\n    timer(name: string, latencyMillis: number, dimensions?: Map<string, string>): Promise<void> {\n        return this.record(name, { $case: \"latencyMillis\", latencyMillis }, dimensions);\n    }\n\n    /**\n     * Record a histogram.\n     *\n     * @param name\n     * @param histogram\n     * @param dimensions An optional Map containing dimensions which describe the metric.\n     * For example: `new Map([['status', '200']])`\n     * @returns Promise which resolves when the metric has been handled.\n     */\n    histogram(name: string, histogram: number, dimensions?: Map<string, string>): Promise<void> {\n        return this.record(name, { $case: \"histogram\", histogram }, dimensions);\n    }\n\n    /**\n     * TODO: This entire class in no longer necessary, since the new Timer/Count/Histogram classes offer a cleaner API\n     * for recording metrics. Once we migrate all operational metrics to use those new APIs, this class can be removed\n     * and call sites will just call the metrics handler directly.\n     *\n     * @param metric Any concrete Metric (e.g. Count, Timer, Histogram)\n     * @returns\n     */\n    async report(metric: Metric): Promise<void> {\n        await Promise.all(metric.toOperationalMetric().map((metric) => this.metricsHandler(metric)));\n    }\n\n    private record(\n        name: string,\n        metric: Required<OperationalMetric>[\"metric\"],\n        dimensions?: Map<string, string | number>\n    ): Promise<void> {\n        // The naming convention (metricName.dimensionName.dimensionValue.dimensionName.dimensionValue...) is mentioned\n        // the Graphene docs here https://wiki.sc-corp.net/display/METRICS/Graphene\n        // TODO: find explicit documentation of the API, if it exists.\n        const serializedDimensions = dimensions\n            ? `.${Array.from(dimensions.entries())\n                  .map((d) => d.join(DIMENSION_DELIMITER))\n                  .join(DIMENSION_DELIMITER)}`\n            : \"\";\n\n        return this.metricsHandler({\n            name: `${name}${serializedDimensions}`,\n            timestamp: new Date(),\n            metric,\n        });\n    }\n}\n\n/**\n * @internal\n */\nexport const operationalMetricReporterFactory = Injectable(\n    \"operationalMetricsReporter\",\n    [metricsHandlerFactory.token, pageVisibilityFactory.token, configurationToken] as const,\n    (metricsHandler: FetchHandler, pageVisibility: PageVisibility, configuration: CameraKitConfiguration) => {\n        const handler = new HandlerChainBuilder(metricsHandler)\n            .map(\n                createMappingHandler((metrics: OperationalMetricsBundle) => {\n                    const request: SetOperationalMetricsRequest = { metrics };\n                    return new Request(\n                        // eslint-disable-next-line max-len\n                        `https://${configuration.apiHostname}/com.snap.camerakit.v3.Metrics/metrics/operational_metrics`,\n                        {\n                            method: \"POST\",\n                            body: JSON.stringify(SetOperationalMetricsRequest.toJSON(request)),\n                            credentials: \"include\",\n\n                            // When this is true it makes fetch behave like `Navigator.sendBeacon` – that is, the\n                            // request will still be made even if the page terminates.\n                            // https://developer.mozilla.org/en-US/docs/Web/API/fetch\n                            keepalive: pageVisibility.isDuringVisibilityTransition(\"hidden\"),\n                        }\n                    );\n                }, pageVisibility)\n            )\n            .map(\n                createBatchingHandler({\n                    // The batching logic here is very simple – it could be improved by e.g.\n                    // computing statistics to reduce overall data sent, etc. Right now this is\n                    // premature optimization, but could become a good idea in the future.\n                    batchReduce: (previousBundle: OperationalMetricsBundle | undefined, metric: OperationalMetric) => {\n                        let metrics = [...(previousBundle?.metrics ?? [])];\n\n                        // For \"count\" metrics, it's straightforward to merge them into\n                        // a single metric with the same name.\n                        const existingCountIndex =\n                            metric.metric?.$case === \"count\"\n                                ? metrics.findIndex((m) => metric.name === m.name && m.metric?.$case === \"count\")\n                                : -1;\n                        if (existingCountIndex >= 0) {\n                            // Safety: Given the condition above, we can be sure that both the existing and new metrics\n                            // are of the \"count\" type.\n                            const existingValue = metrics[existingCountIndex].metric as CountMetricValue;\n                            const newValue = metric.metric as CountMetricValue;\n                            metrics.splice(existingCountIndex, 1, {\n                                ...metric,\n                                metric: {\n                                    $case: \"count\",\n                                    count: existingValue.count + newValue.count,\n                                },\n                            });\n                        } else {\n                            metrics.push(metric);\n                        }\n\n                        return { metrics };\n                    },\n                    isBatchComplete: (bundle) => bundle.metrics.length >= METRIC_BATCH_MAX_SIZE,\n                    maxBatchAge: METRIC_BATCH_MAX_AGE_MS,\n                    pageVisibility,\n                })\n            ).handler;\n\n        return new OperationalMetricsReporter(handler);\n    }\n);\n", "import { from, map, mergeMap, Observable, shareReplay, take } from \"rxjs\";\nimport { CameraKitApiHostname, CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { ConfigTargetingRequest } from \"../generated-proto/pb_schema/cdp/cof/config_request\";\nimport { ConfigResult } from \"../generated-proto/pb_schema/cdp/cof/config_result\";\nimport { Namespace } from \"../generated-proto/pb_schema/cdp/cof/namespace\";\nimport { GetInitializationConfigResponse } from \"../generated-proto/pb_schema/camera_kit/v3/service\";\nimport { cameraKitServiceFetchHandlerFactory, FetchHandler } from \"../handlers\";\nimport { cofHandlerFactory } from \"./cofHandler\";\n\nconst defaultTargetingRequest: Partial<ConfigTargetingRequest> = {\n    namespaces: [Namespace.LENS_CORE, Namespace.CAMERA_KIT_CORE, Namespace.LENS_CORE_CONFIG],\n};\n\nconst initializeConfigRelativePath = \"/com.snap.camerakit.v3.Metrics/metrics/initialization_config\";\n\ntype SupportedNamespaces = Namespace.LENS_CORE | Namespace.CAMERA_KIT_CORE | Namespace.LENS_CORE_CONFIG;\n\nexport type InitializationConfig = GetInitializationConfigResponse;\n\nexport class RemoteConfiguration {\n    private readonly configById: Observable<Map<string, ConfigResult[]>>;\n    private readonly initializationConfig: Observable<InitializationConfig>;\n\n    constructor(\n        lensPerformance: CameraKitConfiguration[\"lensPerformance\"],\n        apiHostname: CameraKitApiHostname,\n        cofHandler: ReturnType<typeof cofHandlerFactory>,\n        fetchHandler: FetchHandler\n    ) {\n        const lensCluster = Promise.resolve(lensPerformance).then((lensPerformance) => {\n            // `0` means no cluster could be determined. For COF, we'll omit a value in that case.\n            return lensPerformance?.cluster === 0 ? undefined : lensPerformance?.cluster;\n        });\n\n        this.configById = from(lensCluster).pipe(\n            // Note: we don't catch errors here, purposefully letting them propagate to subscribers outside this class.\n            // Subscribers, having more context about the config use-case, will know better how to handle an error than\n            // we do here (e.g. their logging / reporting will have more context, and they can use the error they get\n            // from this Observable as a cause).\n            mergeMap((lensClusterOrig4) =>\n                from(\n                    cofHandler({\n                        ...defaultTargetingRequest,\n                        lensClusterOrig4,\n                    })\n                )\n            ),\n            map((result) => {\n                const configById = new Map<string, ConfigResult[]>();\n                result.configResults.forEach((config) => {\n                    const configsWithId = configById.get(config.configId) ?? [];\n                    configsWithId.push(config);\n                    configById.set(config.configId, configsWithId);\n                });\n                return configById;\n            }),\n            shareReplay(1)\n        );\n\n        this.initializationConfig = new Observable<InitializationConfig>((observer) => {\n            fetchHandler(`https://${apiHostname}${initializeConfigRelativePath}`)\n                .then((response) => response.json())\n                .then((data) => {\n                    observer.next(data);\n                    observer.complete();\n                })\n                .catch((err) => observer.error(err));\n        }).pipe(shareReplay(1));\n    }\n\n    /**\n     * COF configuration.\n     */\n    get(configId: string): Observable<ConfigResult[]> {\n        return this.configById.pipe(map((config) => config.get(configId) ?? []));\n    }\n\n    /**\n     * Configuration that is provided by Camera Kit backend.\n     */\n    getInitializationConfig(): Observable<InitializationConfig> {\n        return this.initializationConfig;\n    }\n\n    getNamespace(namespace: SupportedNamespaces): Observable<ConfigResult[]> {\n        return this.configById.pipe(\n            map((configs) => {\n                const namespaceConfigs = Array.from(configs.values())\n                    .filter((values) => values.some((c) => c.namespace === namespace))\n                    .flatMap((results) => results);\n\n                return namespaceConfigs;\n            })\n        );\n    }\n}\n\nexport const remoteConfigurationFactory = Injectable(\n    \"remoteConfiguration\",\n    [configurationToken, cofHandlerFactory.token, cameraKitServiceFetchHandlerFactory.token] as const,\n    (\n        config: CameraKitConfiguration,\n        cofHandler: ReturnType<typeof cofHandlerFactory>,\n        fetchHandler: FetchHandler\n    ): RemoteConfiguration => {\n        const remoteConfig = new RemoteConfiguration(\n            config.lensPerformance,\n            config.apiHostname,\n            cofHandler,\n            fetchHandler\n        );\n\n        // We'll kick off remote configuration loading by subscribing (and then unsubscribing) to a dummy config value.\n        // Subsequent requests for config will use the shared Observable, benefitting from this eager loading.\n        remoteConfig.get(\"\").pipe(take(1)).subscribe();\n\n        return remoteConfig;\n    }\n);\n", "import { catchError, firstValueFrom, map, mergeMap } from \"rxjs\";\nimport { isRecord, isString } from \"../../common/typeguards\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { createArrayBufferParsingHandler } from \"../../handlers/arrayBufferParsingHandler\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"../../handlers/HandlerChainBuilder\";\nimport { RemoteConfiguration, remoteConfigurationFactory } from \"../../remote-configuration/remoteConfiguration\";\nimport { AssetLoader, AssetResponse } from \"./LensAssetRepository\";\n\ninterface AssetConfig {\n    url: string;\n    checksum?: string;\n}\n\nconst hasStringValue = (value: unknown): value is { stringValue: string } => {\n    return isRecord(value) && isString(value.stringValue);\n};\n\nconst isAssetConfig = (value: unknown): value is AssetConfig => {\n    return isRecord(value) && isString(value.url) && (value.checksum === undefined || isString(value.checksum));\n};\n\n/**\n * @internal\n */\nexport const deviceDependentAssetLoaderFactory = Injectable(\n    \"deviceDependentAssetLoader\",\n    [defaultFetchHandlerFactory.token, remoteConfigurationFactory.token] as const,\n    (fetchHandler: FetchHandler, remoteConfiguration: RemoteConfiguration): AssetLoader => {\n        const assetHandler = new HandlerChainBuilder(fetchHandler).map(createArrayBufferParsingHandler()).handler;\n\n        return async function deviceDependentAssetLoader({ assetId }): Promise<AssetResponse> {\n            const loadingFailed = (reason: string, cause?: unknown) =>\n                new Error(`Cannot load device-dependent asset ${assetId}. ${reason}`, { cause });\n\n            return firstValueFrom(\n                remoteConfiguration.get(assetId).pipe(\n                    catchError((error) => {\n                        throw loadingFailed(\"COF config failed to load.\", error);\n                    }),\n                    map((configs) => {\n                        if (configs.length === 0) {\n                            throw loadingFailed(`No COF config found corresponding to that assetId.`);\n                        }\n                        // All of the deviceDependent asset configs will only have one value, so we can safely use the\n                        // first (i.e. only) element in the configs list.\n                        const [{ value }] = configs;\n\n                        // Asset configurations are all JSON-encoded in the `stringValue` property. If it doesn't\n                        // exists, we can't fetch the asset.\n                        if (!hasStringValue(value)) throw loadingFailed(\"COF config malformed (missing stringValue)\");\n\n                        let assetConfig: unknown;\n                        try {\n                            assetConfig = JSON.parse(value.stringValue);\n                        } catch (parseError) {\n                            throw loadingFailed(\"COF config malformed (JSON parse error)\", parseError);\n                        }\n\n                        // Asset configurations have a `url` and `checksum` property. Otherwise we're dealing with some\n                        // other kind of configuration, and cannot fetch the asset.\n                        if (!isAssetConfig(assetConfig)) throw loadingFailed(\"COF config malformed (missing URL)\");\n\n                        return assetConfig;\n                    }),\n                    mergeMap(async ({ url, checksum }) => {\n                        // TODO: remove force-cache once https://jira.sc-corp.net/browse/CAMKIT-3671 is addressed\n                        const [data, response] = await assetHandler(url, { cache: \"force-cache\" });\n                        if (!response.ok) throw response;\n                        return { data, checksum };\n                    })\n                )\n            );\n        };\n    }\n);\n", "import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { createArrayBufferParsingHandler } from \"../../handlers/arrayBufferParsingHandler\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"../../handlers/HandlerChainBuilder\";\nimport { AssetLoader } from \"./LensAssetRepository\";\n\n/**\n * @internal\n */\nexport const remoteMediaAssetLoaderFactory = Injectable(\n    \"remoteMediaAssetLoader\",\n    [defaultFetchHandlerFactory.token] as const,\n    (fetchHandler: FetchHandler): AssetLoader => {\n        const handler = new HandlerChainBuilder(fetchHandler).map(createArrayBufferParsingHandler()).handler;\n\n        return async function remoteMediaAssetLoader(asset) {\n            // as a default option assuming that RemoteMedia asset type contains asset url in assetId\n            // this behaviour could be changed by providing own implementation for RemoteMedia asset loader\n            //   const cameraKit = bootstrapCameraKit(config, container => {\n            //     return container.provides(Injectable(\n            //       remoteMediaAssetLoaderFactory.token, ...\n            // TODO: remove force-cache once https://jira.sc-corp.net/browse/CAMKIT-3671 is addressed\n            const [buffer, response] = await handler(asset.assetId, { cache: \"force-cache\" });\n            if (!response.ok) throw response;\n            return buffer;\n        };\n    }\n);\n", "import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { createArrayBufferParsingHandler } from \"../../handlers/arrayBufferParsingHandler\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"../../handlers/HandlerChainBuilder\";\nimport { AssetLoader } from \"./LensAssetRepository\";\n\n/**\n * @internal\n */\nexport const staticAssetLoaderFactory = Injectable(\n    \"staticAssetLoader\",\n    [defaultFetchHandlerFactory.token] as const,\n    (fetchHandler: FetchHandler): AssetLoader => {\n        const handler = new HandlerChainBuilder(fetchHandler).map(createArrayBufferParsingHandler()).handler;\n\n        return async (asset, _lens, assetManifest) => {\n            const assetUrl = assetManifest?.find((manifest) => manifest.id === asset.assetId)?.assetUrl;\n            if (!assetUrl) {\n                throw new Error(`Cannot load lens asset ${asset.assetId}. Static asset URL could not be found.`);\n            }\n            // TODO: remove force-cache once https://jira.sc-corp.net/browse/CAMKIT-3671 is addressed\n            const [buffer, response] = await handler(assetUrl, { cache: \"force-cache\" });\n            if (!response.ok) throw response;\n            return buffer;\n        };\n    }\n);\n", "import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { Lens } from \"../Lens\";\nimport {\n    RequestStateEventTarget,\n    dispatchRequestCompleted,\n    dispatchRequestErrored,\n    dispatchRequestStarted,\n    requestStateEventTargetFactory,\n} from \"../../handlers/requestStateEmittingHandler\";\nimport { AssetDownloadDimensions } from \"../../metrics/reporters/reportLensAndAssetDownload\";\nimport {\n    LensAssetManifestItem,\n    LensAssetManifestItem_RequestTiming,\n    LensAssetManifestItem_Type,\n} from \"../../generated-proto/pb_schema/camera_kit/v3/lens\";\nimport { AssetDescriptor, AssetType, LensCore, lensCoreFactory } from \"../../lens-core-module\";\nimport { assertUnreachable } from \"../../common/assertions\";\nimport { getLogger } from \"../../logger/logger\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../../metrics/metricsEventTarget\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { deviceDependentAssetLoaderFactory } from \"./deviceDependentAssetLoader\";\nimport { remoteMediaAssetLoaderFactory } from \"./remoteMediaAssetLoaderFactory\";\nimport { staticAssetLoaderFactory } from \"./staticAssetLoader\";\n\nconst logger = getLogger(\"LensAssetRepository\");\n\n/**\n * Computes cache key for asset ID and loader type pair.\n * @param asset Asset ID and loader type pair.\n * @returns Cache key.\n */\nfunction getCacheKey(asset: AssetDescriptor) {\n    return `${asset.assetId}_${asset.assetType.value}`;\n}\n\nexport function mapManfiestItemToAssetType(lensCore: LensCore, type: LensAssetManifestItem_Type): AssetType {\n    switch (type) {\n        case LensAssetManifestItem_Type.ASSET:\n            return lensCore.AssetType.Static;\n        case LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET:\n        case LensAssetManifestItem_Type.UNRECOGNIZED:\n            return lensCore.AssetType.DeviceDependent;\n        default:\n            return assertUnreachable(type);\n    }\n}\n\nexport interface Asset {\n    assetId: string;\n    assetBuffer: ArrayBuffer;\n    assetType: AssetType;\n    assetChecksum: string | undefined;\n}\n\nexport type AssetResponse =\n    | ArrayBuffer\n    | {\n          data: ArrayBuffer;\n          checksum?: string;\n      };\n\n/**\n * An AssetLoader is used to retrieve assets. A separate loader may be defined to retrieve different asset types.\n *\n * @category Lenses\n */\nexport type AssetLoader = (\n    asset: AssetDescriptor,\n    lens?: Lens,\n    assetManifest?: LensAssetManifestItem[]\n) => Promise<AssetResponse> | AssetResponse;\n\n/**\n * Registers a remote asset provider function with a given instance of LensCore, and uses a provided mapping of asset\n * types to loading functions to acquire remote asset data and pass it to LensCore.\n *\n * *Note:* LensCoreModule.initialize must be called on the desired LensCoreModule instance **prior** to passing it\n * to the LensAssetProvider constructor. If this class is instantiated with a LensCoreModule that has not been\n * initialized, the registry of the asset provider function will fail silently and no remote assets will be loaded.\n */\nexport class LensAssetRepository {\n    private readonly cachedAssetKeys = new Set<string>();\n\n    constructor(\n        private readonly lensCore: LensCore,\n        private readonly assetLoaders: Map<AssetType, [keyof LensCore[\"AssetType\"], AssetLoader]>,\n        private readonly metrics: MetricsEventTarget,\n        private readonly requestStateEventTarget: RequestStateEventTarget\n    ) {}\n\n    /**\n     * Caches lens assets defined in asset manifest.\n     *\n     * @param assetManifest Lens asset manifest.\n     * @param lens Lens to cache assets of.\n     * @param assetTimings Optionally specifies what assets to cache. By default, on-demand assets are not cached.\n     * @returns Promise rejects if any required assets could not be loaded – if this occurs, it's very likely the Lens\n     * with this manifest will not function.\n     */\n    public async cacheAssets(\n        assetManifest: LensAssetManifestItem[],\n        lens: Lens,\n        assetTimings: LensAssetManifestItem_RequestTiming[] = [LensAssetManifestItem_RequestTiming.REQUIRED]\n    ): Promise<void> {\n        const assetTimingsToPreload = new Set([\n            // That is a bad naming, but PRELOAD_UNSET actually means\n            // that an asset has to be preloaded\n            LensAssetManifestItem_RequestTiming.PRELOAD_UNSET,\n            ...assetTimings,\n        ]);\n        const assetDescriptors = assetManifest\n            .filter((asset) => {\n                return assetTimingsToPreload.has(asset.requestTiming);\n            })\n            .map(({ id, type }) => ({\n                assetId: id,\n                assetType: mapManfiestItemToAssetType(this.lensCore, type),\n            }));\n\n        if (assetDescriptors.length) {\n            // When preloading, we *do* want load failures to reject Promise.all (assets listed in the manifest\n            // are known to be hard requirements of the lens).\n            return this.cacheAssetsByDescriptor(assetDescriptors, lens, assetManifest);\n        }\n    }\n\n    /**\n     * Calls the correct asset loader to fetch the asset's data,\n     * depending on the requested asset's type and provides that to LensCore.\n     */\n    public async loadAsset(\n        assetDescriptor: AssetDescriptor,\n        lens: Lens | undefined,\n        assetManifest: LensAssetManifestItem[] | undefined\n    ): Promise<void> {\n        const { assetId, assetType } = assetDescriptor;\n        const [assetTypeName, assetLoader] = this.assetLoaders.get(assetType) ?? [];\n        const safeAssetTypeName = assetTypeName ?? \"unknown\";\n        const dimensions: AssetDownloadDimensions = {\n            requestType: \"asset\",\n            assetId: assetId,\n            assetType: safeAssetTypeName,\n            lensId: lens?.id ?? \"unknown\",\n        };\n\n        const { requestId } = dispatchRequestStarted(this.requestStateEventTarget, { dimensions });\n\n        try {\n            if (!assetLoader) {\n                throw new Error(`Cannot get asset ${assetId}. Asset type ${safeAssetTypeName} is not supported.`);\n            }\n\n            const assetResponse = await assetLoader(assetDescriptor, lens, assetManifest);\n            const assetBuffer = \"data\" in assetResponse ? assetResponse.data : assetResponse;\n            const assetChecksum = \"checksum\" in assetResponse ? assetResponse.checksum : undefined;\n\n            if (assetBuffer.byteLength === 0) {\n                throw new Error(`Got empty response for asset ${assetId} from ${safeAssetTypeName} loader.`);\n            }\n\n            dispatchRequestCompleted(this.requestStateEventTarget, {\n                requestId,\n                dimensions,\n                status: 200,\n                sizeByte: assetBuffer.byteLength,\n            });\n\n            this.lensCore.provideRemoteAssetsResponse({\n                assetId,\n                assetBuffer,\n                assetType,\n                assetChecksum,\n                onFailure: (lensCoreError) => {\n                    if (/validation failed/.test(lensCoreError.message)) {\n                        this.metrics.dispatchEvent(\n                            new TypedCustomEvent(\"assetValidationFailed\", {\n                                name: \"assetValidationFailed\",\n                                assetId,\n                            })\n                        );\n                    }\n                    logger.warn(new Error(`Failed to provide lens asset ${assetId}.`, { cause: lensCoreError }));\n                },\n            });\n        } catch (error) {\n            const wrappedError = new Error(`Failed to load lens asset ${assetId}.`, { cause: error });\n            dispatchRequestErrored(this.requestStateEventTarget, { requestId, dimensions, error: wrappedError });\n            throw wrappedError;\n        }\n    }\n\n    /**\n     * Downloads and caches assets if applicable. Does nothing for assets that are already in cache.\n     * @param assetDescriptors Asset ID and type pairs.\n     * @param lens Lens to load assets for.\n     * @param assetManifest Lens asset manifest.\n     */\n    private async cacheAssetsByDescriptor(\n        assetDescriptors: AssetDescriptor[],\n        lens: Lens,\n        assetManifest: LensAssetManifestItem[] | undefined\n    ): Promise<void> {\n        await Promise.all(\n            assetDescriptors\n                .filter((assetDescriptors) => !this.cachedAssetKeys.has(getCacheKey(assetDescriptors)))\n                .map(async (assetDescriptor) => {\n                    try {\n                        // NOTE: we allow concurrent cache request to download the same asset more than once,\n                        // because that is better than skipping second request when the firs one fails.\n                        // In future we could improve concurretn logic with observables as part of\n                        // https://jira.sc-corp.net/browse/CAMKIT-3931\n                        await this.loadAsset(assetDescriptor, lens, assetManifest);\n                        this.cachedAssetKeys.add(getCacheKey(assetDescriptor));\n                    } catch (error) {\n                        const { assetId, assetType } = assetDescriptor;\n                        const [assetTypeName] = this.assetLoaders.get(assetType) ?? [];\n                        logger.warn(\n                            new Error(`Failed to cache asset ${assetId} of type ${assetTypeName ?? assetType.value}.`, {\n                                cause: error,\n                            })\n                        );\n                    }\n                })\n        );\n    }\n}\n\n/**\n * @internal\n */\nexport const lensAssetRepositoryFactory = Injectable(\n    \"lensAssetRepository\",\n    [\n        lensCoreFactory.token,\n        deviceDependentAssetLoaderFactory.token,\n        remoteMediaAssetLoaderFactory.token,\n        staticAssetLoaderFactory.token,\n        metricsEventTargetFactory.token,\n        requestStateEventTargetFactory.token,\n    ] as const,\n    (\n        lensCore: LensCore,\n        deviceDependentAssetLoader: AssetLoader,\n        remoteMediaAssetLoader: AssetLoader,\n        staticAssetLoader: AssetLoader,\n        metrics: MetricsEventTarget,\n        requestStateEventTarget: RequestStateEventTarget\n    ) =>\n        new LensAssetRepository(\n            lensCore,\n            new Map([\n                [lensCore.AssetType.DeviceDependent, [\"DeviceDependent\", deviceDependentAssetLoader]],\n                [lensCore.AssetType.RemoteMediaByUrl, [\"RemoteMediaByUrl\", remoteMediaAssetLoader]],\n                // URL type is deprecated and was introduced before RemoteMediaByURL\n                // however, there are some lenses still using it so we need to support it\n                [lensCore.AssetType.URL, [\"URL\", remoteMediaAssetLoader]],\n                [lensCore.AssetType.Static, [\"Static\", staticAssetLoader]],\n            ]),\n            metrics,\n            requestStateEventTarget\n        )\n);\n", "import { guard, validate } from \"../common/validate\";\nimport { isArrayOfType, isSafeString, isSafeStringArray, isString, isUndefined } from \"../common/typeguards\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { cameraKitServiceFetchHandlerFactory } from \"../handlers/cameraKitServiceFetchHandlerFactory\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { LensSources, lensSourcesFactory } from \"../extensions/LensSources\";\nimport {\n    RequestStateEventTarget,\n    createRequestStateEmittingHandler,\n    requestStateEventTargetFactory,\n} from \"../handlers/requestStateEmittingHandler\";\nimport { LensDownloadDimensions } from \"../metrics/reporters/reportLensAndAssetDownload\";\nimport { Handler, HandlerChainBuilder } from \"../handlers/HandlerChainBuilder\";\nimport { createArrayBufferParsingHandler } from \"../handlers/arrayBufferParsingHandler\";\nimport { LensAssetManifestItem_RequestTiming } from \"../generated-proto/pb_schema/camera_kit/v3/lens\";\nimport { getLogger } from \"../logger/logger\";\nimport { errorLoggingDecorator } from \"../logger/errorLoggingDecorator\";\nimport { CameraKitApiHostname, CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { isLensArray, Lens, LensProto, LensProtoWithGroupId, toPublicLens } from \"./Lens\";\nimport { retrieveCameraKitLens, retrieveCameraKitLensGroup } from \"./lensHttpUtil\";\nimport { decodeEnvelopes } from \"./lensEnvelopeUtil\";\nimport { LensAssetRepository, lensAssetRepositoryFactory } from \"./assets/LensAssetRepository\";\n\nconst logger = getLogger(\"LensRepository\");\nconst log = errorLoggingDecorator(logger);\n\ntype LensFetchHandler = Handler<\n    [RequestInfo, LensDownloadDimensions],\n    [ArrayBuffer, Response],\n    RequestInit | undefined\n>;\n\nconst assetTimingMap = {\n    required: LensAssetManifestItem_RequestTiming.REQUIRED,\n    onDemand: LensAssetManifestItem_RequestTiming.ON_DEMAND,\n};\n\nfunction isAssetTiming(value: unknown): value is AssetTiming {\n    return isString(value) && assetTimingMap.hasOwnProperty(value);\n}\n\nfunction isOptionalAssetTimingArray(value: unknown): value is undefined | AssetTiming[] {\n    return isUndefined(value) || isArrayOfType(isAssetTiming, value);\n}\n\n/**\n * Lens assets are included in a manifest, and each will indicate when that asset will be used by the lens.\n *\n * Assets can have the following timing values:\n * - `required`: the lens will definitely request this asset immediately when the lens is applied.\n * - `onDemand`: the lens may request this asset at some time while the lens is applied.\n *\n * Depending on the use-case, an application may want to cache both required and onDemand assets for\n * a particular lens, or may decide to only cache required assets (or cache no assets).\n *\n * @category Lenses\n */\nexport type AssetTiming = keyof typeof assetTimingMap;\n\nexport interface LensBinary {\n    lensBuffer: ArrayBuffer;\n    lensChecksum: string;\n}\n\n/**\n * The LensRepository is used to query for lenses from specific lens groups, or for a lens with a specific ID.\n *\n * Lens groups are configured in the CameraKit Portal -- that's where you'll find lens group IDs and lens IDs.\n *\n * Lenses must be loaded by the LensRepository before they can be applied to a {@link CameraKitSession}.\n *\n * @example\n * ```ts\n * const cameraKit = await bootstrapCameraKit(options)\n * const session = await cameraKit.createSession()\n * const lens = await cameraKit.lensRepository.loadLens(lensId, groupId)\n * session.applyLens(lens)\n * ```\n *\n * @category Lenses\n */\nexport class LensRepository {\n    private readonly metadataCache = new Map<string, LensProtoWithGroupId>();\n    private readonly binariesCache = new Map<string, ArrayBuffer>();\n\n    /** @internal */\n    constructor(\n        private readonly lensMetadataFetchHandler: FetchHandler,\n        private readonly lensFetchHandler: LensFetchHandler,\n        private readonly lensSources: LensSources,\n        private readonly lensAssetRepository: LensAssetRepository,\n        private readonly apiHostname: CameraKitApiHostname\n    ) {}\n\n    /**\n     * Retrieve a single Lens.\n     *\n     * @param lensId Desired Lens's unique ID. Can be found in the CameraKit Portal.\n     * @param groupId The ID of a group containing the desired Lens. Can be found in the CameraKit Portal.\n     * @returns Resolves with the desired Lens, or rejects if an error occurred (including a missing Lens).\n     */\n    @validate\n    @log\n    async loadLens(@guard(isSafeString) lensId: string, @guard(isSafeString) groupId: string): Promise<Lens> {\n        const envelopes = await this.lensSources.retrieveLenses({ lensId, groupId });\n        let lens: LensProto;\n        if (envelopes) {\n            lens = decodeEnvelopes(envelopes)[0];\n            if (!lens) {\n                throw new Error(\"Expected non-empty envelope.\");\n            }\n        } else {\n            lens = await retrieveCameraKitLens(this.lensMetadataFetchHandler, lensId, groupId, this.apiHostname);\n        }\n        const lensWithGroup = { ...lens, groupId };\n        this.metadataCache.set(lens.id, lensWithGroup);\n        return toPublicLens(lensWithGroup);\n    }\n\n    /**\n     * Retrieve the Lenses contained in a list of Lens Groups.\n     *\n     * This may result in multiple requests to retrieve Lens data (e.g. one per desired group). If any constituent\n     * requests fail, those errors will be reported in the response – but the returned Promise will not be rejected. Any\n     * Lenses which could be successfully retrieved will be available in the response.\n     *\n     * @param groupIds A list of Lens Group IDs. Can be found in the CameraKit Portal.\n     * @returns Resolves with a flattened list of all lenses in the desired groups. If any errors occurred during the\n     * query operation, these will be included in a separate list. If errors are present, the list of Lenses may not\n     * contain all the Lenses from the desired groups.\n     */\n    @validate\n    @log\n    async loadLensGroups(@guard(isSafeStringArray) groupIds: string[]): Promise<{\n        errors: Error[];\n        lenses: Lens[];\n    }> {\n        const responses = await Promise.all(\n            groupIds.map(async (groupId) => {\n                try {\n                    const envelopes = await this.lensSources.retrieveLenses({ groupId });\n                    const lenses = envelopes\n                        ? decodeEnvelopes(envelopes)\n                        : await retrieveCameraKitLensGroup(this.lensMetadataFetchHandler, groupId, this.apiHostname);\n                    lenses.forEach((lens) => this.metadataCache.set(lens.id, { ...lens, groupId }));\n                    return lenses.map((lens) => toPublicLens({ ...lens, groupId }));\n                } catch (error) {\n                    logger.error(new Error(`Failed to load lens group ${groupId}.`, { cause: error }));\n                    return error as Error;\n                }\n            })\n        );\n\n        const errors: Error[] = [];\n        const lenses: Lens[] = [];\n        responses.forEach((response) => (Array.isArray(response) ? lenses.push(...response) : errors.push(response)));\n        return { errors, lenses };\n    }\n\n    /**\n     * Loads and caches lens content and dependencies to reduce latency when {@link CameraKitSession.applyLens} is later\n     * called to apply the lens. This is an in-memory cache, it will not be persisted across page loads.\n     *\n     * This may useful if the application A) knows which lenses will be applied and B) has some opportunity to call\n     * this method before a lens is applied. For example, if the user must perform some other actions before lenses\n     * become active, this might be a good opportunity to cache lenses to improve applyLens latency.\n     *\n     * @example\n     * ```ts\n     * const lens = await cameraKit.lensRepository.loadLens(lensId, groupId)\n     * await cameraKit.lensRepository.cacheLensContent([lens])\n     *\n     * // sometime later -- this call will use the cached lens content, making lens application faster.\n     * await cameraKitSession.applyLens(lens)\n     * ```\n     *\n     * @param lenses Array of lenses to cache in memory.\n     * @param assetTimingsToCache Lenses specify certain required assets that are necessary for the lens to render, and\n     * other assets which may be needed by the lens. By default this method will cache all of those assets, but this\n     * behavior can be modified to only load the required assets, only the \"onDemand\" assets, or neither (by passing\n     * an empty array).\n     */\n    @validate\n    @log\n    async cacheLensContent(\n        @guard(isLensArray) lenses: Lens[],\n        @guard(isOptionalAssetTimingArray) assetTimingsToCache: AssetTiming[] = [\"required\", \"onDemand\"]\n    ) {\n        const assetTimingsToLoad = assetTimingsToCache.map((timing) => assetTimingMap[timing]);\n        await Promise.all(\n            lenses.map(async (lens) => {\n                try {\n                    const { lensBuffer } = await this.getLensContent(lens);\n                    // Safety: getLensContent() call above ensures metadata to exist\n                    const { content } = this.metadataCache.get(lens.id)!;\n                    this.binariesCache.set(lens.id, lensBuffer);\n                    await this.lensAssetRepository.cacheAssets(content!.assetManifest, lens, assetTimingsToLoad);\n                } catch (e) {\n                    logger.warn(new Error(`Failed to cache lens ${lens.id}.`, { cause: e }));\n                }\n            })\n        );\n    }\n\n    /**\n     * Returns loaded Lens metadata if available.\n     */\n    getLensMetadata(lensId: string): LensProtoWithGroupId | undefined {\n        return this.metadataCache.get(lensId);\n    }\n\n    /**\n     * Removes Lens content from the in-memory cache.\n     */\n    removeCachedLenses(lenses: Lens[]) {\n        lenses.forEach((lens) => this.binariesCache.delete(lens.id));\n    }\n\n    /**\n     * Fetches lens content and assets. This may come from the cache, otherwise network requests will be made.\n     *\n     * @internal\n     */\n    async getLensContent(lens: Lens): Promise<LensBinary> {\n        const { content } = this.metadataCache.get(lens.id) ?? {};\n        if (!content) {\n            throw new Error(`Cannot find metadata for lens ${lens.id}.`);\n        }\n\n        const cachedLensBuffer = this.binariesCache.get(lens.id);\n        if (cachedLensBuffer) {\n            return {\n                lensBuffer: cachedLensBuffer,\n                lensChecksum: content.lnsSha256,\n            };\n        }\n\n        // Load required lens assets and the lens itself in parallel. We count both toward lens download time.\n        const [lensBuffer] = await this.lensFetchHandler([\n            // TODO: remove force-cache once https://jira.sc-corp.net/browse/CAMKIT-3671 is addressed\n            new Request(content.lnsUrlBolt, { cache: \"force-cache\" }),\n            {\n                requestType: \"lens_content\",\n                lensId: lens.id,\n            },\n        ]);\n        return { lensBuffer, lensChecksum: content.lnsSha256 };\n    }\n}\n\n/**\n * @internal\n */\nexport const lensRepositoryFactory = Injectable(\n    \"LensRepository\",\n    [\n        requestStateEventTargetFactory.token,\n        cameraKitServiceFetchHandlerFactory.token,\n        defaultFetchHandlerFactory.token,\n        lensSourcesFactory.token,\n        lensAssetRepositoryFactory.token,\n        configurationToken,\n    ] as const,\n    (\n        requestStateEventTarget: RequestStateEventTarget,\n        lensMetadataFetchHandler: FetchHandler,\n        defaultFetchHandler: FetchHandler,\n        lensSources: LensSources,\n        lensAssetRepository: LensAssetRepository,\n        configuration: CameraKitConfiguration\n    ) => {\n        const lensFetchHandler = new HandlerChainBuilder(defaultFetchHandler)\n            .map(createRequestStateEmittingHandler<LensDownloadDimensions>(requestStateEventTarget))\n            .map(createArrayBufferParsingHandler()).handler;\n        return new LensRepository(\n            lensMetadataFetchHandler,\n            lensFetchHandler,\n            lensSources,\n            lensAssetRepository,\n            configuration.apiHostname\n        );\n    }\n);\n", "import { entries } from \"../common/entries\";\nimport { memoize, Memoized } from \"../common/memoize\";\nimport { Container } from \"./Container\";\nimport { AddService, InjectableFunction, ServicesFromTokenizedParams, ValidTokens } from \"./types\";\n\n// Using a conditional type forces TS language services to evaluate the type -- so when showing e.g. type hints, we\n// will see the mapped type instead of the AddDependencies type alias. This produces better hints.\ntype AddDependencies<ParentDependencies, Dependencies> = ParentDependencies extends any\n    ? // A mapped type produces better, more concise type hints than an intersection type.\n      {\n          [K in keyof ParentDependencies | keyof Dependencies]: K extends keyof ParentDependencies\n              ? ParentDependencies[K]\n              : K extends keyof Dependencies\n              ? Dependencies[K]\n              : never;\n      }\n    : never;\n\ntype ExcludeKey<T, U> = T extends any ? { [K in Exclude<keyof T, U>]: T[K] } : never;\n\ntype PartialInjectableFunction<\n    Params extends readonly any[],\n    Tokens extends readonly string[],\n    Token extends string,\n    Service\n> = {\n    (...args: Params): Service;\n    token: Token;\n    dependencies: Tokens;\n};\n\ntype Injectables<Services, Dependencies> = {\n    [K in keyof Services]: K extends string\n        ? InjectableFunction<Services & Dependencies, readonly ValidTokens<Services & Dependencies>[], K, Services[K]>\n        : never;\n};\n\ntype PartialContainerFactories<Services, Dependecies> = {\n    [K in keyof Services]: Memoized<(c: Container<Partial<Services> & Dependecies>) => Services[K]>;\n};\n\n/**\n * Similar to [Container], with the exception that Services may be provided to a PartialContainer which *does not*\n * contain all of that Services dependencies.\n *\n * For this to remain safe, Services can not be resolved by PartialContainer – it has no `get` method.\n *\n * Instead, the PartialContainer must be provided to a [Container] which *does* contain all the dependencies required\n * by all the Service in the PartialContainer. The resulting [Container] can then resolve these Services.\n *\n * PartialContainers are used to create a collection of Services which can then be provided via a simple one-line syntax\n * to an existing Container (which fulfills the collection's dependencies). It is an organizational tool, allowing\n * coherent groupings of Services to be defined in one place, then combined elsewhere to form a complete [Container].\n *\n * Here's an example of PartialContainer usage:\n * ```ts\n * // We can provide fooFactory, even though the PartialContainer doesn't fulfill the Bar dependency.\n * const fooFactory = Injectable('Foo', ['Bar'] as const, (bar: Bar) => new Foo(bar))\n * const partialContainer = new PartialContainer({}).provide(fooFactory)\n *\n * const barFactory = Injectable('Bar', () => new Bar())\n * const dependenciesContainer = Container.provides(barFactory)\n *\n * const combinedContainer = dependenciesContainer.provides(partialContainer)\n *\n * // We can resolve Foo, because the combined container includes Bar, so all of Foo's dependencies are now met.\n * const foo = combinedContainer.get('Foo')\n * ```\n */\n/** @internal */\nexport class PartialContainer<Services = {}, Dependencies = {}> {\n    constructor(private readonly injectables: Injectables<Services, Dependencies>) {}\n\n    /**\n     * Create a new PartialContainer which provides a Service created by the given InjectableFunction.\n     *\n     * The InjectableFunction contains metadata specifying the Token by which the created Service will be known, as well\n     * as an ordered list of Tokens to be resolved and provided to the InjectableFunction as arguments.\n     *\n     * This dependencies are allowed to be missing from the PartialContainer, but these dependencies are maintained as a\n     * parameter of the returned PartialContainer. This allows `[Container.provides]` to type check the dependencies and\n     * ensure they can be provided by the Container.\n     *\n     * @param fn A InjectableFunction, taking dependencies as arguments, which returns the Service.\n     */\n    provides<\n        AdditionalDependencies extends readonly any[],\n        Tokens extends readonly string[],\n        Token extends string,\n        Service\n    >(\n        fn: PartialInjectableFunction<AdditionalDependencies, Tokens, Token, Service>\n    ): PartialContainer<\n        AddService<Services, Token, Service>,\n        // The dependencies of the new PartialContainer are the combined dependencies of this container and the\n        // PartialInjectableFunction -- but we exclude any dependencies already provided by this container (i.e. this\n        // container's Services) as well as the new Service being provided.\n        ExcludeKey<\n            AddDependencies<\n                ExcludeKey<Dependencies, Token>,\n                ServicesFromTokenizedParams<Tokens, AdditionalDependencies>\n            >,\n            keyof Services\n        >\n    > {\n        return new PartialContainer({ ...this.injectables, [fn.token]: fn } as any);\n    }\n\n    /**\n     * In order to create a [Container], the InjectableFunctions maintained by the PartialContainer must be memoized\n     * into Factories that can resolve their dependencies and return the correct Service.\n     *\n     * In particular, this requires access to a \"parent\" Container to avoid infinite looping in cases where Service A\n     * depends on Service A – this is allowed (as long as the parent container provides Service A), but requires access\n     * to the parent Container to provide the parent implementation of Service A.\n     *\n     * This also means that Services provided by a PartialContainer to a Container via this function will always be\n     * scoped to the Container. In other words, if a PartialContainer containing Service A is provided to both\n     * Container X and Container Y, when Service A is resolved by Container X the InjectableFunction used to create\n     * Service A will be invoked – and when Service A is resolved by Container Y, the InjectableFunction will be invoked\n     * again.\n     *\n     * @param parent A [Container] which provides all the required Dependencies of this PartialContainer.\n     */\n    getFactories(parent: Container<Dependencies>): PartialContainerFactories<Services, Dependencies> {\n        return Object.fromEntries(\n            entries(this.injectables).map(([token, fn]) => {\n                return [\n                    token,\n                    memoize((c: Container<Services & Dependencies>) => {\n                        return fn(\n                            ...(fn.dependencies.map((t) => {\n                                return t === token\n                                    ? parent.get(t as keyof Dependencies)\n                                    : c.get(t as keyof Services & Dependencies);\n                            }) as any)\n                        );\n                    }),\n                ];\n            })\n        ) as PartialContainerFactories<Services, Dependencies>;\n    }\n\n    getTokens(): Array<keyof Services> {\n        return Object.keys(this.injectables) as Array<keyof Services>;\n    }\n}\n", "import { isMemoized, memoize, Memoized } from \"../common/memoize\";\nimport { PartialContainer } from \"./PartialContainer\";\nimport { AddService, InjectableFunction, ValidTokens } from \"./types\";\n\ntype MaybeMemoizedFactories<Services> = {\n    [K in keyof Services]:\n        | ((c: Container<Services>) => Services[K])\n        | Memoized<(c: Container<Services>) => Services[K]>;\n};\n\nexport type Factories<Services> = {\n    [K in keyof Services]: Memoized<(c: Container<Services>) => Services[K]>;\n};\n\nexport const CONTAINER = \"$container\";\nexport type ContainerToken = typeof CONTAINER;\n\n/**\n * A Container of values, indexed each by a unique token, which can be used throughout CameraKit. This is how CameraKit\n * implements simple dependency injection.\n *\n * Dependency injection is a way to decouple the *use* of a dependency from the *creation* of that dependency. This\n * improves modularity and re-usability, since components only care about the *interfaces* of dependencies (since that\n * determines their use) and not about their concrete creation. New implementations of a particular dependency may be\n * provided without the need to change any of the consumers of that dependency.\n *\n * There are a few commonly-used terms used when talking about dependency injection:\n *\n *   - Container (or Injector): Maintains a registry of all available Services and understands how to create them.\n *   - Service: Anything that can be provided by the Container is called a Service – this can be a value of any type.\n *   - Token: Each Service is associated with a unique name, or Token. In order to obtain a Service from the Container,\n *     the consumer must provide the Token corresponding to that Service.\n *   - InjectableFunction: Services are created by InjectableFunctions. When adding a Service to a Container, the\n *     Service provider gives the Container a InjectableFunction which, when called will return the Service. These\n *     InjectableFunctions may themselves use other Services, which will be passed to them as arguments.\n *\n * Services are, by default, singletons – that is, each call to `get()` a particular Service will return a reference\n * to the same value. In other words, InjectableFunctions are only invoked once. If multiple instances of a Service are\n * desired, a new Container can be created using the `copy([Token])` method – passing a Token to this method forces the\n * new Container to recreate the corresponding Service (the InjectableFunction will be invoked again). We say that the\n * Service is then \"scoped\" to the new Container.\n *\n *\n * One common downside of many dependency injection implementations is that the dependency graph formed by the various\n * Services can only be validated at runtime. That is, if a dependency is missing or a circular dependency is found, the\n * developer must wait until runtime to discover the error. These errors can often be confusing and hard to debug.\n *\n * This implementation eliminates this issue by moving these sorts of errors to compile time. If an unknown dependency\n * is used in a InjectableFunction, for example, the code simply won't compile.\n *\n * To achieve this, we do lose the ability to implicitly define the dependency graph, as is common with many dependency\n * injection frameworks that employ decorators to define Services and their dependencies. Instead, the dependency graph\n * must be constructed explicitly, step-by-step, via successive calls to the `provide()` method. This is a suitable\n * trade-off for CameraKit, as there are a relatively small number of Services.\n *\n * Here's a simple example of Container usage:\n * ```ts\n * const fooFactory = Injectable('Foo', () => new Foo())\n * const barFactory = Injectable('Bar', ['Foo'] as const, (foo: Foo) => new Bar(foo))\n * const container = Container.empy()\n *   .provide(fooFactory)\n *   .provide(barFactory)\n *\n * const bar: Bar = container.get('Bar')\n * ```\n */\n/** @internal */\nexport class Container<Services = {}> {\n    /**\n     * Create a new [Container] by providing a [PartialContainer] that has no dependencies.\n     */\n    static provides<Services>(container: PartialContainer<Services, {}> | Container<Services>): Container<Services>;\n\n    /**\n     * Create a new [Container] by providing a Service that has no dependencies.\n     */\n    static provides<Token extends string, Service>(\n        fn: InjectableFunction<{}, [], Token, Service>\n    ): Container<AddService<{}, Token, Service>>;\n\n    static provides(\n        fnOrContainer: InjectableFunction<{}, [], string, any> | PartialContainer<any, {}> | Container<any>\n    ): Container<any> {\n        // Although the `provides` method has overloads that match both members of the union type separately, it does\n        // not match the union type itself, so the compiler forces us to branch and handle each type within the union\n        // separately. (Maybe in the future the compiler will decide to infer this, but for now this is necessary.)\n        if (fnOrContainer instanceof PartialContainer) return new Container({}).provides(fnOrContainer);\n        if (fnOrContainer instanceof Container) return new Container({}).provides(fnOrContainer);\n        return new Container({}).provides(fnOrContainer);\n    }\n\n    private readonly factories: Factories<Services>;\n\n    constructor(factories: MaybeMemoizedFactories<Services>) {\n        this.factories = {} as Factories<Services>;\n        for (const k in factories) {\n            const fn = factories[k];\n            if (isMemoized(fn)) this.factories[k] = fn;\n            else this.factories[k] = memoize(fn);\n        }\n    }\n\n    /**\n     * Create a copy of this Container, optionally providing a list of Services which will be scoped to the copy.\n     *\n     * This can be useful, for example, if different parts of an application wish to use the same Service interface, but\n     * do not want to share a reference to same Service instance.\n     *\n     * Say we have a Service which manages a list of Users. Our application wishes to display two lists of Users, which\n     * may be edited independently. In this case it may be desirable to create a Container for each list component, with\n     * the UserList Service scoped to those Containers – that way, each list component gets a unique copy of the\n     * UserList Service that can be edited independently of the other.\n     *\n     * @param scopedServices A list of Tokens identifying Services which will be scoped to the new Container – that is,\n     * if those Services had already been created by the source Container, they will be re-created by their Factory\n     * functions when provided by the new Container.\n     * @returns A new copy of this Container, sharing all of this Container's Services. Services corresponding to any\n     * Tokens passed to this method will be re-created by the new Container (i.e. they become \"scoped\" to the new\n     * Container).\n     */\n    copy<Tokens extends readonly (keyof Services)[]>(scopedServices?: Tokens): Container<Services> {\n        const factories: MaybeMemoizedFactories<Services> = { ...this.factories };\n\n        // We \"un-memoize\" scoped Service InjectableFunctions so they will create a new copy of their Service when\n        // provided by the new Container – we re-memoize them so the new Container will itself only create one Service\n        // instance.\n        (scopedServices || []).forEach((token: keyof Services) => {\n            factories[token] = this.factories[token].delegate;\n        });\n        return new Container(factories);\n    }\n\n    /**\n     * Gets a reference to this Container.\n     *\n     * @param token The CONTAINER token.\n     * @returns This Container.\n     */\n    get(token: ContainerToken): this;\n\n    /**\n     * Get a specific Service provided by this Container.\n     *\n     * @param token A unique string corresponding to a Service\n     * @returns A Service corresponding to the given Token.\n     */\n    get<Token extends keyof Services>(token: Token): Services[Token];\n\n    get(token: ContainerToken | keyof Services): this | Services[keyof Services] {\n        if (token === CONTAINER) return this;\n        const factory = this.factories[token];\n        if (!factory) {\n            throw new Error(\n                `[Container::get] Could not find Service for Token \"${String(token)}\". This should've caused a ` +\n                    \"compile-time error. If the Token is 'undefined', check all your calls to the Injectable \" +\n                    \"function. Make sure you define dependencies using string literals or string constants that are \" +\n                    \"definitely initialized before the call to Injectable.\"\n            );\n        }\n        return factory(this);\n    }\n\n    /**\n     * Run the services in this [PartialContainer]. \"Run\" simply means that [Container::get] will be called for each\n     * Service, which invokes that Service's factory function, creating the Service.\n     *\n     * This may be useful e.g. if services need to initialize themselves, since generally a Service factory is only\n     * invoked when the Service is needed.\n     *\n     * Note this method cannot be used to add services to a Container. – that is, calling this method does not provide\n     * the services in a new Container.\n     *\n     * @param container Optionally provide a [PartialContainer], which will be used as a filter – the only services\n     * from *this* container that will run are those with a token that is also present in this PartialContainer.\n     * @returns No mutation is done to the Container, it is returned as-is (convenient for chaining).\n     */\n    run<AdditionalServices, Dependencies, FulfilledDependencies extends Dependencies>(\n        // FullfilledDependencies is assignable to Dependencies -- by specifying Container<FulfilledDependencies> as the\n        // `this` type, we ensure this Container can provide all the Dependencies required by the PartialContainer.\n        this: Container<FulfilledDependencies>,\n        container: PartialContainer<AdditionalServices, Dependencies>\n    ): this;\n\n    /**\n     * Run the given Service. \"Run\" simply means that [Container::get] will be called for this Service, which invokes\n     * the Service's factory function, creating the Service.\n     *\n     * This may be useful e.g. if services need to initialize themselves, since generally a Service factory is only\n     * invoked when the Service is needed.\n     *\n     * Note this method cannot be used to add services to a Container. – that is, calling this method does not provide\n     * the services in a new Container.\n     *\n     * @param fn Optionally provide an [InjectableFunction], which will be used as a filter – the only services\n     * from *this* container that will run are those with a token that is also present in this PartialContainer.\n     * @returns No mutation is done to the Container, it is returned as-is (convenient for chaining).\n     */\n    run<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service>(\n        fn: InjectableFunction<Services, Tokens, Token, Service>\n    ): this;\n\n    run<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service, AdditionalServices>(\n        fnOrContainer:\n            | InjectableFunction<Services, Tokens, Token, Service>\n            | PartialContainer<AdditionalServices, Services>\n    ): this {\n        if (fnOrContainer instanceof PartialContainer) {\n            const runnableContainer = this.provides(fnOrContainer);\n            for (const token of fnOrContainer.getTokens()) {\n                runnableContainer.get(token);\n            }\n        } else {\n            this.provides(fnOrContainer).get(fnOrContainer.token);\n        }\n        return this;\n    }\n\n    /**\n     * Create a new Container from this Container with additional services from a given [PartialContainer].\n     *\n     * Services in the provided PartialContainer take precedence if there are service token conflicts.\n     *\n     * Services from the provided PartialContainer become scoped to the new Container – that is, if PartialContainer A\n     * is provided to Container X and Container Y, each resultant Container will contain its own copy of the services\n     * from PartialContainer A.\n     *\n     * @param container A [PartialContainer] providing additional services.\n     */\n    provides<AdditionalServices, Dependencies, FulfilledDependencies extends Dependencies>(\n        // FullfilledDependencies is assignable to Dependencies -- by specifying Container<FulfilledDependencies> as the\n        // `this` type, we ensure this Container can provide all the Dependencies required by the PartialContainer.\n        this: Container<FulfilledDependencies>,\n        container: PartialContainer<AdditionalServices, Dependencies>\n    ): Container<Services & AdditionalServices>;\n\n    /**\n     * Creates a new Container from this Container with additional services from another Container.\n     *\n     * Services in the provided PartialContainer take precedence if there are service token conflicts.\n     *\n     * Services from the provided Container become scoped to both Containers (the one from which they were provided\n     * and the new Container returned by this method) - that is, if Container A is provided to Container B,\n     * they will share the same instances of any Services provided by Container A.\n     * If Container B should re-create new instances of the Services from Container A,\n     * Container A must first be copied before providing it here.\n     *\n     * @param container A [Container] providing additional services.\n     */\n    provides<AdditionalServices>(container: Container<AdditionalServices>): Container<Services & AdditionalServices>;\n\n    /**\n     * Create a new Container which provides a Service created by the given [InjectableFunction].\n     *\n     * The InjectableFunction contains metadata specifying the Token by which the created Service will be known, as well\n     * as an ordered list of Tokens to be resolved and provided to the InjectableFunction as arguments.\n     *\n     * If any of these required dependencies are missing from the Container (or if there is a mismatch between the types\n     * of those dependencies and the arguments of the InjectableFunction), a compiler error will be raised.\n     *\n     * @param fn A factory function, taking dependencies as arguments, which returns the Service.\n     */\n    provides<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service>(\n        fn: InjectableFunction<Services, Tokens, Token, Service>\n    ): Container<AddService<Services, Token, Service>>;\n\n    provides<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service, AdditionalServices>(\n        fnOrContainer:\n            | InjectableFunction<Services, Tokens, Token, Service>\n            | PartialContainer<AdditionalServices, Services>\n            | Container<AdditionalServices>\n    ): Container<any> {\n        if (fnOrContainer instanceof PartialContainer || fnOrContainer instanceof Container) {\n            const factories =\n                fnOrContainer instanceof PartialContainer ? fnOrContainer.getFactories(this) : fnOrContainer.factories;\n            // Safety: `this.factories` and `factories` are both properly type checked, so merging them produces\n            // a Factories object with keys from both Services and AdditionalServices. The compiler is unable to\n            // infer that Factories<A> & Factories<B> == Factories<A & B>, so the cast is required.\n            return new Container({\n                ...this.factories,\n                ...factories,\n            } as unknown as MaybeMemoizedFactories<Services & AdditionalServices>);\n        }\n        return this.providesService(fnOrContainer);\n    }\n\n    private providesService<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service>(\n        fn: InjectableFunction<Services, Tokens, Token, Service>\n    ): Container<AddService<Services, Token, Service>> {\n        const token = fn.token;\n        const dependencies: readonly any[] = fn.dependencies;\n\n        const factory = memoize((container: Container<Services>) => {\n            return fn(\n                ...(dependencies.map((t) => {\n                    // To support overwriting an already-existing service with a new implementation, it should be\n                    // possibleto do `provide(A, [A], a => createNewServiceFromOld(a))` – that is, inject a dependency\n                    // with the same token as this service's token.\n                    //\n                    // To avoid a circular dependency (in which the factory for service A depends on itself), we always\n                    // use the service defined in the *parent* container (i.e. this) when injecting a dependency with\n                    // the same token as the service we're providing. If we did not do this, calling `container.get(t)`\n                    // would result in an infinite loop.\n                    return t === token ? this.get(t) : container.get(t);\n                }) as any)\n            );\n        });\n\n        // Safety: `token` and `factory` are property type checked, so extending `this.factories` produces a\n        // MaybeMemoizedFactories object with the expected set of services – but when using the spread operation to\n        // merge two objects, the compiler widens the Token type to string. So we must re-narrow via casting.\n        const factories = { ...this.factories, [token]: factory };\n        return new Container(factories as unknown as MaybeMemoizedFactories<AddService<Services, Token, Service>>);\n    }\n}\n", "// `Object.entries` does preserve key types.\nexport const entries = (o) => Object.entries(o);\n// `Object.fromEntries` does not preserve key types.\nexport const fromEntries = (entries) => Object.fromEntries(entries);\n", "import { filter } from 'rxjs';\nimport { fromEntries } from './types';\n/**\n * Define an Action by providing a name and (optionally) the type of data the Action carries. Returns a function which\n * creates actions of that type.\n *\n * @param name The action's name, should be unique among all actions used by a single state machine.\n * @returns The function returned is used to specify the type of data the Action carries – it must be called to return\n * the actual action creator, which is then strongly typed.\n */\nexport const defineAction = (name) => () => {\n    const actionCreator = (data) => ({\n        name,\n        data,\n    });\n    Object.defineProperty(actionCreator, 'name', { value: name });\n    // Safety: Object.defineProperty has added the `name` property, but the TS compiler doesn't know that.\n    return actionCreator;\n};\n/**\n * Create an object from action creators, where each property is the name of the action.\n *\n * @param actions Pass one or more actions as arguments, using [[defineAction]] to create each action.\n * @returns\n */\nexport const defineActions = (...actions) => {\n    const entries = actions.map((s) => [s.name, s]);\n    // Safety: TS isn't able to infer that keys are the action names, so we have to cast – but we're just extracting the\n    // name property and using it as the key (we're doing no other manipulation), so we know we'll end up with the\n    // correct ActionCreatorMap.\n    return fromEntries(entries);\n};\n/**\n * Filter an `Observable<[Action, State]>` to only emit when the action matches one of the action names given as\n * arguments.\n * ```ts\n * myStateMachine.pipe(\n *   forActions('myFirstAction', 'mySecondAction'),\n * ).subscribe(doSomethingOnEitherAction)\n * ```\n *\n * @param actions Pass one or more action names as arguments, used to filter an `Observable<[Action, State]>`\n * @returns\n */\nexport function forActions(...actions) {\n    return filter((v) => actions.some(action => v[0].name === action));\n}\n/**\n * Determine if a given action is of a specific type, given by an action name. This narrows the type of the action.\n *\n * @param action An action with a broad type (e.g. a union of many actions)\n * @param name The name of a specific action.\n * @returns Narrows the type of the action argument to that action which has the given name.\n */\nexport function isAction(action, name) {\n    return action.name === name;\n}\n", "import { BehaviorSubject, map, mergeMap, NEVER, Observable, of, raceWith, startWith, Subject, take, tap, withLatestFrom } from 'rxjs';\n/**\n * A StateMachine takes a finite set of both Action and State types, represeting the allowed states of the machine and\n * the possible actions which may (or may not) cause a transition between states.\n *\n * The following algorithm is used to update state. For those who have used Redux, this will sound familiar:\n *\n * 1. The user of the state machine dispatches one of the allowed Actions.\n * 2. The [action, current state] pair is passed to each of the \"reducers\" configured for the state machine. These\n *    reducers must (synchronously) produce a new state, or do nothing.\n * 3. The state machine's internal state is updated to the new state (or remains in the old state if no reducer produced\n *    a new state).\n * 4. Notify all configured \"effects\" with the [action, new state] pair – effects are notified even if the state did not\n *    change. Effects may produce their own actions. This will feel familiar to users of redux-observable.\n *\n * We can visualize this with the following diagram:\n *\n * ```txt\n * dipatch Action\n *    |\n *    |\n * reducers run on [Action, Starting State] and return New State\n *    |\n *    |\n * the state machine's internal state is updated to New State\n *    |\n *    |\n * effects run on [Action, New State]\n * ```\n */\n/** @internal */\nexport class StateMachine {\n    actions;\n    states;\n    /**\n     * After an Action is dispatched, passed to the StateMachine's reducer to produce a new state (or stay in the same\n     * state), a pair of [Action, State] is emitted on this Observable.\n     *\n     * This can be used to observe every action dispatched to the StateMachine, along with the state that it produced.\n     *\n     * The most common use of the `events` Observable is to implement side-effects. It's very common for side-effects\n     * to dispatch actions back to the StateMachine.\n     *\n     * ```ts\n     * stateMachine.events.pipe(\n     *   inStates('idle'),\n     *   forActions('makeRequest'),\n     *   switchMap(([{data: request}]) => fromFetch(request)),\n     *   tap(response => stateMachine.dispatch('requestComplete', response)),\n     * ).subscribe()\n     * ```\n     */\n    events;\n    actionsSubject;\n    eventsSubject;\n    state;\n    /**\n     * Create a StateMachine with a defined set of Actions and States.\n     *\n     * The StateMachine begins in a given initial state with transitions to new states defined by a \"reducer\" function.\n     *\n     * Reducers are OperatorFunctions which map an Observable of `[Action, State]` pairs into an Observable of a new\n     * state. They can be constructed using RxJS's `pipe` function. For example:\n     *\n     * ```ts\n     * new StateMachine(actions, states, initialState, pipe(\n     *   inStates('someState'),\n     *   forActions('someAction'),\n     *   map(([a, s]) => computeNewState(a, s)),\n     * ))\n     * ```\n     *\n     * Often it will be useful to break the reducer into separate behaviors to handle different actions:\n     *\n     * ```ts\n     * new StateMachine(actions, states, initialState, state => {\n     *   return merge(\n     *     state.pipe(inStates('someState'), forAction('someAction'), map(computeNextState)),\n     *     state.pipe(inStates('otherState'), forAction('otherAction'), map(computeOtherNextState)),\n     *     // ...\n     *   )\n     * })\n     * ```\n     *\n     * Reducers must return an output Observable<State> which, when the input Observable<[Action, State]> emits, either:\n     *\n     * - synchronously emits a single new state.\n     * - emits nothing.\n     *\n     * To enforce this, reducer Observables race with a sync Observable containing the current state. If the reducer\n     * Observable does not emit a new state synchronously, the current state is used (i.e. the state does not change).\n     *\n     * @param initialState\n     * @param reducer\n     * @returns\n     */\n    constructor(actions, states, initialState, reducer) {\n        this.actions = actions;\n        this.states = states;\n        this.actionsSubject = new Subject();\n        this.eventsSubject = new Subject();\n        this.events = this.eventsSubject.asObservable();\n        this.state = new BehaviorSubject(initialState);\n        this.actionsSubject\n            .pipe(withLatestFrom(this.state), mergeMap(([a, s]) => \n        // `NEVER` + `startWith` is needed for `raceWith` to work properly. If we instead used the more\n        // typical `of([a, s])` we would encounter the following problem:\n        //\n        // `of` emits its value and completes synchronously (i.e. both in the same \"frame,\" if you think in\n        // marble diagrams). Assuming `reducer` does nothing to modify the completion behavior of its source\n        // Observable, the Observable returned by `reducer` will also complete immediately. If we were to\n        // pass that Observable to `raceWith` – whose output mirrors whichever input Observable is first to\n        // emit, error, *or complete* – it would always win, even if it never emitted anything (because it\n        // would already be complete).\n        //\n        // So instead we need an Observable that does not complete. We achieve this by using `NEVER` and\n        // then starting it with `[a, s]`. Note that it's important to then use `take(1)` after `raceWith`\n        // so that we don't leak Observables which never complete.\n        NEVER.pipe(startWith([a, s]), reducer, raceWith(of(s)), tap((newState) => {\n            if (newState !== s)\n                this.state.next(newState);\n        }), map((newState) => [a, newState]), take(1))))\n            .subscribe(this.eventsSubject);\n    }\n    dispatch(actionOrName, data) {\n        const action = typeof actionOrName === 'string' ? { name: actionOrName, data } : actionOrName;\n        this.actionsSubject.next(action);\n    }\n    /**\n     * Returns the current state.\n     */\n    getState() {\n        return this.state.getValue();\n    }\n}\n/**\n * Transform a source Observable of Actions into an Observable of [Action, State] pairs by:\n * 1. Dispatching the source Actions to the given StateMachine.\n * 3. Return an Observable of that StateMachine's events.\n *\n * This allows callers to dispatch to a StateMachine when the output Observable is subscribed, and then be notified when\n * the StateMachine has produced a new state (which could be the same as the old state).\n *\n * The output Observable will remain subscribed to the StateMachine's events, emitting all subsequent `[Action, State]`\n * pairs. For that reason, it's important to ensure the output Observable is properly unsubscribed to avoid leaks. This\n * is commonly done using the `take`, `takeUntil`, `firstValueFrom`, etc. operators.\n *\n * @param stateMachine The source Observable's Actions will be dispatched to this StateMachine\n * @returns Operator function which transforms an Observable<Action> into an Observable<[Action, State]> by subscribing\n * to the given StateMachine's events and then dispatching source actions to it when they arrive.\n */\nexport function dispatch(stateMachine) {\n    return (source) => new Observable(subscriber => {\n        const subscription = stateMachine.events.subscribe(subscriber);\n        subscription.add(source.subscribe({\n            next: (action) => stateMachine.dispatch(action),\n            error: (error) => subscriber.error(error),\n            // We purposely do not forward the `complete` notification. We want the subscriber to remain subscribed to\n            // the stateMachine.events observable even if the source Observable<Actions> completes.\n        }));\n        return subscription;\n    });\n}\n", "import { filter } from 'rxjs';\nimport { defineAction, defineActions } from './actions';\n/**\n * Define a State by providing a name and (optionally) the type of data the State carries. Returns a function which\n * creates states of that type.\n *\n * @param name The state's name, should be unique among all states used by a single state machine.\n * @returns The function returned is used to specify the type of data the State carries – it must be called to return\n * the actual state creator, which is then strongly typed.\n */\nexport const defineState = (name) => () => defineAction(name)();\n/**\n * Create an object from state creators, where each property is the name of the state.\n *\n * @param states Pass one or more states as arguments, using [[defineState]] to create each state.\n * @returns\n */\nexport const defineStates = (...states) => defineActions(...states);\n/**\n * Filter an `Observable<[Action, State]>` to only emit when the state matches one of the state names given as\n * arguments.\n * ```ts\n * myStateMachine.pipe(\n *   inStates('myFirstState', 'mySecondState'),\n * ).subscribe(doSomethingIfInEitherState)\n * ```\n *\n * @param states Pass one or more state names as arguments, used to filter an `Observable<[Action, State]>`\n * @returns An Observable which only emits when in one of the given states.\n */\nexport function inStates(...states) {\n    return filter((v) => states.some(state => v[1].name === state));\n}\n/**\n * Determine if a given state is of a specific type, given by an state name. This narrows the type of the state.\n *\n * @param state A state with a broad type (e.g. a union of many states)\n * @param name The name of a specific state.\n * @returns Narrows the type of the state argument to that state which has the given name.\n */\nexport function isState(state, name) {\n    return state.name === name;\n}\n", "import { TupleOf } from \"../common/types\";\n\n/**\n * Use this class to supply the CameraKitSession::setSourceTransform with the proper data\n * needed to apply transformations\n *\n * @category Rendering\n */\nexport class Transform2D {\n    static readonly MirrorX = new Transform2D([-1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0]);\n    static readonly MirrorY = new Transform2D([1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 1.0]);\n    static readonly Identity = new Transform2D([1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]);\n\n    /**\n     * @param matrix A 3x3 matrix in column-major order, representing a 2D transform to be applied to the source media\n     */\n    constructor(readonly matrix: TupleOf<number, 9>) {}\n}\n", "/* eslint-disable @typescript-eslint/member-ordering */\n\nimport { copyDefinedProperties } from \"../common/copyDefinedProperties\";\nimport { validate } from \"../common/validate\";\nimport { LensCore, UseMediaElementInput } from \"../lens-core-module\";\nimport { Transform2D } from \"../transforms\";\n\nconst defaultDeviceInfo: CameraKitDeviceOptions = {\n    cameraType: \"user\",\n    fpsLimit: Number.POSITIVE_INFINITY,\n};\n\nconst createNotAttachedError = (message: string) =>\n    new Error(`${message}. This CameraKitSource is not attached to a CameraKitSession.`);\n\n/**\n * When creating a {@link CameraKitSource}, passing a CameraKitSourceSubscriber allows logic to implemented which will\n * run whenever that source is attached/detached from a CameraKitSession.\n *\n * @category Rendering\n */\nexport interface CameraKitSourceSubscriber {\n    readonly onAttach?: (\n        source: CameraKitSource,\n        lensCore: LensCore,\n        reportError: (error: Error) => void\n    ) => void | Promise<void>;\n    readonly onDetach?: (reportError: (error: Error) => void) => void | Promise<void>;\n}\n\n/** @category Rendering\n * @deprecated use {@link CameraKitDeviceOptions}\n */\nexport type CameraKitDeviceInfo = {\n    /** @deprecated \"front\" and \"back\" are deprecated please use \"user\" or \"enviroment\" for cameraType instead */\n    cameraType: \"front\" | \"back\";\n    fpsLimit: number;\n};\n\n/** @category Rendering */\nexport type CameraKitDeviceOptions = {\n    cameraType: \"user\" | \"environment\";\n    fpsLimit: number;\n};\n\nexport type CameraKitSourceInfo = Pick<\n    UseMediaElementInput,\n    \"media\" | \"replayTrackingData\" | \"useManualFrameProcessing\"\n>;\n\n/** @category Rendering */\nexport type CameraKitSourceOptions<T = {}> = Partial<T> & Partial<CameraKitDeviceInfo | CameraKitDeviceOptions>;\n\n/**\n * This general-purpose class represents a source of media for a {@link CameraKitSession}.\n *\n * When an instance is passed to {@link CameraKitSession.setSource | CameraKitSession.setSource}, it will be \"attached\"\n * to the session. Later it may be \"detached\" from the session.\n *\n * Passing a {@link CameraKitSourceSubscriber} to the constructor allows callers to specify behavior\n * that will occur when the source is attached and detached. This can be used to e.g. update the render size.\n *\n * @category Rendering\n */\nexport class CameraKitSource {\n    private lensCore?: LensCore;\n    private readonly deviceInfo: CameraKitDeviceInfo | CameraKitDeviceOptions;\n\n    constructor(\n        private readonly sourceInfo: CameraKitSourceInfo,\n        private readonly subscriber: CameraKitSourceSubscriber = {},\n        deviceInfo: Partial<CameraKitDeviceInfo | CameraKitDeviceOptions> = {}\n    ) {\n        this.deviceInfo = { ...defaultDeviceInfo, ...copyDefinedProperties(deviceInfo) };\n    }\n\n    /**\n     * Called by {@link CameraKitSession} when this source is set as that session's source.\n     *\n     * @param lensCore\n     * @param reportError Calling this function will report an error back to the session.\n     * @returns Rejects if any calls to LensCore or CameraKitSource.subscriber.onAttach fail.\n     * @internal\n     */\n    async attach(lensCore: LensCore, reportError: (error: Error) => void): Promise<void> {\n        if (this.lensCore) {\n            throw new Error(\n                \"Cannot attach. This CameraKitCustomSource has already been attached to \" +\n                    \"a CameraKitSession. To re-attach, create a copy of this CameraKitCustomSource.\"\n            );\n        }\n\n        this.lensCore = lensCore;\n\n        await lensCore.useMediaElement({\n            autoplayNewMedia: false,\n            autoplayPreviewCanvas: false,\n            media: this.sourceInfo.media,\n            pauseExistingMedia: false,\n            replayTrackingData: this.sourceInfo.replayTrackingData,\n            requestWebcam: false,\n            startOnFrontCamera: [\"user\", \"front\"].includes(this.deviceInfo.cameraType),\n            useManualFrameProcessing: this.sourceInfo.useManualFrameProcessing,\n        });\n\n        // LensCore uses 0 to remove the limit.\n        const fps = this.deviceInfo.fpsLimit < Number.POSITIVE_INFINITY ? this.deviceInfo.fpsLimit : 0;\n        await lensCore.setFPSLimit({ fps });\n\n        if (this.subscriber.onAttach) await this.subscriber.onAttach(this, lensCore, reportError);\n    }\n\n    /**\n     * Make a copy of the source, sharing the same {@link CameraKitSourceSubscriber}.\n     *\n     * @param deviceInfo Optionally provide new device info for the copy (e.g. to change the camera type).\n     * @returns The new {@link CameraKitSource}\n     */\n    /** @deprecated Use {@link CameraKitDeviceOptions} where cameraType is either \"environment\" or \"user\" */\n    copy(deviceInfo?: Partial<CameraKitDeviceInfo>): CameraKitSource;\n    copy(deviceInfo?: Partial<CameraKitDeviceOptions>): CameraKitSource;\n    copy(deviceInfo: Partial<CameraKitDeviceOptions | CameraKitDeviceInfo> = {}): CameraKitSource {\n        return new CameraKitSource(this.sourceInfo, this.subscriber, { ...this.deviceInfo, ...deviceInfo });\n    }\n\n    /**\n     * Called by {@link CameraKitSession} when it must remove this source.\n     *\n     * @param reportError Calling this function will report an error back to the session.\n     * @returns\n     * @internal\n     */\n    detach(reportError: (error: Error) => void): void | Promise<void> {\n        if (!this.lensCore) return Promise.reject(createNotAttachedError(\"Cannot detach\"));\n        if (this.subscriber.onDetach) return this.subscriber.onDetach(reportError);\n    }\n\n    /**\n     * Set the resolution used to render this source.\n     *\n     * It’s important to distinguish render size from display size. The size at which the output canvases are displayed\n     * on a web page is determined by the CSS of the page. It is distinct from the size at which LensCore renders\n     * Lenses. Performance is dominated by render size, while any display scaling can most often be thought of as free.\n     *\n     * If greater performance is required, a smaller render size may boost frame-rate. It does come at a cost, including\n     * loss of accuracy in various tracking and computer-vision algorithms (since they'll be operating on fewer pixels).\n     *\n     * The size of the Live and Capture {@link RenderTarget} is always the same.\n     *\n     * @todo Currently it's only valid to call `setRenderSize` after `CameraKitSession.play` has been called. This\n     * constraint should be removed, so callers don't have to understand the underlying LensCore state machine.\n     *\n     * @param width pixels\n     * @param height pixels\n     * @returns Promise resolves when the render size has been successfully updated.\n     */\n    @validate\n    setRenderSize(width: number, height: number): Promise<void> {\n        if (!this.lensCore) return Promise.reject(createNotAttachedError(\"Cannot setRenderSize\"));\n        const target = { width, height };\n        return this.lensCore.setRenderSize({ mode: \"explicit\", target });\n    }\n\n    /**\n     * Apply a 2D transformation to the source (e.g. translation, rotation, scale).\n     *\n     * @param transform Specifies the 3x3 matrix describing the transformation.\n     */\n    @validate\n    setTransform(transform: Transform2D): Promise<void> {\n        if (!this.lensCore) return Promise.reject(createNotAttachedError(\"Cannot setTransform\"));\n        const matrix = new Float32Array(transform.matrix);\n        return this.lensCore.setInputTransform({ matrix });\n    }\n}\n", "import { ensureError } from \"../common/errorHelpers\";\nimport { Transform2D } from \"../transforms\";\nimport { CameraKitSource, CameraKitSourceOptions } from \"./CameraKitSource\";\n\nconst defaultOptions: MediaStreamSourceOptions = {\n    transform: Transform2D.Identity,\n    disableSourceAudio: false,\n};\n\nfunction closeWorklet(worklet: AudioWorkletNode | undefined) {\n    if (!worklet) return;\n    worklet.port.close();\n    worklet.port.onmessage = null;\n    worklet.disconnect();\n}\n\nasync function closeAudioContext(audioContext: AudioContext | undefined) {\n    if (!audioContext || audioContext.state === \"closed\") return;\n    return audioContext.close();\n}\n\n/** @category Rendering */\nexport interface MediaStreamSourceOptions {\n    transform: Transform2D;\n    disableSourceAudio: boolean; // defaults to false\n}\n\n/**\n * Create a {@link CameraKitSource} from a user's media device -- this calls\n * [MediaDevices.getUserMedia](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia) to get a\n * MediaStream and then calls {@link createMediaStreamSource}.\n *\n * @param constraints Specify contraints used to get a MediaStream from a media device. By default we simply request\n * a video stream.\n * @param options\n * @param options.transform By default we horizontally mirror the video stream. The most common use-case is to obtain a\n * stream from a front-facing web cam, which requires mirroring to be viewed naturally.\n * @param options.cameraType By default we set this to 'front' to indicate a camera pointed at the user (e.g. a webcam).\n * @param options.fpsLimit By default we set no limit on FPS – if the source device has a known FPS setting this limit\n * may prevent CameraKit from using more compute resources than strictly necessary.\n * @returns A Promise, resolving to {@link CameraKitSource}\n *\n * @category Rendering\n *\n * @deprecated The helper will be removed in one of the future releases.\n * Consumer apps are responsible for acquiring a media stream,\n * which can then be supplied to {@link createMediaStreamSource}.\n */\nexport async function createUserMediaSource(\n    constraints: MediaStreamConstraints = { video: true },\n    options: CameraKitSourceOptions<MediaStreamSourceOptions> = {}\n): Promise<CameraKitSource> {\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    return createMediaStreamSource(stream, { transform: Transform2D.MirrorX, cameraType: \"front\", ...options });\n}\n\n/**\n * Create a {@link CameraKitSource} from any\n * [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream).\n *\n * @param stream Any MediaStream, such as obtained via `canvas.captureStream()` or `mediaDevices.getUserMedia()`.\n * @param options\n * @param options.transform We apply no transformation by default.\n * @param options.disableSourceAudio By default we pass audio to lens. Settings this to true will disable sending audio\n * to the lens.\n * @param options.cameraType By default we set this to 'user', which is the camera type most Lenses expect.\n * @param options.fpsLimit By default we set no limit on FPS – if the MediaStream has a known FPS setting this limit\n * may prevent CameraKit from using more compute resources than strictly necessary.\n *\n * @category Rendering\n */\nexport function createMediaStreamSource(\n    stream: MediaStream,\n    options: CameraKitSourceOptions<MediaStreamSourceOptions> = {}\n): CameraKitSource {\n    const { width, height, facingMode } =\n        stream.getVideoTracks().length > 0\n            ? stream.getVideoTracks()[0].getSettings()\n            : { width: 0, height: 0, facingMode: undefined };\n\n    const detectedCameraType = facingMode === \"user\" || facingMode === \"environment\" ? facingMode : undefined;\n\n    const optionsWithDefaults = {\n        ...defaultOptions,\n        ...options,\n        cameraType: options.cameraType ?? detectedCameraType,\n    };\n\n    const enableSourceAudio: boolean = stream.getAudioTracks().length > 0 && !optionsWithDefaults.disableSourceAudio;\n\n    const simulateStereoAudio = true;\n    const sampleRate: number = 44100;\n\n    let audioContext: AudioContext | undefined = undefined;\n    let audioSource: MediaStreamAudioSourceNode | undefined = undefined;\n    let worklet: AudioWorkletNode | undefined = undefined;\n    let microphoneRecorderUrl: string;\n\n    if (enableSourceAudio) {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Using_AudioWorklet\n        const microphoneRecorderWorklet = `\n        class MicrophoneWorkletProcessor extends AudioWorkletProcessor {\n            process(inputs, outputs, parameters) {\n                this.port.postMessage({\n                    eventType: 'data',\n                    buffer: inputs\n                });\n                return true;\n            }\n        }\n        registerProcessor('microphone-worklet', MicrophoneWorkletProcessor);`;\n        const microphoneRecorderBlob = new Blob([microphoneRecorderWorklet], {\n            type: \"application/javascript\",\n        });\n        microphoneRecorderUrl = URL.createObjectURL(microphoneRecorderBlob);\n    }\n\n    return new CameraKitSource(\n        { media: stream },\n        {\n            onAttach: async (source, lensCore, reportError) => {\n                if (width !== undefined && height !== undefined) await source.setRenderSize(width, height);\n                await source.setTransform(optionsWithDefaults.transform);\n\n                if (enableSourceAudio) {\n                    // Audio paramters set has to be called before lens is applied\n                    await lensCore.setAudioParameters({\n                        parameters: {\n                            numChannels: simulateStereoAudio ? 2 : 1,\n                            sampleRate,\n                        },\n                    });\n\n                    try {\n                        // There is a possibility of the onAttach method being called twice in a row due to a bug.\n                        // To ensure there are not leaks, it is better to close any existing connections.\n                        closeWorklet(worklet);\n                        audioSource?.disconnect();\n                        await closeAudioContext(audioContext);\n                    } catch (error) {\n                        // We still want to continue if anything above failed\n                        reportError(ensureError(error));\n                    }\n\n                    audioContext = new AudioContext();\n                    audioSource = audioContext.createMediaStreamSource(stream);\n                    const scopedAudioSource = audioSource;\n                    audioContext.audioWorklet\n                        .addModule(microphoneRecorderUrl)\n                        .then(() => {\n                            if (audioContext) {\n                                worklet = new AudioWorkletNode(audioContext, \"microphone-worklet\");\n                                scopedAudioSource.connect(worklet);\n                                worklet.connect(audioContext.destination);\n                                // NOTE: We subscribe to messages here, and they will continue to arrive\n                                // even after audioContext.close() is called. To disconnect the audio worklets\n                                // created here, we need to track two variables - worklet and audioSource.\n                                // By calling disconnect() on them, we can properly\n                                // disconnect the audio worklets.\n                                worklet.port.onmessage = (e) => {\n                                    if (e.data.eventType === \"data\") {\n                                        // developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/process\n                                        // inputs[n][m] is the list of samples in the n-th input at the m-th channel.\n                                        const leftSamples = e.data.buffer[0][0] as Float32Array;\n\n                                        // Firefox might have leftSamples undefined:\n                                        // https://jira.sc-corp.net/browse/CAMKIT-5189\n                                        if (!leftSamples) return;\n\n                                        let inputBuffers = [leftSamples];\n                                        if (simulateStereoAudio) {\n                                            const rightSamples =\n                                                e.data.buffer[0].length > 1 ? e.data.buffer[0][1] : leftSamples.slice();\n                                            inputBuffers.push(rightSamples);\n                                        }\n\n                                        lensCore.processAudioSampleBuffer({ input: inputBuffers }).catch(reportError);\n                                    }\n                                };\n                            }\n                        })\n                        .catch((error: Error) => {\n                            reportError(error);\n                        });\n                }\n            },\n            onDetach: async (reportError) => {\n                if (worklet) {\n                    closeWorklet(worklet);\n                    worklet = undefined;\n                }\n                if (audioSource) {\n                    audioSource.disconnect();\n                    audioSource = undefined;\n                }\n                if (audioContext) {\n                    await closeAudioContext(audioContext).catch(reportError);\n                    audioContext = undefined;\n                }\n            },\n        },\n        optionsWithDefaults\n    );\n}\n", "import { CameraKitSource, CameraKitSourceOptions } from \"./CameraKitSource\";\n\nconst defaultOptions: VideoSourceOptions = {\n    trackingData: new ArrayBuffer(0),\n};\n\n/** @category Rendering */\nexport interface VideoSourceOptions {\n    trackingData: ArrayBuffer;\n}\n\n/**\n * Create a {@link CameraKitSource} from an\n * [HTMLVideoElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement).\n *\n * @param video CameraKit performs best when the source video is 720p – arbitrary resolutions are supported, but very\n * high resolutions may not perform well.\n * @param options\n * @param options.trackingData If pre-computed tracking data exists for this video, it may be provided in order to boost\n * rendering performance (it is not typical or expected for this to be provided).\n * @param options.cameraType By default we set this to 'user', which is the camera type most Lenses expect.\n * @param options.fpsLimit By default we set no limit on FPS – if the video has a known FPS setting this limit\n * may prevent CameraKit from using more compute resources than strictly necessary.\n *\n * @category Rendering\n */\nexport function createVideoSource(\n    video: HTMLVideoElement,\n    options: CameraKitSourceOptions<VideoSourceOptions> = {}\n): CameraKitSource {\n    const { trackingData } = { ...defaultOptions, ...options };\n    const replayTrackingData = trackingData.byteLength > 0 ? { buffer: trackingData } : undefined;\n\n    return new CameraKitSource(\n        {\n            media: video,\n            replayTrackingData,\n        },\n        {\n            onAttach: (source) => {\n                // If the video element has no explicit width/height (which may be the case for elements that have not\n                // been added to the DOM or had their size set explicitly), we'll render at the video's native\n                // resolution.\n                const [width, height] =\n                    video.width === 0 || video.height === 0\n                        ? [video.videoWidth, video.videoHeight]\n                        : [video.width, video.height];\n\n                return source.setRenderSize(width, height);\n            },\n        },\n        options\n    );\n}\n", "import { Injectable } from \"../dependency-injection/Injectable\";\nimport { resetLogger } from \"./logger\";\n\n/**\n * The factory creates new logEntries subject.\n *\n * NOTE: The factory calls `resetLogger()`, which overrides the global `logEntrySubject`.\n * This is currently necessary to avoid sharing the same subject between multiple `CameraKit` instances.\n * In the future, we may throw an error when bootstrapping more than a single `CameraKit`,\n * that will allow us to have a single log entry subject.\n *\n * @internal\n */\nexport const logEntriesFactory = Injectable(\"logEntries\", () => resetLogger().asObservable());\n", "interface FrameMetricsState {\n    avgFps: number;\n    averageProcessingTime: number;\n    n: number;\n    processingTimeBuckets: Uint32Array;\n    procFrameCount: number;\n    procFrameMean: number;\n    procFrameD2: number;\n}\n\nconst getDefaultFrameMetricsState = (): FrameMetricsState => ({\n    avgFps: 0,\n    averageProcessingTime: 0,\n    n: 0,\n    processingTimeBuckets: new Uint32Array(frameProcessingTimeMedianMax + 1),\n    procFrameCount: 0,\n    procFrameMean: 0,\n    procFrameD2: 0,\n});\n\n// This duration is chosen to be larger than we expect frame processing to reasonably take on any device, but smaller\n// than the duration of a manual rendering pause (e.g. a user clicking a pause button followed by a play button).\n//\n// This also defines the min avgFps that will be reported – if we see avgFps at `1 / frameDurationThresholdSec`\n// consistently, it's safe to assume actual fps is probably even lower.\nconst frameDurationThreshold: number = 1;\n\n// When computing the median frame processing time, in order to save space, we'll record a maximum frame processing\n// time median of 200ms -- that's already unnusably slow, and we don't really care if the true median is greater than\n// 200ms.\nconst frameProcessingTimeMedianMax = 200;\n\n/**\n * @category Rendering\n * @category Metrics\n */\nexport interface ComputedFrameMetrics {\n    avgFps: number;\n    lensFrameProcessingTimeMsAvg: number;\n    lensFrameProcessingTimeMsStd: number;\n    lensFrameProcessingTimeMsMedian: number;\n    lensFrameProcessingN: number;\n}\n\n/**\n * Represents an ongoing measurement of rendering metrics.\n *\n * An instance of this class is obtained by calling {@link LensPerformanceMetrics.beginMeasurement}. Then it may be\n * used to record rendering performance metrics, reset measurement, or end the measurement.\n *\n * @category Rendering\n * @category Metrics\n */\nexport class LensPerformanceMeasurement {\n    private state: FrameMetricsState = { ...getDefaultFrameMetricsState() };\n    private priorFrameCompletedTime?: number;\n\n    constructor(private instances: Set<LensPerformanceMeasurement>) {\n        this.instances.add(this);\n    }\n\n    /** @internal */\n    update(processingTimeMs: number): void {\n        this.computeRunningStats(processingTimeMs);\n    }\n\n    /**\n     * Return a {@link ComputedFrameMetrics} object, containing lens performance metrics.\n     *\n     * This method may be called multiple times, each time reporting values computed since the time when this instance\n     * was created.\n     */\n    measure(): ComputedFrameMetrics {\n        // We count the number of frames in each per-millisecond bucket, stopping when we've counted half the frames --\n        // that bucket contains the median.\n        let median = 0;\n        let count = 0;\n        for (; median < this.state.processingTimeBuckets.length; median++) {\n            count += this.state.processingTimeBuckets[median];\n            if (count >= (this.state.n + 1) / 2) break;\n        }\n        return {\n            avgFps: this.state.avgFps,\n            lensFrameProcessingTimeMsAvg: this.state.procFrameMean,\n            lensFrameProcessingTimeMsStd: Math.sqrt(this.state.procFrameD2 / this.state.procFrameCount),\n            lensFrameProcessingTimeMsMedian: this.state.n > 0 ? median : 0,\n            lensFrameProcessingN: this.state.n,\n        };\n    }\n\n    /**\n     * Reset the measured perforamance statistics (averages, std deviations). This is equivalent to using\n     * {@link LensPerformanceMetrics.beginMeasurement} to create a new LensPerformanceMeasurement instance, but may be\n     * more convenient.\n     */\n    reset(): void {\n        this.state = { ...getDefaultFrameMetricsState() };\n    }\n\n    /**\n     * Stop measuring performance statistics.\n     *\n     * This instance will not be garbage collected until this method is called. Therefore it is important to call this\n     * method at the appropriate time to avoid leaking memory -- particularly if your application creates many\n     * LensPerformanceMeasurement instances.\n     */\n    end(): void {\n        this.instances.delete(this);\n    }\n    /**\n     * In order to calculate the mean, variance, and standard deviation for the processing times\n     *  we are using Welford's online algorithm.\n     * https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Welford's_online_algorithm\n     *\n     * @param processingTimeMs Processing time that is returned from registered callback\n     */\n    private computeRunningStats(processingTimeMs: number) {\n        // calculate mean and delta squared for variance and standard deviation\n        const delta = processingTimeMs - this.state.procFrameMean;\n        this.state.procFrameCount += 1;\n        this.state.procFrameMean += delta / this.state.procFrameCount;\n\n        const delta2 = processingTimeMs - this.state.procFrameMean;\n        this.state.procFrameD2 += delta * delta2;\n\n        // Determine average fps\n        if (this.priorFrameCompletedTime === undefined) {\n            this.priorFrameCompletedTime = performance.now();\n        } else {\n            const frameDurationSec = (performance.now() - this.priorFrameCompletedTime) / 1000;\n            if (frameDurationSec < frameDurationThreshold) {\n                this.state.avgFps = (this.state.avgFps + 1 / frameDurationSec) / 2;\n            }\n            this.priorFrameCompletedTime = performance.now();\n        }\n\n        // To approximate the median, we put each processing time into a per-millisecond bucket, and then when we\n        // compute a measurement, we can count how many frames fell into each bucket. We don't care about latencies\n        // above 200ms, since that's already unusably slow (if we regress from 280ms to 320ms, we don't really care\n        // since both are unnusable).\n        this.state.n++;\n        this.state.processingTimeBuckets[Math.min(Math.round(processingTimeMs), frameProcessingTimeMedianMax)]++;\n    }\n}\n", "import { errorLoggingDecorator } from \"../logger/errorLoggingDecorator\";\nimport { LensCore } from \"../lens-core-module\";\nimport { getLogger } from \"../logger/logger\";\nimport { LensPerformanceMeasurement } from \"./LensPerformanceMeasurement\";\n\nconst logger = getLogger(\"RenderingMetrics\");\nconst log = errorLoggingDecorator(logger);\n\n/**\n * Use to measure lens rendering performance.\n *\n * The {@link LensPerformanceMetrics.beginMeasurement} method is used to start measuring rendering performance. After\n * a measurement has begun, performance metrics can be read using {@link LensPerformanceMeasurement}.\n *\n * @example\n * ```ts\n * const measurement = cameraKitSession.metrics.beginMeasurement()\n * // some time later\n * console.log(measurement.measure())\n * ```\n *\n * @category Rendering\n * @category Metrics\n */\nexport class LensPerformanceMetrics {\n    private readonly measurementInstances: Set<LensPerformanceMeasurement>;\n\n    /** @internal */\n    constructor(private lensCore: LensCore) {\n        this.measurementInstances = new Set();\n        this.lensCore\n            .setOnFrameProcessedCallback({\n                onFrameProcessed: ({ processingTimeMs }) => {\n                    try {\n                        for (const measurement of this.measurementInstances.values()) {\n                            measurement.update(processingTimeMs);\n                        }\n                    } catch (error) {\n                        logger.error(error);\n                    }\n                },\n            })\n            .catch((error) =>\n                logger.error(`Failed registering setOnFrameProcessedCallback with error: ${error.message}`)\n            );\n    }\n\n    /**\n     * Begin a measurement window, during which time rendering metrics will be gathered.\n     *\n     * @returns A {@link LensPerformanceMeasurement} representing an ongoing measurement of aggregated rendering\n     * metrics, from which specific metrics can be obtained.\n     */\n    @log\n    beginMeasurement(): LensPerformanceMeasurement {\n        return new LensPerformanceMeasurement(this.measurementInstances);\n    }\n}\n", "import { Injectable } from \"../dependency-injection/Injectable\";\nimport { persistentStoreError } from \"../namedErrors\";\nimport { lensCoreFactory, LensCore } from \"../lens-core-module\";\nimport { getLogger } from \"../logger/logger\";\nimport { IndexedDBPersistence } from \"../persistence/IndexedDBPersistence\";\n\nconst logger = getLogger(\"LensPersistenceStore\");\n\nexport const lensPersistenceStoreFactory = Injectable(\n    \"lensPersistenceStore\",\n    [lensCoreFactory.token] as const,\n    (lensCore: LensCore): IndexedDBPersistence<ArrayBuffer> => {\n        const db = new IndexedDBPersistence<ArrayBuffer>({ databaseName: \"lensPersistenceStore\" });\n        lensCore.registerSavePersistentStoreCallback(async (id, data) => {\n            try {\n                await db.store(id, data);\n            } catch (error) {\n                logger.error(persistentStoreError(`Error occurred while storing data for lens ${id}.`, error));\n            }\n        });\n        return db;\n    }\n);\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Snappable } from \"./snappable\";\nimport { Lures } from \"./lures\";\nimport { UserData } from \"./user_data\";\nimport { PersistentStore } from \"./persistent_store\";\nimport { LaunchParams } from \"./launch_params\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface LaunchData {\n    snappable: Snappable | undefined;\n    lures: Lures | undefined;\n    userId: string;\n    entryPoint: LaunchData_EntryPoint;\n    userData: UserData | undefined;\n    persistentStore: PersistentStore | undefined;\n    launchParams: LaunchParams | undefined;\n    apiDescriptors: LaunchData_ApiDescriptor[];\n    renderConfig: LaunchData_RenderConfig;\n    activationSource: LaunchData_ActivationSource;\n}\nexport enum LaunchData_EntryPoint {\n    LIVE_CAMERA = \"LIVE_CAMERA\",\n    STORY_REPLY = \"STORY_REPLY\",\n    CHAT_REPLY = \"CHAT_REPLY\",\n    RESTART = \"RESTART\",\n    PREVIEW_CANCEL = \"PREVIEW_CANCEL\",\n    MAP = \"MAP\",\n    BITMOJI_STICKERS = \"BITMOJI_STICKERS\",\n    POST_CAPTURE_PREVIEW = \"POST_CAPTURE_PREVIEW\",\n    POST_CAPTURE_TRANSCODING = \"POST_CAPTURE_TRANSCODING\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function launchData_EntryPointFromJSON(object: any): LaunchData_EntryPoint {\n    switch (object) {\n        case 0:\n        case \"LIVE_CAMERA\":\n            return LaunchData_EntryPoint.LIVE_CAMERA;\n        case 1:\n        case \"STORY_REPLY\":\n            return LaunchData_EntryPoint.STORY_REPLY;\n        case 2:\n        case \"CHAT_REPLY\":\n            return LaunchData_EntryPoint.CHAT_REPLY;\n        case 3:\n        case \"RESTART\":\n            return LaunchData_EntryPoint.RESTART;\n        case 4:\n        case \"PREVIEW_CANCEL\":\n            return LaunchData_EntryPoint.PREVIEW_CANCEL;\n        case 5:\n        case \"MAP\":\n            return LaunchData_EntryPoint.MAP;\n        case 6:\n        case \"BITMOJI_STICKERS\":\n            return LaunchData_EntryPoint.BITMOJI_STICKERS;\n        case 7:\n        case \"POST_CAPTURE_PREVIEW\":\n            return LaunchData_EntryPoint.POST_CAPTURE_PREVIEW;\n        case 8:\n        case \"POST_CAPTURE_TRANSCODING\":\n            return LaunchData_EntryPoint.POST_CAPTURE_TRANSCODING;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LaunchData_EntryPoint.UNRECOGNIZED;\n    }\n}\nexport function launchData_EntryPointToNumber(object: LaunchData_EntryPoint): number {\n    switch (object) {\n        case LaunchData_EntryPoint.LIVE_CAMERA:\n            return 0;\n        case LaunchData_EntryPoint.STORY_REPLY:\n            return 1;\n        case LaunchData_EntryPoint.CHAT_REPLY:\n            return 2;\n        case LaunchData_EntryPoint.RESTART:\n            return 3;\n        case LaunchData_EntryPoint.PREVIEW_CANCEL:\n            return 4;\n        case LaunchData_EntryPoint.MAP:\n            return 5;\n        case LaunchData_EntryPoint.BITMOJI_STICKERS:\n            return 6;\n        case LaunchData_EntryPoint.POST_CAPTURE_PREVIEW:\n            return 7;\n        case LaunchData_EntryPoint.POST_CAPTURE_TRANSCODING:\n            return 8;\n        default:\n            return 0;\n    }\n}\nexport enum LaunchData_ApiDescriptor {\n    NONE = \"NONE\",\n    EXPERIMENTAL = \"EXPERIMENTAL\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function launchData_ApiDescriptorFromJSON(object: any): LaunchData_ApiDescriptor {\n    switch (object) {\n        case 0:\n        case \"NONE\":\n            return LaunchData_ApiDescriptor.NONE;\n        case 1:\n        case \"EXPERIMENTAL\":\n            return LaunchData_ApiDescriptor.EXPERIMENTAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LaunchData_ApiDescriptor.UNRECOGNIZED;\n    }\n}\nexport function launchData_ApiDescriptorToNumber(object: LaunchData_ApiDescriptor): number {\n    switch (object) {\n        case LaunchData_ApiDescriptor.NONE:\n            return 0;\n        case LaunchData_ApiDescriptor.EXPERIMENTAL:\n            return 1;\n        default:\n            return 0;\n    }\n}\nexport enum LaunchData_RenderConfig {\n    DEFAULT = \"DEFAULT\",\n    REPLAY_STREAM = \"REPLAY_STREAM\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function launchData_RenderConfigFromJSON(object: any): LaunchData_RenderConfig {\n    switch (object) {\n        case 0:\n        case \"DEFAULT\":\n            return LaunchData_RenderConfig.DEFAULT;\n        case 1:\n        case \"REPLAY_STREAM\":\n            return LaunchData_RenderConfig.REPLAY_STREAM;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LaunchData_RenderConfig.UNRECOGNIZED;\n    }\n}\nexport function launchData_RenderConfigToNumber(object: LaunchData_RenderConfig): number {\n    switch (object) {\n        case LaunchData_RenderConfig.DEFAULT:\n            return 0;\n        case LaunchData_RenderConfig.REPLAY_STREAM:\n            return 1;\n        default:\n            return 0;\n    }\n}\nexport enum LaunchData_ActivationSource {\n    ACTIVATION_SOURCE_UNSET = \"ACTIVATION_SOURCE_UNSET\",\n    ACTIVATION_SOURCE_DEFAULT = \"ACTIVATION_SOURCE_DEFAULT\",\n    CREATIVE = \"CREATIVE\",\n    SCAN = \"SCAN\",\n    SCAN_HISTORY = \"SCAN_HISTORY\",\n    CHAT_FEED_PSA = \"CHAT_FEED_PSA\",\n    GROWTH_NOTIFICATION = \"GROWTH_NOTIFICATION\",\n    MASS_SNAP = \"MASS_SNAP\",\n    SMART_CTA = \"SMART_CTA\",\n    MASS_CHAT = \"MASS_CHAT\",\n    BILLBOARD_FHP = \"BILLBOARD_FHP\",\n    LENS_ACTIVITY_CENTER = \"LENS_ACTIVITY_CENTER\",\n    AR_BAR = \"AR_BAR\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function launchData_ActivationSourceFromJSON(object: any): LaunchData_ActivationSource {\n    switch (object) {\n        case 0:\n        case \"ACTIVATION_SOURCE_UNSET\":\n            return LaunchData_ActivationSource.ACTIVATION_SOURCE_UNSET;\n        case 1:\n        case \"ACTIVATION_SOURCE_DEFAULT\":\n            return LaunchData_ActivationSource.ACTIVATION_SOURCE_DEFAULT;\n        case 2:\n        case \"CREATIVE\":\n            return LaunchData_ActivationSource.CREATIVE;\n        case 3:\n        case \"SCAN\":\n            return LaunchData_ActivationSource.SCAN;\n        case 4:\n        case \"SCAN_HISTORY\":\n            return LaunchData_ActivationSource.SCAN_HISTORY;\n        case 5:\n        case \"CHAT_FEED_PSA\":\n            return LaunchData_ActivationSource.CHAT_FEED_PSA;\n        case 6:\n        case \"GROWTH_NOTIFICATION\":\n            return LaunchData_ActivationSource.GROWTH_NOTIFICATION;\n        case 7:\n        case \"MASS_SNAP\":\n            return LaunchData_ActivationSource.MASS_SNAP;\n        case 8:\n        case \"SMART_CTA\":\n            return LaunchData_ActivationSource.SMART_CTA;\n        case 9:\n        case \"MASS_CHAT\":\n            return LaunchData_ActivationSource.MASS_CHAT;\n        case 10:\n        case \"BILLBOARD_FHP\":\n            return LaunchData_ActivationSource.BILLBOARD_FHP;\n        case 11:\n        case \"LENS_ACTIVITY_CENTER\":\n            return LaunchData_ActivationSource.LENS_ACTIVITY_CENTER;\n        case 12:\n        case \"AR_BAR\":\n            return LaunchData_ActivationSource.AR_BAR;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LaunchData_ActivationSource.UNRECOGNIZED;\n    }\n}\nexport function launchData_ActivationSourceToNumber(object: LaunchData_ActivationSource): number {\n    switch (object) {\n        case LaunchData_ActivationSource.ACTIVATION_SOURCE_UNSET:\n            return 0;\n        case LaunchData_ActivationSource.ACTIVATION_SOURCE_DEFAULT:\n            return 1;\n        case LaunchData_ActivationSource.CREATIVE:\n            return 2;\n        case LaunchData_ActivationSource.SCAN:\n            return 3;\n        case LaunchData_ActivationSource.SCAN_HISTORY:\n            return 4;\n        case LaunchData_ActivationSource.CHAT_FEED_PSA:\n            return 5;\n        case LaunchData_ActivationSource.GROWTH_NOTIFICATION:\n            return 6;\n        case LaunchData_ActivationSource.MASS_SNAP:\n            return 7;\n        case LaunchData_ActivationSource.SMART_CTA:\n            return 8;\n        case LaunchData_ActivationSource.MASS_CHAT:\n            return 9;\n        case LaunchData_ActivationSource.BILLBOARD_FHP:\n            return 10;\n        case LaunchData_ActivationSource.LENS_ACTIVITY_CENTER:\n            return 11;\n        case LaunchData_ActivationSource.AR_BAR:\n            return 12;\n        default:\n            return 0;\n    }\n}\nfunction createBaseLaunchData(): LaunchData {\n    return {\n        snappable: undefined,\n        lures: undefined,\n        userId: \"\",\n        entryPoint: LaunchData_EntryPoint.LIVE_CAMERA,\n        userData: undefined,\n        persistentStore: undefined,\n        launchParams: undefined,\n        apiDescriptors: [],\n        renderConfig: LaunchData_RenderConfig.DEFAULT,\n        activationSource: LaunchData_ActivationSource.ACTIVATION_SOURCE_UNSET,\n    };\n}\nexport const LaunchData = {\n    encode(message: LaunchData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.snappable !== undefined) {\n            Snappable.encode(message.snappable, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lures !== undefined) {\n            Lures.encode(message.lures, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.userId !== \"\") {\n            writer.uint32(26).string(message.userId);\n        }\n        if (message.entryPoint !== LaunchData_EntryPoint.LIVE_CAMERA) {\n            writer.uint32(32).int32(launchData_EntryPointToNumber(message.entryPoint));\n        }\n        if (message.userData !== undefined) {\n            UserData.encode(message.userData, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.persistentStore !== undefined) {\n            PersistentStore.encode(message.persistentStore, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.launchParams !== undefined) {\n            LaunchParams.encode(message.launchParams, writer.uint32(58).fork()).ldelim();\n        }\n        writer.uint32(66).fork();\n        for (const v of message.apiDescriptors) {\n            writer.int32(launchData_ApiDescriptorToNumber(v));\n        }\n        writer.ldelim();\n        if (message.renderConfig !== LaunchData_RenderConfig.DEFAULT) {\n            writer.uint32(72).int32(launchData_RenderConfigToNumber(message.renderConfig));\n        }\n        if (message.activationSource !== LaunchData_ActivationSource.ACTIVATION_SOURCE_UNSET) {\n            writer.uint32(80).int32(launchData_ActivationSourceToNumber(message.activationSource));\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LaunchData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLaunchData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snappable = Snappable.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lures = Lures.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.userId = reader.string();\n                    break;\n                case 4:\n                    message.entryPoint = launchData_EntryPointFromJSON(reader.int32());\n                    break;\n                case 5:\n                    message.userData = UserData.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.persistentStore = PersistentStore.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.launchParams = LaunchParams.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.apiDescriptors.push(launchData_ApiDescriptorFromJSON(reader.int32()));\n                        }\n                    }\n                    else {\n                        message.apiDescriptors.push(launchData_ApiDescriptorFromJSON(reader.int32()));\n                    }\n                    break;\n                case 9:\n                    message.renderConfig = launchData_RenderConfigFromJSON(reader.int32());\n                    break;\n                case 10:\n                    message.activationSource = launchData_ActivationSourceFromJSON(reader.int32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<LaunchData>, I>>(object: I): LaunchData {\n        const message = createBaseLaunchData();\n        message.snappable =\n            object.snappable !== undefined && object.snappable !== null ? Snappable.fromPartial(object.snappable) : undefined;\n        message.lures = object.lures !== undefined && object.lures !== null ? Lures.fromPartial(object.lures) : undefined;\n        message.userId = object.userId ?? \"\";\n        message.entryPoint = object.entryPoint ?? LaunchData_EntryPoint.LIVE_CAMERA;\n        message.userData =\n            object.userData !== undefined && object.userData !== null ? UserData.fromPartial(object.userData) : undefined;\n        message.persistentStore =\n            object.persistentStore !== undefined && object.persistentStore !== null\n                ? PersistentStore.fromPartial(object.persistentStore)\n                : undefined;\n        message.launchParams =\n            object.launchParams !== undefined && object.launchParams !== null\n                ? LaunchParams.fromPartial(object.launchParams)\n                : undefined;\n        message.apiDescriptors = object.apiDescriptors?.map((e) => e) || [];\n        message.renderConfig = object.renderConfig ?? LaunchData_RenderConfig.DEFAULT;\n        message.activationSource = object.activationSource ?? LaunchData_ActivationSource.ACTIVATION_SOURCE_UNSET;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.lenses.snappable\";\nexport interface EncryptionData {\n    key: Uint8Array;\n    ivStore: {\n        [key: string]: Uint8Array;\n    };\n    isKeyServerEncrypted: boolean;\n    isKeyE2eEncrypted: boolean;\n    encryptionScheme: EncryptionData_EncryptionScheme;\n}\nexport enum EncryptionData_EncryptionScheme {\n    NOT_APPLICABLE = \"NOT_APPLICABLE\",\n    SPOOKEY = \"SPOOKEY\",\n    REGISTRY = \"REGISTRY\",\n    FIDELIUS = \"FIDELIUS\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function encryptionData_EncryptionSchemeFromJSON(object: any): EncryptionData_EncryptionScheme {\n    switch (object) {\n        case 0:\n        case \"NOT_APPLICABLE\":\n            return EncryptionData_EncryptionScheme.NOT_APPLICABLE;\n        case 1:\n        case \"SPOOKEY\":\n            return EncryptionData_EncryptionScheme.SPOOKEY;\n        case 2:\n        case \"REGISTRY\":\n            return EncryptionData_EncryptionScheme.REGISTRY;\n        case 3:\n        case \"FIDELIUS\":\n            return EncryptionData_EncryptionScheme.FIDELIUS;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EncryptionData_EncryptionScheme.UNRECOGNIZED;\n    }\n}\nexport function encryptionData_EncryptionSchemeToNumber(object: EncryptionData_EncryptionScheme): number {\n    switch (object) {\n        case EncryptionData_EncryptionScheme.NOT_APPLICABLE:\n            return 0;\n        case EncryptionData_EncryptionScheme.SPOOKEY:\n            return 1;\n        case EncryptionData_EncryptionScheme.REGISTRY:\n            return 2;\n        case EncryptionData_EncryptionScheme.FIDELIUS:\n            return 3;\n        default:\n            return 0;\n    }\n}\nexport interface EncryptionData_IvStoreEntry {\n    key: string;\n    value: Uint8Array;\n}\nexport interface PlayerData {\n    store: {\n        [key: string]: string;\n    };\n    serializedStore: Uint8Array;\n}\nexport interface PlayerData_StoreEntry {\n    key: string;\n    value: string;\n}\nexport interface SessionData {\n    playerData: {\n        [key: string]: PlayerData;\n    };\n}\nexport interface SessionData_PlayerDataEntry {\n    key: string;\n    value: PlayerData | undefined;\n}\nexport interface SnappableMedia {\n    sessionId: string;\n    playerId: string;\n    url: string;\n    key: string;\n    createdTime: number;\n}\nexport interface Snap3DData {\n    allowZippedMedia: boolean;\n}\nexport interface UsesCameraRoll {\n    usesCameraRoll: boolean;\n}\nexport interface SnappableMessage {\n    snappable: Snappable | undefined;\n    media: SnappableMedia[];\n    effectId: string;\n    userIds: string[];\n    focusPointX: number;\n    focusPointY: number;\n    focusPointWidth: number;\n    replyType: SnappableMessage_ReplyType;\n    snap3dData: Snap3DData | undefined;\n    usesCameraRollData: UsesCameraRoll | undefined;\n    assetBatchId: string;\n}\nexport enum SnappableMessage_ReplyType {\n    NOT_APPLICABLE = \"NOT_APPLICABLE\",\n    CONTEXT = \"CONTEXT\",\n    INTERSTITIAL = \"INTERSTITIAL\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function snappableMessage_ReplyTypeFromJSON(object: any): SnappableMessage_ReplyType {\n    switch (object) {\n        case 0:\n        case \"NOT_APPLICABLE\":\n            return SnappableMessage_ReplyType.NOT_APPLICABLE;\n        case 1:\n        case \"CONTEXT\":\n            return SnappableMessage_ReplyType.CONTEXT;\n        case 2:\n        case \"INTERSTITIAL\":\n            return SnappableMessage_ReplyType.INTERSTITIAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SnappableMessage_ReplyType.UNRECOGNIZED;\n    }\n}\nexport function snappableMessage_ReplyTypeToNumber(object: SnappableMessage_ReplyType): number {\n    switch (object) {\n        case SnappableMessage_ReplyType.NOT_APPLICABLE:\n            return 0;\n        case SnappableMessage_ReplyType.CONTEXT:\n            return 1;\n        case SnappableMessage_ReplyType.INTERSTITIAL:\n            return 2;\n        default:\n            return 0;\n    }\n}\nexport interface Snappable {\n    id: string;\n    sessionId: string;\n    playerId: string;\n    sessionData: SessionData | undefined;\n    createdTime: number;\n    expireTime: number;\n    version: number;\n    encryptionData: EncryptionData | undefined;\n    sessionDepth: number;\n}\nexport interface PutSnappableRequest {\n    snappable: Snappable | undefined;\n    media: SnappableMedia[];\n}\nexport interface PutSnappableResponse {\n    id: string;\n}\nexport interface GetSnappableRequest {\n    id: string;\n}\nexport interface GetSnappableResponse {\n    data: Snappable | undefined;\n    media: SnappableMedia[];\n}\nexport interface SnappableEncryptedKey {\n    encryptedKey: Uint8Array;\n    encryptionKeyId: string;\n    encryptionKeyIv: Uint8Array;\n}\nfunction createBaseEncryptionData(): EncryptionData {\n    return {\n        key: new Uint8Array(),\n        ivStore: {},\n        isKeyServerEncrypted: false,\n        isKeyE2eEncrypted: false,\n        encryptionScheme: EncryptionData_EncryptionScheme.NOT_APPLICABLE,\n    };\n}\nexport const EncryptionData = {\n    encode(message: EncryptionData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        Object.entries(message.ivStore).forEach(([key, value]) => {\n            EncryptionData_IvStoreEntry.encode({ key: key as any, value }, writer.uint32(18).fork()).ldelim();\n        });\n        if (message.isKeyServerEncrypted === true) {\n            writer.uint32(24).bool(message.isKeyServerEncrypted);\n        }\n        if (message.isKeyE2eEncrypted === true) {\n            writer.uint32(32).bool(message.isKeyE2eEncrypted);\n        }\n        if (message.encryptionScheme !== EncryptionData_EncryptionScheme.NOT_APPLICABLE) {\n            writer.uint32(40).int32(encryptionData_EncryptionSchemeToNumber(message.encryptionScheme));\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): EncryptionData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEncryptionData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    const entry2 = EncryptionData_IvStoreEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.ivStore[entry2.key] = entry2.value;\n                    }\n                    break;\n                case 3:\n                    message.isKeyServerEncrypted = reader.bool();\n                    break;\n                case 4:\n                    message.isKeyE2eEncrypted = reader.bool();\n                    break;\n                case 5:\n                    message.encryptionScheme = encryptionData_EncryptionSchemeFromJSON(reader.int32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<EncryptionData>, I>>(object: I): EncryptionData {\n        const message = createBaseEncryptionData();\n        message.key = object.key ?? new Uint8Array();\n        message.ivStore = Object.entries(object.ivStore ?? {}).reduce<{\n            [key: string]: Uint8Array;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = value;\n            }\n            return acc;\n        }, {});\n        message.isKeyServerEncrypted = object.isKeyServerEncrypted ?? false;\n        message.isKeyE2eEncrypted = object.isKeyE2eEncrypted ?? false;\n        message.encryptionScheme = object.encryptionScheme ?? EncryptionData_EncryptionScheme.NOT_APPLICABLE;\n        return message;\n    },\n};\nfunction createBaseEncryptionData_IvStoreEntry(): EncryptionData_IvStoreEntry {\n    return { key: \"\", value: new Uint8Array() };\n}\nexport const EncryptionData_IvStoreEntry = {\n    encode(message: EncryptionData_IvStoreEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): EncryptionData_IvStoreEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEncryptionData_IvStoreEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<EncryptionData_IvStoreEntry>, I>>(object: I): EncryptionData_IvStoreEntry {\n        const message = createBaseEncryptionData_IvStoreEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBasePlayerData(): PlayerData {\n    return { store: {}, serializedStore: new Uint8Array() };\n}\nexport const PlayerData = {\n    encode(message: PlayerData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        Object.entries(message.store).forEach(([key, value]) => {\n            PlayerData_StoreEntry.encode({ key: key as any, value }, writer.uint32(10).fork()).ldelim();\n        });\n        if (message.serializedStore.length !== 0) {\n            writer.uint32(18).bytes(message.serializedStore);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PlayerData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePlayerData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = PlayerData_StoreEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.store[entry1.key] = entry1.value;\n                    }\n                    break;\n                case 2:\n                    message.serializedStore = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PlayerData>, I>>(object: I): PlayerData {\n        const message = createBasePlayerData();\n        message.store = Object.entries(object.store ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.serializedStore = object.serializedStore ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBasePlayerData_StoreEntry(): PlayerData_StoreEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PlayerData_StoreEntry = {\n    encode(message: PlayerData_StoreEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PlayerData_StoreEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePlayerData_StoreEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PlayerData_StoreEntry>, I>>(object: I): PlayerData_StoreEntry {\n        const message = createBasePlayerData_StoreEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseSessionData(): SessionData {\n    return { playerData: {} };\n}\nexport const SessionData = {\n    encode(message: SessionData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        Object.entries(message.playerData).forEach(([key, value]) => {\n            SessionData_PlayerDataEntry.encode({ key: key as any, value }, writer.uint32(10).fork()).ldelim();\n        });\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SessionData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSessionData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = SessionData_PlayerDataEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.playerData[entry1.key] = entry1.value;\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<SessionData>, I>>(object: I): SessionData {\n        const message = createBaseSessionData();\n        message.playerData = Object.entries(object.playerData ?? {}).reduce<{\n            [key: string]: PlayerData;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = PlayerData.fromPartial(value);\n            }\n            return acc;\n        }, {});\n        return message;\n    },\n};\nfunction createBaseSessionData_PlayerDataEntry(): SessionData_PlayerDataEntry {\n    return { key: \"\", value: undefined };\n}\nexport const SessionData_PlayerDataEntry = {\n    encode(message: SessionData_PlayerDataEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== undefined) {\n            PlayerData.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SessionData_PlayerDataEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSessionData_PlayerDataEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = PlayerData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<SessionData_PlayerDataEntry>, I>>(object: I): SessionData_PlayerDataEntry {\n        const message = createBaseSessionData_PlayerDataEntry();\n        message.key = object.key ?? \"\";\n        message.value =\n            object.value !== undefined && object.value !== null ? PlayerData.fromPartial(object.value) : undefined;\n        return message;\n    },\n};\nfunction createBaseSnappableMedia(): SnappableMedia {\n    return { sessionId: \"\", playerId: \"\", url: \"\", key: \"\", createdTime: 0 };\n}\nexport const SnappableMedia = {\n    encode(message: SnappableMedia, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.sessionId !== \"\") {\n            writer.uint32(10).string(message.sessionId);\n        }\n        if (message.playerId !== \"\") {\n            writer.uint32(18).string(message.playerId);\n        }\n        if (message.url !== \"\") {\n            writer.uint32(26).string(message.url);\n        }\n        if (message.key !== \"\") {\n            writer.uint32(34).string(message.key);\n        }\n        if (message.createdTime !== 0) {\n            writer.uint32(40).int64(message.createdTime);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SnappableMedia {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnappableMedia();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sessionId = reader.string();\n                    break;\n                case 2:\n                    message.playerId = reader.string();\n                    break;\n                case 3:\n                    message.url = reader.string();\n                    break;\n                case 4:\n                    message.key = reader.string();\n                    break;\n                case 5:\n                    message.createdTime = longToNumber(reader.int64() as Long);\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<SnappableMedia>, I>>(object: I): SnappableMedia {\n        const message = createBaseSnappableMedia();\n        message.sessionId = object.sessionId ?? \"\";\n        message.playerId = object.playerId ?? \"\";\n        message.url = object.url ?? \"\";\n        message.key = object.key ?? \"\";\n        message.createdTime = object.createdTime ?? 0;\n        return message;\n    },\n};\nfunction createBaseSnap3DData(): Snap3DData {\n    return { allowZippedMedia: false };\n}\nexport const Snap3DData = {\n    encode(message: Snap3DData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.allowZippedMedia === true) {\n            writer.uint32(8).bool(message.allowZippedMedia);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Snap3DData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnap3DData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowZippedMedia = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Snap3DData>, I>>(object: I): Snap3DData {\n        const message = createBaseSnap3DData();\n        message.allowZippedMedia = object.allowZippedMedia ?? false;\n        return message;\n    },\n};\nfunction createBaseUsesCameraRoll(): UsesCameraRoll {\n    return { usesCameraRoll: false };\n}\nexport const UsesCameraRoll = {\n    encode(message: UsesCameraRoll, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.usesCameraRoll === true) {\n            writer.uint32(8).bool(message.usesCameraRoll);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UsesCameraRoll {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUsesCameraRoll();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.usesCameraRoll = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UsesCameraRoll>, I>>(object: I): UsesCameraRoll {\n        const message = createBaseUsesCameraRoll();\n        message.usesCameraRoll = object.usesCameraRoll ?? false;\n        return message;\n    },\n};\nfunction createBaseSnappableMessage(): SnappableMessage {\n    return {\n        snappable: undefined,\n        media: [],\n        effectId: \"\",\n        userIds: [],\n        focusPointX: 0,\n        focusPointY: 0,\n        focusPointWidth: 0,\n        replyType: SnappableMessage_ReplyType.NOT_APPLICABLE,\n        snap3dData: undefined,\n        usesCameraRollData: undefined,\n        assetBatchId: \"\",\n    };\n}\nexport const SnappableMessage = {\n    encode(message: SnappableMessage, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.snappable !== undefined) {\n            Snappable.encode(message.snappable, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.media) {\n            SnappableMedia.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.effectId !== \"\") {\n            writer.uint32(26).string(message.effectId);\n        }\n        for (const v of message.userIds) {\n            writer.uint32(34).string(v!);\n        }\n        if (message.focusPointX !== 0) {\n            writer.uint32(45).float(message.focusPointX);\n        }\n        if (message.focusPointY !== 0) {\n            writer.uint32(53).float(message.focusPointY);\n        }\n        if (message.focusPointWidth !== 0) {\n            writer.uint32(61).float(message.focusPointWidth);\n        }\n        if (message.replyType !== SnappableMessage_ReplyType.NOT_APPLICABLE) {\n            writer.uint32(64).int32(snappableMessage_ReplyTypeToNumber(message.replyType));\n        }\n        if (message.snap3dData !== undefined) {\n            Snap3DData.encode(message.snap3dData, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.usesCameraRollData !== undefined) {\n            UsesCameraRoll.encode(message.usesCameraRollData, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.assetBatchId !== \"\") {\n            writer.uint32(4002).string(message.assetBatchId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SnappableMessage {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnappableMessage();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snappable = Snappable.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.media.push(SnappableMedia.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.effectId = reader.string();\n                    break;\n                case 4:\n                    message.userIds.push(reader.string());\n                    break;\n                case 5:\n                    message.focusPointX = reader.float();\n                    break;\n                case 6:\n                    message.focusPointY = reader.float();\n                    break;\n                case 7:\n                    message.focusPointWidth = reader.float();\n                    break;\n                case 8:\n                    message.replyType = snappableMessage_ReplyTypeFromJSON(reader.int32());\n                    break;\n                case 9:\n                    message.snap3dData = Snap3DData.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.usesCameraRollData = UsesCameraRoll.decode(reader, reader.uint32());\n                    break;\n                case 500:\n                    message.assetBatchId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<SnappableMessage>, I>>(object: I): SnappableMessage {\n        const message = createBaseSnappableMessage();\n        message.snappable =\n            object.snappable !== undefined && object.snappable !== null ? Snappable.fromPartial(object.snappable) : undefined;\n        message.media = object.media?.map((e) => SnappableMedia.fromPartial(e)) || [];\n        message.effectId = object.effectId ?? \"\";\n        message.userIds = object.userIds?.map((e) => e) || [];\n        message.focusPointX = object.focusPointX ?? 0;\n        message.focusPointY = object.focusPointY ?? 0;\n        message.focusPointWidth = object.focusPointWidth ?? 0;\n        message.replyType = object.replyType ?? SnappableMessage_ReplyType.NOT_APPLICABLE;\n        message.snap3dData =\n            object.snap3dData !== undefined && object.snap3dData !== null\n                ? Snap3DData.fromPartial(object.snap3dData)\n                : undefined;\n        message.usesCameraRollData =\n            object.usesCameraRollData !== undefined && object.usesCameraRollData !== null\n                ? UsesCameraRoll.fromPartial(object.usesCameraRollData)\n                : undefined;\n        message.assetBatchId = object.assetBatchId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseSnappable(): Snappable {\n    return {\n        id: \"\",\n        sessionId: \"\",\n        playerId: \"\",\n        sessionData: undefined,\n        createdTime: 0,\n        expireTime: 0,\n        version: 0,\n        encryptionData: undefined,\n        sessionDepth: 0,\n    };\n}\nexport const Snappable = {\n    encode(message: Snappable, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sessionId !== \"\") {\n            writer.uint32(18).string(message.sessionId);\n        }\n        if (message.playerId !== \"\") {\n            writer.uint32(26).string(message.playerId);\n        }\n        if (message.sessionData !== undefined) {\n            SessionData.encode(message.sessionData, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createdTime !== 0) {\n            writer.uint32(40).int64(message.createdTime);\n        }\n        if (message.expireTime !== 0) {\n            writer.uint32(48).int64(message.expireTime);\n        }\n        if (message.version !== 0) {\n            writer.uint32(56).int32(message.version);\n        }\n        if (message.encryptionData !== undefined) {\n            EncryptionData.encode(message.encryptionData, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.sessionDepth !== 0) {\n            writer.uint32(72).int32(message.sessionDepth);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Snappable {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnappable();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sessionId = reader.string();\n                    break;\n                case 3:\n                    message.playerId = reader.string();\n                    break;\n                case 4:\n                    message.sessionData = SessionData.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createdTime = longToNumber(reader.int64() as Long);\n                    break;\n                case 6:\n                    message.expireTime = longToNumber(reader.int64() as Long);\n                    break;\n                case 7:\n                    message.version = reader.int32();\n                    break;\n                case 8:\n                    message.encryptionData = EncryptionData.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.sessionDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Snappable>, I>>(object: I): Snappable {\n        const message = createBaseSnappable();\n        message.id = object.id ?? \"\";\n        message.sessionId = object.sessionId ?? \"\";\n        message.playerId = object.playerId ?? \"\";\n        message.sessionData =\n            object.sessionData !== undefined && object.sessionData !== null\n                ? SessionData.fromPartial(object.sessionData)\n                : undefined;\n        message.createdTime = object.createdTime ?? 0;\n        message.expireTime = object.expireTime ?? 0;\n        message.version = object.version ?? 0;\n        message.encryptionData =\n            object.encryptionData !== undefined && object.encryptionData !== null\n                ? EncryptionData.fromPartial(object.encryptionData)\n                : undefined;\n        message.sessionDepth = object.sessionDepth ?? 0;\n        return message;\n    },\n};\nfunction createBasePutSnappableRequest(): PutSnappableRequest {\n    return { snappable: undefined, media: [] };\n}\nexport const PutSnappableRequest = {\n    encode(message: PutSnappableRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.snappable !== undefined) {\n            Snappable.encode(message.snappable, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.media) {\n            SnappableMedia.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PutSnappableRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePutSnappableRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snappable = Snappable.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.media.push(SnappableMedia.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PutSnappableRequest>, I>>(object: I): PutSnappableRequest {\n        const message = createBasePutSnappableRequest();\n        message.snappable =\n            object.snappable !== undefined && object.snappable !== null ? Snappable.fromPartial(object.snappable) : undefined;\n        message.media = object.media?.map((e) => SnappableMedia.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBasePutSnappableResponse(): PutSnappableResponse {\n    return { id: \"\" };\n}\nexport const PutSnappableResponse = {\n    encode(message: PutSnappableResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PutSnappableResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePutSnappableResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PutSnappableResponse>, I>>(object: I): PutSnappableResponse {\n        const message = createBasePutSnappableResponse();\n        message.id = object.id ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetSnappableRequest(): GetSnappableRequest {\n    return { id: \"\" };\n}\nexport const GetSnappableRequest = {\n    encode(message: GetSnappableRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetSnappableRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetSnappableRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetSnappableRequest>, I>>(object: I): GetSnappableRequest {\n        const message = createBaseGetSnappableRequest();\n        message.id = object.id ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetSnappableResponse(): GetSnappableResponse {\n    return { data: undefined, media: [] };\n}\nexport const GetSnappableResponse = {\n    encode(message: GetSnappableResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.data !== undefined) {\n            Snappable.encode(message.data, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.media) {\n            SnappableMedia.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetSnappableResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetSnappableResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = Snappable.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.media.push(SnappableMedia.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetSnappableResponse>, I>>(object: I): GetSnappableResponse {\n        const message = createBaseGetSnappableResponse();\n        message.data = object.data !== undefined && object.data !== null ? Snappable.fromPartial(object.data) : undefined;\n        message.media = object.media?.map((e) => SnappableMedia.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseSnappableEncryptedKey(): SnappableEncryptedKey {\n    return { encryptedKey: new Uint8Array(), encryptionKeyId: \"\", encryptionKeyIv: new Uint8Array() };\n}\nexport const SnappableEncryptedKey = {\n    encode(message: SnappableEncryptedKey, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.encryptedKey.length !== 0) {\n            writer.uint32(10).bytes(message.encryptedKey);\n        }\n        if (message.encryptionKeyId !== \"\") {\n            writer.uint32(18).string(message.encryptionKeyId);\n        }\n        if (message.encryptionKeyIv.length !== 0) {\n            writer.uint32(26).bytes(message.encryptionKeyIv);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SnappableEncryptedKey {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnappableEncryptedKey();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.encryptedKey = reader.bytes();\n                    break;\n                case 2:\n                    message.encryptionKeyId = reader.string();\n                    break;\n                case 3:\n                    message.encryptionKeyIv = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<SnappableEncryptedKey>, I>>(object: I): SnappableEncryptedKey {\n        const message = createBaseSnappableEncryptedKey();\n        message.encryptedKey = object.encryptedKey ?? new Uint8Array();\n        message.encryptionKeyId = object.encryptionKeyId ?? \"\";\n        message.encryptionKeyIv = object.encryptionKeyIv ?? new Uint8Array();\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Geocircle } from \"./geocircle\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface Lures {\n    locations: Geocircle[];\n    activeLure: Geocircle | undefined;\n    closestLure: Geocircle | undefined;\n}\nfunction createBaseLures(): Lures {\n    return { locations: [], activeLure: undefined, closestLure: undefined };\n}\nexport const Lures = {\n    encode(message: Lures, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.locations) {\n            Geocircle.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.activeLure !== undefined) {\n            Geocircle.encode(message.activeLure, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.closestLure !== undefined) {\n            Geocircle.encode(message.closestLure, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Lures {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLures();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.locations.push(Geocircle.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.activeLure = Geocircle.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.closestLure = Geocircle.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Lures>, I>>(object: I): Lures {\n        const message = createBaseLures();\n        message.locations = object.locations?.map((e) => Geocircle.fromPartial(e)) || [];\n        message.activeLure =\n            object.activeLure !== undefined && object.activeLure !== null\n                ? Geocircle.fromPartial(object.activeLure)\n                : undefined;\n        message.closestLure =\n            object.closestLure !== undefined && object.closestLure !== null\n                ? Geocircle.fromPartial(object.closestLure)\n                : undefined;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Geopoint } from \"./geopoint\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface Geocircle {\n    radius: number;\n    center: Geopoint | undefined;\n}\nfunction createBaseGeocircle(): Geocircle {\n    return { radius: 0, center: undefined };\n}\nexport const Geocircle = {\n    encode(message: Geocircle, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.radius !== 0) {\n            writer.uint32(9).double(message.radius);\n        }\n        if (message.center !== undefined) {\n            Geopoint.encode(message.center, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Geocircle {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGeocircle();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.radius = reader.double();\n                    break;\n                case 2:\n                    message.center = Geopoint.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Geocircle>, I>>(object: I): Geocircle {\n        const message = createBaseGeocircle();\n        message.radius = object.radius ?? 0;\n        message.center =\n            object.center !== undefined && object.center !== null ? Geopoint.fromPartial(object.center) : undefined;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface Geopoint {\n    latitude: number;\n    longitude: number;\n}\nfunction createBaseGeopoint(): Geopoint {\n    return { latitude: 0, longitude: 0 };\n}\nexport const Geopoint = {\n    encode(message: Geopoint, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.latitude !== 0) {\n            writer.uint32(9).double(message.latitude);\n        }\n        if (message.longitude !== 0) {\n            writer.uint32(17).double(message.longitude);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Geopoint {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGeopoint();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.latitude = reader.double();\n                    break;\n                case 2:\n                    message.longitude = reader.double();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Geopoint>, I>>(object: I): Geopoint {\n        const message = createBaseGeopoint();\n        message.latitude = object.latitude ?? 0;\n        message.longitude = object.longitude ?? 0;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Timestamp } from \"../google/protobuf/timestamp\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface BitmojiUserInfo {\n    avatarId: string;\n    selfieId: string;\n}\nexport interface FriendUserInfo {\n    friendshipStart: Date | undefined;\n    lastInteraction: Date | undefined;\n    streak: number;\n}\nexport interface UserData {\n    userId: string;\n    username: string;\n    birthdate: string;\n    displayName: string;\n    countrycode: string;\n    score: number;\n    bitmojiInfo: BitmojiUserInfo | undefined;\n    friendInfo: FriendUserInfo | undefined;\n    zodiac: UserData_Zodiac;\n}\nexport enum UserData_Zodiac {\n    Invalid = \"Invalid\",\n    Aquarius = \"Aquarius\",\n    Aries = \"Aries\",\n    Cancer = \"Cancer\",\n    Capricorn = \"Capricorn\",\n    Gemini = \"Gemini\",\n    Leo = \"Leo\",\n    Libra = \"Libra\",\n    Pisces = \"Pisces\",\n    Sagittarius = \"Sagittarius\",\n    Scorpio = \"Scorpio\",\n    Taurus = \"Taurus\",\n    Virgo = \"Virgo\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function userData_ZodiacFromJSON(object: any): UserData_Zodiac {\n    switch (object) {\n        case 0:\n        case \"Invalid\":\n            return UserData_Zodiac.Invalid;\n        case 1:\n        case \"Aquarius\":\n            return UserData_Zodiac.Aquarius;\n        case 2:\n        case \"Aries\":\n            return UserData_Zodiac.Aries;\n        case 3:\n        case \"Cancer\":\n            return UserData_Zodiac.Cancer;\n        case 4:\n        case \"Capricorn\":\n            return UserData_Zodiac.Capricorn;\n        case 5:\n        case \"Gemini\":\n            return UserData_Zodiac.Gemini;\n        case 6:\n        case \"Leo\":\n            return UserData_Zodiac.Leo;\n        case 7:\n        case \"Libra\":\n            return UserData_Zodiac.Libra;\n        case 8:\n        case \"Pisces\":\n            return UserData_Zodiac.Pisces;\n        case 9:\n        case \"Sagittarius\":\n            return UserData_Zodiac.Sagittarius;\n        case 10:\n        case \"Scorpio\":\n            return UserData_Zodiac.Scorpio;\n        case 11:\n        case \"Taurus\":\n            return UserData_Zodiac.Taurus;\n        case 12:\n        case \"Virgo\":\n            return UserData_Zodiac.Virgo;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return UserData_Zodiac.UNRECOGNIZED;\n    }\n}\nexport function userData_ZodiacToNumber(object: UserData_Zodiac): number {\n    switch (object) {\n        case UserData_Zodiac.Invalid:\n            return 0;\n        case UserData_Zodiac.Aquarius:\n            return 1;\n        case UserData_Zodiac.Aries:\n            return 2;\n        case UserData_Zodiac.Cancer:\n            return 3;\n        case UserData_Zodiac.Capricorn:\n            return 4;\n        case UserData_Zodiac.Gemini:\n            return 5;\n        case UserData_Zodiac.Leo:\n            return 6;\n        case UserData_Zodiac.Libra:\n            return 7;\n        case UserData_Zodiac.Pisces:\n            return 8;\n        case UserData_Zodiac.Sagittarius:\n            return 9;\n        case UserData_Zodiac.Scorpio:\n            return 10;\n        case UserData_Zodiac.Taurus:\n            return 11;\n        case UserData_Zodiac.Virgo:\n            return 12;\n        default:\n            return 0;\n    }\n}\nexport interface UserDataList {\n    userData: UserData[];\n}\nfunction createBaseBitmojiUserInfo(): BitmojiUserInfo {\n    return { avatarId: \"\", selfieId: \"\" };\n}\nexport const BitmojiUserInfo = {\n    encode(message: BitmojiUserInfo, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.avatarId !== \"\") {\n            writer.uint32(10).string(message.avatarId);\n        }\n        if (message.selfieId !== \"\") {\n            writer.uint32(18).string(message.selfieId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BitmojiUserInfo {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBitmojiUserInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.avatarId = reader.string();\n                    break;\n                case 2:\n                    message.selfieId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<BitmojiUserInfo>, I>>(object: I): BitmojiUserInfo {\n        const message = createBaseBitmojiUserInfo();\n        message.avatarId = object.avatarId ?? \"\";\n        message.selfieId = object.selfieId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseFriendUserInfo(): FriendUserInfo {\n    return { friendshipStart: undefined, lastInteraction: undefined, streak: 0 };\n}\nexport const FriendUserInfo = {\n    encode(message: FriendUserInfo, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.friendshipStart !== undefined) {\n            Timestamp.encode(toTimestamp(message.friendshipStart), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastInteraction !== undefined) {\n            Timestamp.encode(toTimestamp(message.lastInteraction), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.streak !== 0) {\n            writer.uint32(24).uint32(message.streak);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): FriendUserInfo {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFriendUserInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.friendshipStart = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lastInteraction = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.streak = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<FriendUserInfo>, I>>(object: I): FriendUserInfo {\n        const message = createBaseFriendUserInfo();\n        message.friendshipStart = object.friendshipStart ?? undefined;\n        message.lastInteraction = object.lastInteraction ?? undefined;\n        message.streak = object.streak ?? 0;\n        return message;\n    },\n};\nfunction createBaseUserData(): UserData {\n    return {\n        userId: \"\",\n        username: \"\",\n        birthdate: \"\",\n        displayName: \"\",\n        countrycode: \"\",\n        score: 0,\n        bitmojiInfo: undefined,\n        friendInfo: undefined,\n        zodiac: UserData_Zodiac.Invalid,\n    };\n}\nexport const UserData = {\n    encode(message: UserData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.userId !== \"\") {\n            writer.uint32(10).string(message.userId);\n        }\n        if (message.username !== \"\") {\n            writer.uint32(18).string(message.username);\n        }\n        if (message.birthdate !== \"\") {\n            writer.uint32(26).string(message.birthdate);\n        }\n        if (message.displayName !== \"\") {\n            writer.uint32(34).string(message.displayName);\n        }\n        if (message.countrycode !== \"\") {\n            writer.uint32(42).string(message.countrycode);\n        }\n        if (message.score !== 0) {\n            writer.uint32(56).uint64(message.score);\n        }\n        if (message.bitmojiInfo !== undefined) {\n            BitmojiUserInfo.encode(message.bitmojiInfo, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.friendInfo !== undefined) {\n            FriendUserInfo.encode(message.friendInfo, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.zodiac !== UserData_Zodiac.Invalid) {\n            writer.uint32(80).int32(userData_ZodiacToNumber(message.zodiac));\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UserData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUserData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.userId = reader.string();\n                    break;\n                case 2:\n                    message.username = reader.string();\n                    break;\n                case 3:\n                    message.birthdate = reader.string();\n                    break;\n                case 4:\n                    message.displayName = reader.string();\n                    break;\n                case 5:\n                    message.countrycode = reader.string();\n                    break;\n                case 7:\n                    message.score = longToNumber(reader.uint64() as Long);\n                    break;\n                case 8:\n                    message.bitmojiInfo = BitmojiUserInfo.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.friendInfo = FriendUserInfo.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.zodiac = userData_ZodiacFromJSON(reader.int32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UserData>, I>>(object: I): UserData {\n        const message = createBaseUserData();\n        message.userId = object.userId ?? \"\";\n        message.username = object.username ?? \"\";\n        message.birthdate = object.birthdate ?? \"\";\n        message.displayName = object.displayName ?? \"\";\n        message.countrycode = object.countrycode ?? \"\";\n        message.score = object.score ?? 0;\n        message.bitmojiInfo =\n            object.bitmojiInfo !== undefined && object.bitmojiInfo !== null\n                ? BitmojiUserInfo.fromPartial(object.bitmojiInfo)\n                : undefined;\n        message.friendInfo =\n            object.friendInfo !== undefined && object.friendInfo !== null\n                ? FriendUserInfo.fromPartial(object.friendInfo)\n                : undefined;\n        message.zodiac = object.zodiac ?? UserData_Zodiac.Invalid;\n        return message;\n    },\n};\nfunction createBaseUserDataList(): UserDataList {\n    return { userData: [] };\n}\nexport const UserDataList = {\n    encode(message: UserDataList, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.userData) {\n            UserData.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UserDataList {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUserDataList();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.userData.push(UserData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UserDataList>, I>>(object: I): UserDataList {\n        const message = createBaseUserDataList();\n        message.userData = object.userData?.map((e) => UserData.fromPartial(e)) || [];\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction toTimestamp(date: Date): Timestamp {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t: Timestamp): Date {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface PersistentStore {\n    store: Uint8Array;\n}\nfunction createBasePersistentStore(): PersistentStore {\n    return { store: new Uint8Array() };\n}\nexport const PersistentStore = {\n    encode(message: PersistentStore, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.store.length !== 0) {\n            writer.uint32(10).bytes(message.store);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PersistentStore {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePersistentStore();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.store = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PersistentStore>, I>>(object: I): PersistentStore {\n        const message = createBasePersistentStore();\n        message.store = object.store ?? new Uint8Array();\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface LaunchParams {\n    data: Uint8Array;\n}\nfunction createBaseLaunchParams(): LaunchParams {\n    return { data: new Uint8Array() };\n}\nexport const LaunchParams = {\n    encode(message: LaunchParams, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LaunchParams {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLaunchParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<LaunchParams>, I>>(object: I): LaunchParams {\n        const message = createBaseLaunchParams();\n        message.data = object.data ?? new Uint8Array();\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import { LaunchData } from \"../generated-proto/pb_schema/lenses/launchdata\";\nimport { isNumber, isRecord, isString } from \"../common/typeguards\";\n\nconst isNotValid = (value: unknown) => !(isString(value) || isValidNumber(value));\n\nconst isValidNumber = (value: unknown): value is number =>\n    isNumber(value) && !Number.isNaN(value) && Number.isFinite(value);\n\n/**\n * Various lenses may support the passing of certain parameters from the application to the lens when it is launched.\n *\n * @category Lenses\n */\nexport type LensLaunchParams = Record<string, string | number | string[] | number[]>;\n\nexport type LaunchDetails = {\n    launchParams?: LensLaunchParams;\n    persistentStore?: ArrayBuffer;\n};\n\n/**\n * @internal\n */\nexport function isLaunchParamsValid(launchParams: unknown): launchParams is LensLaunchParams {\n    if (!isRecord(launchParams) || launchParams instanceof Date) {\n        throw new Error(\"Expected an object.\");\n    }\n\n    for (const [key, value] of Object.entries(launchParams)) {\n        if (Array.isArray(value)) {\n            if (!value.every(isString) && !value.every(isValidNumber)) {\n                throw new Error(\n                    `Field ${key} expects a value of type string, number, string array, or number array. ` +\n                        `Received: ${JSON.stringify(value)}.`\n                );\n            }\n        } else if (isNotValid(value)) {\n            throw new Error(\n                `Field ${key} expects a value of type string, number, string array, or number array. ` +\n                    `Received: ${JSON.stringify(value)}.`\n            );\n        }\n    }\n\n    return true;\n}\n\n/**\n * @param launchDetails\n * @internal\n */\nexport const createLaunchData = ({ launchParams, persistentStore }: LaunchDetails) =>\n    // finish() protobufjs method returns UInt8Array with shared ArrayBuffer\n    // to avoid of detached buffer error when passing data to Lens Core\n    // data should be copied using slice() method\n    LaunchData.encode(\n        LaunchData.fromPartial({\n            ...(launchParams &&\n                isLaunchParamsValid(launchParams) && {\n                    launchParams: { data: new TextEncoder().encode(JSON.stringify(launchParams)) },\n                }),\n            ...(persistentStore && { persistentStore: { store: new Uint8Array(persistentStore) } }),\n        })\n    )\n        .finish()\n        .slice();\n", "import { getPlatformInfo } from \"../platform/platformInfo\";\n\n/**\n * This implementation is limited by how TypeScript currently implements tag function for template literals.\n *\n * The way tag functions are typed by the TypeScript compiler limits their usefulness, for two reasons:\n *\n * 1. Specific literal types are not inferred from interpolation expressions -- the following does not work:\n * ```ts\n * function tag<K extends readonly string[]>(strings: readonly string[], ...keys: K): string { ... }\n * tag`This is a ${\"test\"} template.` // the K type parameter is not correctly inferred as `readonly ['test']`\n * ```\n * 2. The return type of a function used as a tag function will always be `string` -- the following does not work:\n * ```ts\n * function tag<K extends readonly string[]>(\n *   strings: readonly string[],\n *   ...keys: K\n * ): (values: {[k in K[number]]: string}) => string { ... }\n *\n * const template = tag`This is a ${\"test\"} template` // TS infers the type of `template` as `string` -- clearly wrong.\n * ```\n *\n * An attempt is made here to work around those limitations and still provide a reasonably amount of type safety without\n * adding too much verbosity.\n *\n * See https://github.com/microsoft/TypeScript/pull/49552\n */\ntype TemplateFunction<K extends readonly string[], V extends { [key in K[number]]: string }> = (values: V) => string;\n\nfunction makeTemplate<const K extends readonly string[], V extends { [key in K[number]]: string }>(\n    keys: K\n): (template: (tag: (strings: readonly string[], ...keys: 0[]) => string) => string) => TemplateFunction<K, V> {\n    return (template) => (values: V) => {\n        const tag = (readonlyStrings: readonly string[]) => {\n            const strings = readonlyStrings.slice();\n            return [strings.shift()]\n                .concat(keys.map((key: keyof V) => `${values[key] ?? \"\"}${strings.shift()}`))\n                .concat(strings)\n                .join(\"\");\n        };\n        return template(tag);\n    };\n}\n\n/**\n * Any strings which are templated (i.e. require runtime values) are defined below.\n */\nconst legalPromptMessage = makeTemplate([\"privacyPolicyUrl\", \"termsOfServiceUrl\", \"learnMoreUrl\"]);\n\ninterface LocalizableStrings {\n    legalPromptMessage: TemplateFunction<\n        readonly [\"privacyPolicyUrl\", \"termsOfServiceUrl\", \"learnMoreUrl\"],\n        {\n            privacyPolicyUrl: string;\n            termsOfServiceUrl: string;\n            learnMoreUrl: string;\n        }\n    >;\n    legalPromptAccept: string;\n    legalPromptReject: string;\n    legalPromptTermsOfService: string;\n    legalPromptVariantGMessage: string;\n    legalPromptVariantGAdultOrChild: string;\n    legalPromptVariantGFindYourParent: string;\n    legalPromptVariantGIAmGuardian: string;\n    legalPromptVariantGCancel: string;\n    legalPromptVariantGAdult: string;\n    legalPromptVariantGChild: string;\n}\n\n/**\n * Strings for each language are defined below.\n */\n\n/* eslint-disable max-len */\n\n/**\n * Translations for supported locales.\n * https://wiki.sc-corp.net/display/Engineering/Consumer+Product+Localization\n */\nconst allStrings = {\n    \"en-US\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`By using Lenses, you acknowledge reading Snap’s <a href=\"${0}\" target=\"_blank\">Privacy Policy</a> and agree to Snap’s <a href=\"${0}\" target=\"_blank\">Terms of Service</a>. Some lenses use information about your face, hands and voice to work. <a href=\"${0}\" target=\"_blank\">Learn More</a>, and if you want to agree and continue, tap below.`\n        ),\n        legalPromptAccept: `I Agree`,\n        legalPromptReject: `Dismiss`,\n        legalPromptTermsOfService: `Terms of Service`,\n        legalPromptVariantGMessage: `This feature uses information about face(s), hands and voice(s) detected by the camera and microphone to work. With this feature, you can apply fun and useful augmented reality effects on top of selfies and images. Our camera uses technology to locate certain features (like where your hands, eyes, and nose are) and uses that information to accurately position the feature with the image sensed by the camera. Any information that is collected will be deleted as soon as possible (typically soon after the app is closed) and always within no more than three years.<br/><br/>If you want to agree and continue, tap below.`,\n        legalPromptVariantGAdultOrChild: `Are you an adult or child?`,\n        legalPromptVariantGFindYourParent: `Please find your parent or legal guardian.`,\n        legalPromptVariantGIAmGuardian: `I am the child\\'s guardian`,\n        legalPromptVariantGCancel: `Cancel`,\n        legalPromptVariantGAdult: `Adult`,\n        legalPromptVariantGChild: `Child`,\n    },\n\n    ar: {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`باستخدامك للعدسات، فأنت تقر بقراءتك <a href=\"${0}\" target=\"_blank\">لسياسة الخصوصية</a> وتوافق على <a href=\"${0}\" target=\"_blank\">شروط الخدمة</a> الخاصة بسناب. تستخدم بعض العدسات معلومات عن وجهك ويديك وصوتك لكي تعمل. <a href=\"${0}\" target=\"_blank\">تعرّف على مزيد من المعلومات</a>، وإذا أردت الموافقة والاستمرار فالمس أدناه.`\n        ),\n        legalPromptAccept: `أنا أوافق`,\n        legalPromptReject: `تجاهل`,\n        legalPromptTermsOfService: `شروط الخدمة`,\n        legalPromptVariantGMessage: `تستخدم هذه الميزة معلومات تتعلق بالوجه(الوجوه) واليدين والصوت(الأصوات) تكتشفها الكاميرا والميكروفون للعمل. وباستخدام هذه الميزة، يمكنك تطبيق تأثيرات الواقع المُعزّز الممتعة والمفيدة على صور السيلفي والصور. تستخدم الكاميرا لدينا التكنولوجيا لتحديد مكان ملامح معيَّنة (مثل مكان وجود يديك وعينيك وأنفك) وتستخدم هذه المعلومات لتحديد مكان الملامح بدقة مع الصورة التي تستشعرها الكاميرا. سيتم حذف أي معلومات يتم جمعها في أقرب وقت ممكن (عادةً بعد إغلاق التطبيق بفترة وجيزة) وخلال فترة لا تزيد عن ثلاث سنوات دائمًا.<br/><br/>إذا كنت تريد الموافقة والمتابعة، فالمس أدناه.`,\n        legalPromptVariantGAdultOrChild: `هل أنت شخص بالغ أم طفل؟`,\n        legalPromptVariantGFindYourParent: `يُرجى البحث عن وليّ أمرك أو الوصي القانوني.`,\n        legalPromptVariantGIAmGuardian: `أنا الوصي على الطفل`,\n        legalPromptVariantGCancel: `إلغاء`,\n        legalPromptVariantGAdult: `شخص بالغ`,\n        legalPromptVariantGChild: `طفل`,\n    },\n\n    \"bn-BD\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`লেন্সগুলি ব্যবহার করার মাধ্যমে আপনি Snap-এর <a href=\"${0}\" target=\"_blank\">গোপনীয়তা নীতি</a> পড়েছেন এবং Snap-এর <a href=\"${0}\" target=\"_blank\">পরিষেবার শর্তাবলী</a>-তে সম্মত হচ্ছেন বলে স্বীকার করছেন। কিছু কিছু লেন্স কাজ করার জন্য আপনার মুখ, হাত ও কন্ঠস্বর ব্যবহার করে। <a href=\"${0}\" target=\"_blank\">আরো জানুন</a> এবং আপনি যদি সম্মত হতে ও চালিয়ে যেতে চান তবে নিচে ট্যাপ করুন।`\n        ),\n        legalPromptAccept: `আমি সম্মতি দিচ্ছি`,\n        legalPromptReject: `খারিজ করুন`,\n        legalPromptTermsOfService: `পরিষেবার শর্তাবলী`,\n        legalPromptVariantGMessage: `কাজ করতে এই বৈশিষ্ট্যটি ক্যামেরা এবং মাইক্রোফোন দ্বারা শনাক্ত করা মুখ, হাত এবং কণ্ঠস্বর সম্পর্কে তথ্য ব্যবহার করে। এই বৈশিষ্ট্যটি দিয়ে আপনি সেলফি এবং ছবির উপর মজার এবং উপযোগী অগমেন্টেড রিয়ালিটির ইফেক্ট প্রয়োগ করতে পারবেন। আমাদের ক্যামেরা নির্দিষ্ট বৈশিষ্ট্যগুলি (যেমন আপনার হাত, চোখ এবং নাক কোথায়) শনাক্ত করতে প্রযুক্তি ব্যবহার করে এবং ক্যামেরা দ্বারা আঁচ করা ছবির সাথে বৈশিষ্ট্যটিকে সঠিকভাবে অবস্থান করতে সেই তথ্য ব্যবহার করে। সংগৃহীত যেকোনো তথ্য যত তাড়াতাড়ি সম্ভব মুছে ফেলা হবে (সাধারণত অ্যাপটি বন্ধ হওয়ার পরেই) এবং কোনো সময়েই তা তিন বছরের বেশি রাখা হবে না।<br/><br/>আপনি যদি সম্মত হতে চান এবং চালিয়ে যেতে চান তাহলে নিচে ট্যাপ করুন।`,\n        legalPromptVariantGAdultOrChild: `আপনি একজন প্রাপ্তবয়স্ক না শিশু?`,\n        legalPromptVariantGFindYourParent: `অনুগ্রহ করে আপনার পিতামাতা বা আইনি অভিভাবককে খুঁজুন।`,\n        legalPromptVariantGIAmGuardian: `আমি শিশুটির অভিভাবক`,\n        legalPromptVariantGCancel: `বাতিল করুন`,\n        legalPromptVariantGAdult: `প্রাপ্তবয়স্ক`,\n        legalPromptVariantGChild: `শিশু`,\n    },\n\n    \"bn-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`লেন্স ব্যবহার করে, আপনি Snap\\'এর \\\"<a href=\"${0}\" target=\"_blank\">\\\"গোপনীয়তার নীতি</a> পড়েছেন এবং Snap\\'এর <a href=\"${0}\" target=\"_blank\">পরিষেবার শর্তাবলী</a>-তে সম্মত হচ্ছেন বলে স্বীকার করছেন। কিছু কিছু লেন্স কাজ করার জন্য আপনার মুখ, হাত ও কন্ঠস্বরের তথ্য ব্যবহার করে। <a href=\"${0}\" target=\"_blank\">আরও জানুন</a> এবং আপনি সম্মত হলে ও চালিয়ে যেতে চাইলে নিচে ট্যাপ করুন।`\n        ),\n        legalPromptAccept: `আমি সম্মত`,\n        legalPromptReject: `খারিজ করুন`,\n        legalPromptTermsOfService: `পরিষেবার শর্তাবলী`,\n        legalPromptVariantGMessage: `কাজ করার জন্য এই বৈশিষ্ট্যটি ক্যামেরা এবং মাইক্রোফোন দ্বারা শনাক্ত করা মুখ(গুলি), হাত এবং ভয়েস(গুলি) সম্পর্কিত তথ্য ব্যবহার করে৷ এই বৈশিষ্ট্যটির সাহায্যে, আপনি সেলফি এবং ছবিগুলির উপরে মজাদার এবং দরকারী অগমেন্টেড রিয়েলিটি প্রভাব প্রয়োগ করতে পারেন। আমাদের ক্যামেরা নির্দিষ্ট কিছু বৈশিষ্ট্য শনাক্ত করতে প্রযুক্তি ব্যবহার করে (যেমন আপনার হাত, চোখ এবং নাক কোথায়) এবং ক্যামেরা দ্বারা সংবেদিত ছবির সাথে বৈশিষ্ট্যটিকে ঠিক জায়গায় বসাতে সেই তথ্য ব্যবহার সবসময়ই তিন বছরের কম সময়ের মধ্যে। <br/><br/>আপনি যদি সম্মত থাকেন এবং চালিয়ে যেতে চান, নিচে ট্যাপ করুন।`,\n        legalPromptVariantGAdultOrChild: `আপনি কি একজন প্রাপ্তবয়স্ক না শিশু?`,\n        legalPromptVariantGFindYourParent: `অনুগ্রহ করে আপনার মা-বাবা বা আইনী অভিভাবককে খুঁজুন।`,\n        legalPromptVariantGIAmGuardian: `আমি শিশুটির অভিভাবক`,\n        legalPromptVariantGCancel: `বাতিল করুন`,\n        legalPromptVariantGAdult: `প্রাপ্তবয়স্ক`,\n        legalPromptVariantGChild: `শিশু`,\n    },\n\n    \"da-DK\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Når du anvender Linser, bekræfter du, at du har læst Snaps <a href=\"${0}\" target=\"_blank\">privatlivspolitik</a> og accepterer Snaps <a href=\"${0}\" target=\"_blank\">servicevilkår</a>. Nogle Linser bruger information om dit ansigt, dine hænder og din stemme for at fungere. <a href=\"${0}\" target=\"_blank\">Få mere at vide</a>, og tryk nedenfor, hvis du vil acceptere og fortsætte.`\n        ),\n        legalPromptAccept: `Jeg er enig`,\n        legalPromptReject: `Afvis`,\n        legalPromptTermsOfService: `Servicevilkår`,\n        legalPromptVariantGMessage: `Denne funktion bruger oplysninger om ansigt(er), hænder og stemme(r), der registreres af kameraet og mikrofonen, for at kunne fungere. Med denne funktion kan du anvende sjove og nyttige augmented reality-effekter på selfies og billeder. Vores kamera bruger teknologi til at finde bestemte træk (f.eks. hvor dine hænder, øjne og næse er) og bruger disse oplysninger til nøjagtigt at placere trækket i billedet, der opfanges af kameraet. Alle oplysninger, der indsamles, slettes så hurtigst som muligt (typisk kort efter, at appen lukkes) og altid inden for højst tre år.<br/><br/>Tryk herunder, hvis du accepterer og vil fortsætte.`,\n        legalPromptVariantGAdultOrChild: `Er du voksen eller barn?`,\n        legalPromptVariantGFindYourParent: `Find din forælder eller værge.`,\n        legalPromptVariantGIAmGuardian: `Jeg er barnets værge`,\n        legalPromptVariantGCancel: `Annuller`,\n        legalPromptVariantGAdult: `Voksen`,\n        legalPromptVariantGChild: `Barn`,\n    },\n\n    \"de-DE\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Wenn du Linsen verwendet, versicherst du, dass du die <a href=\"${0}\" target=\"_blank\">Datenschutzbestimmungen</a> von Snap gelesen hast und den <a href=\"${0}\" target=\"_blank\">Servicebestimmungen</a> von Snap zustimmst. Manche Linsen verarbeiten Informationen zu deinem Gesicht, deinen Händen und deiner Stimme, um zu funktionieren. <a href=\"${0}\" target=\"_blank\">Hier erfährst du mehr.</a> Tippe unten, wenn du zustimmen und fortfahren möchtest.`\n        ),\n        legalPromptAccept: `Zustimmen`,\n        legalPromptReject: `Ablehnen`,\n        legalPromptTermsOfService: `Servicebestimmungen`,\n        legalPromptVariantGMessage: `Diese Funktion verwendet Informationen über Gesichter, Hände und Stimmen, die von der Kamera und dem Mikrofon erkannt werden. Mit dieser Funktion kannst du lustige und nützliche Augmented Reality-Effekte auf Selfies und Bilder anwenden. Unsere Kamera nutzt Technologien, um bestimmte Merkmale zu lokalisieren (z. B. wo sich deine Hände, Augen und Nase befinden), und verwendet diese Informationen, um dieses Merkmal dann exakt über das von der Kamera erfasste Bild zu positionieren. Alle gesammelten Informationen werden so schnell wie möglich gelöscht (in der Regel kurz nach dem Schließen der App), spätestens aber innerhalb von drei Jahren.<br/><br/>Tippe unten, um zuzustimmen und fortzufahren.`,\n        legalPromptVariantGAdultOrChild: `Bist du erwachsen oder minderjährig?`,\n        legalPromptVariantGFindYourParent: `Bitte hole ein Elternteil oder Erziehungsberechtigten.`,\n        legalPromptVariantGIAmGuardian: `Ich bin der Erziehungsberechtigte des Kindes.`,\n        legalPromptVariantGCancel: `Abbrechen`,\n        legalPromptVariantGAdult: `Erwachsen`,\n        legalPromptVariantGChild: `Minderjährig`,\n    },\n\n    \"el-GR\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Χρησιμοποιώντας τους Φακούς, αναγνωρίζεις ότι έχεις διαβάσει την <a href=\"${0}\" target=\"_blank\">Πολιτική απορρήτου</a> του Snap και ότι συμφωνείς με τους <a href=\"${0}\" target=\"_blank\">Όρους υπηρεσίας</a> του Snap. Ορισμένοι Φακοί χρησιμοποιούν πληροφορίες σχετικά με το πρόσωπο, τα χέρια και τη φωνή σου για να λειτουργήσουν. <a href=\"${0}\" target=\"_blank\">Μάθε περισσότερα</a> και αν θέλεις να συμφωνήσεις και να συνεχίσεις, άγγιξε παρακάτω.`\n        ),\n        legalPromptAccept: `Συμφωνώ`,\n        legalPromptReject: `Απόρριψη`,\n        legalPromptTermsOfService: `Όροι υπηρεσίας`,\n        legalPromptVariantGMessage: `Αυτή η λειτουργία χρησιμοποιεί πληροφορίες σχετικά με τα πρόσωπα, τα χέρια και τις φωνές που ανιχνεύονται από την κάμερα και το μικρόφωνο, προκειμένου να λειτουργήσει. Με αυτήν τη λειτουργία μπορείς να εφαρμόσεις διασκεδαστικά και χρήσιμα εφέ επαυξημένης πραγματικότητας σε σέλφι και εικόνες. Η κάμερά μας χρησιμοποιεί την τεχνολογία για να εντοπίσει ορισμένα χαρακτηριστικά (όπως που βρίσκονται τα χέρια, τα μάτια και η μύτη σου) και αξιοποιεί αυτές τις πληροφορίες για να τοποθετήσει με ακρίβεια τη λειτουργία στην εικόνα που καταγράφεται από την κάμερα. Όλες οι πληροφορίες που συλλέγονται διαγράφονται το συντομότερο δυνατό (συνήθως λίγο μετά το κλείσιμο της εφαρμογής) και σε κάθε περίπτωση σε όχι παραπάνω από τρία χρόνια.<br/><br/>Αν συμφωνείς και θέλεις να συνεχίσεις, άγγιξε παρακάτω.`,\n        legalPromptVariantGAdultOrChild: `Είσαι ενήλικας ή παιδί;`,\n        legalPromptVariantGFindYourParent: `Βρες τον γονέα ή τον νόμιμο κηδεμόνα σου.`,\n        legalPromptVariantGIAmGuardian: `Είμαι ο κηδεμόνας του παιδιού`,\n        legalPromptVariantGCancel: `Άκυρο`,\n        legalPromptVariantGAdult: `Ενήλικος`,\n        legalPromptVariantGChild: `Παιδί`,\n    },\n\n    \"en-GB\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`By using Lenses, you acknowledge reading Snap\\’s <a href=\"${0}\" target=\"_blank\">Privacy Policy</a> and agree to Snap\\’s <a href=\"${0}\" target=\"_blank\">Terms of Service</a>. Some Lenses use information about your face, hands and voice to work. <a href=\"${0}\" target=\"_blank\">Learn More</a>, and if you want to agree and continue, tap below.`\n        ),\n        legalPromptAccept: `I agree`,\n        legalPromptReject: `Dismiss`,\n        legalPromptTermsOfService: `Terms of Service`,\n        legalPromptVariantGMessage: `This feature uses information about face(s), hands and voice(s) detected by the camera and microphone to work. With this feature, you can apply fun and useful augmented reality effects on top of selfies and images. Our camera uses technology to locate certain features (like where your hands, eyes and nose are) and uses that information to accurately position the feature with the image sensed by the camera. Any information that is collected will be deleted as soon as possible (typically soon after the app is closed) and always within no more than three years.<br/><br/>If you want to agree and continue, tap below.`,\n        legalPromptVariantGAdultOrChild: `Are you an adult or child?`,\n        legalPromptVariantGFindYourParent: `Please find your parent or legal guardian.`,\n        legalPromptVariantGIAmGuardian: `I am the child\\’s guardian`,\n        legalPromptVariantGCancel: `Cancel`,\n        legalPromptVariantGAdult: `Adult`,\n        legalPromptVariantGChild: `Child`,\n    },\n\n    es: {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Al usar Lentes, confirmas que leíste la <a href=\"${0}\" target=\"_blank\">Política de privacidad</a> de Snap y aceptas las <a href=\"${0}\" target=\"_blank\">Condiciones de servicio</a>. Algunos Lentes funcionan usando información acerca de tu cara, tus manos y tu voz. <a href=\"${0}\" target=\"_blank\">Obtén más información</a> y, si quieres aceptar y continuar, toca a continuación.`\n        ),\n        legalPromptAccept: `Acepto`,\n        legalPromptReject: `Ignorar`,\n        legalPromptTermsOfService: `Condiciones de servicio`,\n        legalPromptVariantGMessage: `Esta función utiliza información sobre caras, manos y voces detectadas por la cámara y el micrófono para funcionar. Con esta función, puedes aplicar divertidos y útiles efectos de realidad aumentada sobre selfies e imágenes. Nuestra cámara utiliza tecnología para localizar ciertos rasgos (como dónde están las manos, los ojos y la nariz) y utiliza dicha información para posicionar correctamente el rasgo sobre la imagen detectada por la cámara. Toda la información recopilada se eliminará tan pronto como sea posible (por lo general, poco después de que se cierre la app), siempre en un plazo menor a tres años.<br/><br/>Para aceptar y continuar, toca a continuación.`,\n        legalPromptVariantGAdultOrChild: `¿Eres mayor o menor de edad?`,\n        legalPromptVariantGFindYourParent: `Busca a tu padre, madre o tutor legal.`,\n        legalPromptVariantGIAmGuardian: `Soy el tutor legal del menor`,\n        legalPromptVariantGCancel: `Cancelar`,\n        legalPromptVariantGAdult: `Mayor de edad`,\n        legalPromptVariantGChild: `Menor de edad`,\n    },\n\n    \"es-AR\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Al usar los Lentes, confirmás que leíste la <a href=\"${0}\" target=\"_blank\">Política de privacidad</a> de Snap y que aceptás sus <a href=\"${0}\" target=\"_blank\">Condiciones de servicio</a>. Algunos Lentes usan información sobre tu cara, tus manos y tu voz para funcionar. <a href=\"${0}\" target=\"_blank\">Obtené más información</a>, y si querés aceptar y continuar, tocá el botón que aparece más abajo.`\n        ),\n        legalPromptAccept: `Acepto`,\n        legalPromptReject: `Omitir`,\n        legalPromptTermsOfService: `Condiciones de servicio`,\n        legalPromptVariantGMessage: `Esta función utiliza la información sobre caras, manos y voces detectadas por la cámara y el micrófono. Con esta función, podés aplicar divertidos y útiles efectos de realidad aumentada sobre selfies e imágenes. Nuestra cámara utiliza tecnología para localizar ciertos rasgos (como dónde están las manos, los ojos y la nariz) y utiliza esa información para posicionar con precisión el rasgo con la imagen detectada por la cámara. Toda la información recopilada se eliminará lo antes posible (normalmente poco después de cerrar la aplicación) y siempre en un plazo máximo de tres años.<br/><br/>Si deseas aceptar y continuar, tocá a continuación.`,\n        legalPromptVariantGAdultOrChild: `¿Sos mayor o menor de edad?`,\n        legalPromptVariantGFindYourParent: `Buscá a tu padre, madre o tutor legal.`,\n        legalPromptVariantGIAmGuardian: `Soy el tutor legal del menor`,\n        legalPromptVariantGCancel: `Cancelar`,\n        legalPromptVariantGAdult: `Mayor de edad`,\n        legalPromptVariantGChild: `Menor de edad`,\n    },\n\n    \"es-ES\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Al usar las Lentes, reconoces haber leído la <a href=\"${0}\" target=\"_blank\">Política de privacidad</a> y aceptas los <a href=\"${0}\" target=\"_blank\">Términos del servicio</a> de Snap. Algunas Lentes funcionan utilizando información de tu cara, tus manos o tu voz. Puedes obtener <a href=\"${0}\" target=\"_blank\">más información</a>, y si quieres aceptar y continuar, toca el botón a continuación.`\n        ),\n        legalPromptAccept: `Acepto`,\n        legalPromptReject: `Descartar`,\n        legalPromptTermsOfService: `Términos del servicio`,\n        legalPromptVariantGMessage: `Para su funcionamiento, esta función hace uso de los datos sobre la cara, las manos y las voces detectados por la cámara y el micrófono. Con ella, puedes aplicar efectos de realidad aumentada, tanto útiles como divertidos, en selfies e imágenes. Nuestra cámara utiliza la tecnología para localizar determinados elementos (como la posición de las manos, los ojos o la nariz) y utiliza esta información para colocar el elemento sobre la imagen de forma fiel, según lo detectado por la cámara. Cualquier información que se recopile se eliminará lo antes posible (normalmente, al cerrar la aplicación) y nunca se almacenará durante más de tres años.<br/><br/>Si quieres aceptar y continuar, toca a continuación.`,\n        legalPromptVariantGAdultOrChild: `¿Eres una persona adulta o eres menor?`,\n        legalPromptVariantGFindYourParent: `Habla con tu padre, madre o tutor/a legal.`,\n        legalPromptVariantGIAmGuardian: `Soy el tutor o tutora legal del menor`,\n        legalPromptVariantGCancel: `Cancelar`,\n        legalPromptVariantGAdult: `Adulto`,\n        legalPromptVariantGChild: `Menor`,\n    },\n\n    \"es-MX\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Al usar Lentes, confirmas que leíste la <a href=\"${0}\" target=\"_blank\">Política de privacidad</a> y aceptas los <a href=\"${0}\" target=\"_blank\">Términos y condiciones de servicio</a> de Snap. Algunos lentes usan información sobre tu cara, manos o voz para funcionar. <a href=\"${0}\" target=\"_blank\">Obtén más información</a> y, si quieres aceptarlo, toca a continuación.`\n        ),\n        legalPromptAccept: `Acepto`,\n        legalPromptReject: `Ignorar`,\n        legalPromptTermsOfService: `Términos y condiciones de servicio`,\n        legalPromptVariantGMessage: `Esta característica utiliza información sobre la(s) cara(s), manos y voz o voces detectadas por la cámara y el micrófono para funcionar. Con ella, puedes aplicar efectos de realidad aumentada útiles y divertidos a selfies e imágenes. Nuestra cámara usa tecnología para localizar ciertos rasgos (como dónde están tus manos, ojos y nariz) y utiliza esa información para posicionar con precisión esta característica con la imagen que la cámara percibió. Toda la información que se recopile se eliminará lo más pronto posible (por lo general, poco después de cerrar la app) y nunca excederá los tres días.<br/><br/>Si quieres aceptar y proseguir, toca a continuación.`,\n        legalPromptVariantGAdultOrChild: `¿Eres mayor o menor de edad?`,\n        legalPromptVariantGFindYourParent: `Busca a tu madre, padre o quien tenga tu custodia legal.`,\n        legalPromptVariantGIAmGuardian: `Tengo la custodia de la persona menor`,\n        legalPromptVariantGCancel: `Cancelar`,\n        legalPromptVariantGAdult: `Persona adulta`,\n        legalPromptVariantGChild: `Persona menor`,\n    },\n\n    \"fi-FI\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Käyttämällä tehosteita ilmaiset lukeneesi Snapin <a href=\"${0}\" target=\"_blank\">tietosuojaselosteen</a> ja hyväksyväsi Snapin <a href=\"${0}\" target=\"_blank\">palveluehdot</a>. Jotkin tehosteet käyttävät toimintaan tietoja kasvoistasi, käsistäsi ja äänestäsi. <a href=\"${0}\" target=\"_blank\">Lisätietoja saat täältä</a>. Hyväksy ja jatka napauttamalla alla olevaa painiketta.`\n        ),\n        legalPromptAccept: `Hyväksyn`,\n        legalPromptReject: `Hylkää`,\n        legalPromptTermsOfService: `Palveluehdot`,\n        legalPromptVariantGMessage: `Tämä ominaisuus käyttää toimiakseen tietoja kameran ja mikrofonin havaitsemista kasvoista, käsistä ja äänistä. Ominaisuudella voit lisätä hauskoja ja hyödyllisiä lisätyn todellisuuden efektejä selfieiden ja kuvien päälle. Kameramme käyttää teknologiaa tiettyjen piirteiden paikallistamiseen (kuten käsiesi, silmiesi ja nenäsi sijaintiin) ja käyttää näitä tietoja ominaisuuden asettamiseen oikeaan kohtaan kameran havaitsemassa kuvassa. Kaikki kerätyt tiedot poistetaan mahdollisimman pian (yleensä pian sovelluksen sulkemisen jälkeen) ja aina viimeistään kolmen vuoden kuluttua.<br/><br/>Jos haluat hyväksyä ja jatkaa, napauta painiketta alla. `,\n        legalPromptVariantGAdultOrChild: `Oletko aikuinen vai lapsi?`,\n        legalPromptVariantGFindYourParent: `Etsi vanhempasi tai huoltajasi.`,\n        legalPromptVariantGIAmGuardian: `Olen lapsen huoltaja`,\n        legalPromptVariantGCancel: `Peruuta`,\n        legalPromptVariantGAdult: `Aikuinen`,\n        legalPromptVariantGChild: `Lapsi`,\n    },\n\n    \"fil-PH\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Sa pamamagitan ng paggamit sa Lenses, kinikilala mong binasa mo ang <a href=\"${0}\" target=\"_blank\">Privacy Policy</a> ng Snap at sumasang-ayon ka sa <a href=\"${0}\" target=\"_blank\">Terms of Service</a> ng Snap. Ang ilang lens ay gumagamit ng impormasyon tungkol sa iyong mukha , mga kamay at boses para gumana. <a href=\"${0}\" target=\"_blank\">Alamin Pa</a>, at kung gusto mong sumang-ayon at magpatuloy, mag-tap sa ibaba.`\n        ),\n        legalPromptAccept: `Sang-ayon Ako`,\n        legalPromptReject: `I-dismiss`,\n        legalPromptTermsOfService: `Terms of Service`,\n        legalPromptVariantGMessage: `Ang feature na ito ay gumagamit ng impormasyon tungkol sa (mga) mukha, mga kamay at (mga) boses na nade-detect ng camera at microphone para gumana ito. Gamit ang feature na ito, pwede kang mag-apply ng nakakatuwa at kapaki-pakinabang na augmented reality effects sa ibabaw ng mga selfie at image. Gumagamit ang camera namin ng technology para matukoy ang mga partikular na anyo (tulad ng kung nasaan ang iyong mga kamay, mga mata, at ilong) at ginagamit nito ang impormasyong iyon para eksaktong mapwesto ang anyong iyon sa image na nase-sense ng camera. Ang anumang impormasyong kinokolekta ay ide-delete sa lalong madaling panahon (karaniwan ay maikling panahon lang matapos isara ang app) at palaging hindi lalampas nang tatlong taon.<br/><br/>Kung gusto mong sumang-ayon at magpatuloy, mag-tap sa ibaba.`,\n        legalPromptVariantGAdultOrChild: `Isa ka bang adult o bata?`,\n        legalPromptVariantGFindYourParent: `Pakihanap ang iyong magulang o legal guardian.`,\n        legalPromptVariantGIAmGuardian: `Ako ang guardian ng bata`,\n        legalPromptVariantGCancel: `I-cancel`,\n        legalPromptVariantGAdult: `Adult`,\n        legalPromptVariantGChild: `Bata`,\n    },\n\n    \"fr-FR\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`En utilisant les Lenses, vous reconnaissez avoir lu la <a href=\"${0}\" target=\"_blank\">Politique de confidentialité</a> de Snap et vous acceptez les <a href=\"${0}\" target=\"_blank\">Conditions d\\'utilisation du service</a> de Snap. Le fonctionnement de certaines Lenses requiert l\\'utilisation d\\'informations sur votre visage, vos mains et votre voix. <a href=\"${0}\" target=\"_blank\">En savoir plus</a>. Si vous acceptez ces conditions et souhaitez continuer, appuyez ci-dessous.`\n        ),\n        legalPromptAccept: `J\\'accepte`,\n        legalPromptReject: `Ignorer`,\n        legalPromptTermsOfService: `Conditions d\\'utilisation du service`,\n        legalPromptVariantGMessage: `Pour fonctionner, cette fonctionnalité utilise des informations sur le ou les visages, les mains et la ou les voix détectés par l\\'appareil photo et le micro. Elle vous permet d\\'appliquer des effets en réalité augmentée amusants et utiles sur vos selfies et vos images. Notre appareil photo utilise une technologie qui localise certaines caractéristiques (comme l\\'emplacement de vos mains, de vos yeux et de votre nez) afin de positionner avec précision la fonctionnalité sur l\\'image détectée par l\\'appareil photo. Toutes les informations collectées sont supprimées dès que possible (généralement peu après la fermeture de l\\'application) et toujours dans un délai maximum de trois ans.<br/><br/>Si vous souhaitez accepter et continuer, appuyez ci-dessous.`,\n        legalPromptVariantGAdultOrChild: `Êtes-vous adulte ou mineur ?`,\n        legalPromptVariantGFindYourParent: `Veuillez appeler votre parent ou votre tuteur·rice.`,\n        legalPromptVariantGIAmGuardian: `Je suis le ou la tuteur·rice de l\\'enfant.`,\n        legalPromptVariantGCancel: `Annuler`,\n        legalPromptVariantGAdult: `Adulte`,\n        legalPromptVariantGChild: `Mineur`,\n    },\n\n    \"gu-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`લેન્સનો ઉપયોગ કરીને, તમે સ્વીકારો છો કે તમે Snapની <a href=\"${0}\" target=\"_blank\">પ્રાઇવસી પોલિસી</a> વાંચી છે અને Snapની <a href=\"${0}\" target=\"_blank\">સેવાની શરતો</a> સાથે સંમત છો. કેટલાક લેન્સ કામ કરી શકે તે માટે તે તમારા ચહેરા, હાથ અને અવાજનો ઉપયોગ કરે છે. <a href=\"${0}\" target=\"_blank\">વધુ જાણો</a>, અને જો તમે સંમત થવા માંગતા હો, તો નીચે ટૅપ કરો.`\n        ),\n        legalPromptAccept: `હું સંમત છું`,\n        legalPromptReject: `બરતરફ કરો`,\n        legalPromptTermsOfService: `સેવાની શરતો`,\n        legalPromptVariantGMessage: `આ સુવિધા કામ કરી શકે તે માટે કૅમેરા અને માઇક્રોફોન દ્વારા શોધાયેલા ચહેરા(ઓ), હાથ અને અવાજ(જો) વિશેની માહિતીનો ઉપયોગ કરે છે. આ સુવિધા સાથે તમે સેલ્ફી અને ઇમેજની ઉપર મજેદાર અને ઉપયોગી ઑગ્મેંટેડ રિયાલીટી ઇફેક્ટ લાગુ કરી શકો છો. અમારા કૅમેરા અમુક લક્ષણો (જેમ કે તમારા હાથ, આંખો અને નાક ક્યાં છે તે)નું સ્થાન જાણવા માટે ટેક્નોલોજીનો ઉપયોગ કરે છે અને તે માહિતીનો ઉપયોગ તે લક્ષણને કૅમેરા દ્વારા શોધાયેલ ઇમેજ સાથે સ્થિત કરવા માટે કરે છે. એકત્રિત કરેલી કોઈ પણ માહિતી શક્ય તેટલી વહેલી તકે (સામાન્ય રીતે ઍપ બંધ કરવામાં આવે પછી તરત) અને હંમેશાં ત્રણ દિવસની અંદર ડિલીટ કરવામાં આવશે.<br/><br/>જો તમે સંમત થવા અને ચાલુ રાખવા માંગતા હો, તો નીચે ટૅપ કરો.`,\n        legalPromptVariantGAdultOrChild: `તમે વયસ્ક છો કે બાળક?`,\n        legalPromptVariantGFindYourParent: `કૃપા કરીને તમારા માતા-પિતા અથવા કાનૂની વાલીને શોધો.`,\n        legalPromptVariantGIAmGuardian: `હું બાળકના વાલી છું.`,\n        legalPromptVariantGCancel: `રદ કરો`,\n        legalPromptVariantGAdult: `વયસ્ક`,\n        legalPromptVariantGChild: `બાળક`,\n    },\n\n    \"hi-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`लेंस का इस्तेमाल करके, आप स्वीकार करते हैं कि आपने Snap की <a href=\"${0}\" target=\"_blank\">गोपनीयता नीति</a> को पढ़ लिया है और आप Snap की <a href=\"${0}\" target=\"_blank\">सेवा शर्तों</a> से सहमत हैं। कुछ लेंस काम करने के लिए आपके चेहरे, हाथों और आवाज़ का इस्तेमाल करते हैं। <a href=\"${0}\" target=\"_blank\">और जानें</a>, और अगर आप सहमत होते हैं और जारी रखना चाहते हैं, तो नीचे टैप करें।`\n        ),\n        legalPromptAccept: `मैं सहमत हूं`,\n        legalPromptReject: `खारिज करें`,\n        legalPromptTermsOfService: `सेवा शर्तें`,\n        legalPromptVariantGMessage: `यह फ़ीचर काम करने के लिए कैमरा और माइक्रोफ़ोन द्वारा फ़ेस, हाथों और आवाज़(जों) के बारे में पहचानी गई जानकारी का इस्तेमाल करता है। इस फ़ीचर की मदद से आप सेल्फ़ी और इमेज के ऊपर मज़ेदार और उपयोगी ऑगमेंटेड रिएलिटी इफ़ेक्ट्स डाल सकते हैं। हमारा कैमरा कुछ फ़ीचर्स (जैसे कि, आपके हाथ, आंख और नाक की जगह) का पता लगाने के लिए टेक्नॉलॉजी का इस्तेमाल करता है और उस जानकारी के इस्तेमाल से खुद महसूस की गई इमेज पर फ़ीचर को सटीक जगह पर लाया जाता है। इकठ्ठा की गई किसी भी जानकारी को जल्द से जल्द (आमतौर पर ऐप बंद करते ही) और तीन सालों के अंदर हमेशा के लिए डिलीट कर दिया जाएगा।<br/><br/>अगर आप सहमत हैं और जारी रखना चाहते हैं, तो नीचे टैप करें।`,\n        legalPromptVariantGAdultOrChild: `क्या आप बच्चे हैं या व्यस्क?`,\n        legalPromptVariantGFindYourParent: `प्लीज़ अपने माता-पिता या कानूनी गार्जियन का पता लगाएं।`,\n        legalPromptVariantGIAmGuardian: `मैं बच्चे का गार्जियन हूं`,\n        legalPromptVariantGCancel: `रद्द करें`,\n        legalPromptVariantGAdult: `वयस्क`,\n        legalPromptVariantGChild: `बच्चा`,\n    },\n\n    \"id-ID\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Dengan menggunakan Lensa, kamu menyatakan bahwa kamu sudah membaca <a href=\"${0}\" target=\"_blank\">Kebijakan Privasi</a> Snap dan menyetujui <a href=\"${0}\" target=\"_blank\">Ketentuan Layanan</a> Snap. Beberapa lensa menggunakan informasi tentang wajah, tangan, dan suaramu agar bisa berfungsi dengan baik. <a href=\"${0}\" target=\"_blank\">Pelajari Selengkapnya</a>, dan silakan ketuk tombol di bawah jika kamu ingin menyetujuinya dan melanjutkan.`\n        ),\n        legalPromptAccept: `Saya setuju`,\n        legalPromptReject: `Tutup`,\n        legalPromptTermsOfService: `Ketentuan Layanan`,\n        legalPromptVariantGMessage: `Agar bisa berfungsi, fitur ini menggunakan informasi terkait wajah, tangan, dan suara yang dideteksi oleh kamera serta mikrofon. Dengan fitur ini, efek augmented reality yang menyenangkan dan berguna dapat diterapkan ke selfie dan gambar. Kamera kami menggunakan teknologi untuk menemukan lokasi fitur tertentu (misalnya menemukan bagian tangan, mata, dan hidung), lalu menggunakan informasi tersebut untuk menempatkan fitur secara akurat di gambar yang dideteksi oleh kamera. Informasi apa pun yang dikumpulkan akan segera dihapus (biasanya setelah aplikasi ditutup) dan selalu disimpan tidak lebih dari tiga tahun.<br/><br/>Jika ingin menyetujui dan melanjutkan, ketuk tombol di bawah ini.`,\n        legalPromptVariantGAdultOrChild: `Apakah kamu orang dewasa atau anak-anak?`,\n        legalPromptVariantGFindYourParent: `Panggil orang tua atau wali resmi.`,\n        legalPromptVariantGIAmGuardian: `Saya wali si anak`,\n        legalPromptVariantGCancel: `Batal`,\n        legalPromptVariantGAdult: `Orang Dewasa`,\n        legalPromptVariantGChild: `Anak-Anak`,\n    },\n\n    \"it-IT\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Usando le Lenti, confermi di aver letto l\\'<a href=\"${0}\" target=\"_blank\">Informativa sulla Privacy</a> di Snap Inc. e di accettare i <a href=\"${0}\" target=\"_blank\">Termini di Servizio</a> di Snap Inc. Alcune Lenti utilizzano informazioni sul tuo viso, le tue mani e la tua voce per funzionare. <a href=\"${0}\" target=\"_blank\">Scopri di più</a> e, se sei d\\'accordo e vuoi continuare, tocca qui sotto.`\n        ),\n        legalPromptAccept: `Accetto`,\n        legalPromptReject: `Ignora`,\n        legalPromptTermsOfService: `Termini di Servizio`,\n        legalPromptVariantGMessage: `Questa funzionalità utilizza le informazioni su viso, mani e voce rilevate dalla fotocamera e dal microfono per funzionare. Ti consente di applicare effetti in realtà aumentata divertenti e utili ai selfie e alle immagini. La nostra Fotocamera sfrutta una tecnologia specifica per individuare certe parti del corpo (ad esempio mani, occhi e naso) e usa questi dati per posizionarle in modo accurato sull\\'immagine rilevata. Qualsiasi informazione raccolta viene eliminata appena possibile (di solito poco dopo la chiusura dell\\'app) e, in ogni caso, entro 3 anni.<br/><br/>Se sei d\\'accordo e vuoi continuare, tocca qui sotto.`,\n        legalPromptVariantGAdultOrChild: `Sei un adulto o un minore?`,\n        legalPromptVariantGFindYourParent: `C\\'è bisogno di un genitore o tutore legale.`,\n        legalPromptVariantGIAmGuardian: `Sono il tutore del minore`,\n        legalPromptVariantGCancel: `Annulla`,\n        legalPromptVariantGAdult: `Adulto`,\n        legalPromptVariantGChild: `Minore`,\n    },\n\n    \"ja-JP\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`レンズを使用することにより、Snap社の<a href=\"${0}\" target=\"_blank\">プライバシーポリシー</a>を読み、<a href=\"${0}\" target=\"_blank\">利用規約</a>に同意したことになります。レンズの中には、あなたの顔や手、声の情報を利用するものがあります。<a href=\"${0}\" target=\"_blank\">詳細はこちらからご覧いただき</a>、同意して利用を継続する場合には下をタップしてください。`\n        ),\n        legalPromptAccept: `同意します`,\n        legalPromptReject: `閉じる`,\n        legalPromptTermsOfService: `利用規約`,\n        legalPromptVariantGMessage: `この機能はカメラとマイクを使って検知した顔や手、声の情報を利用します。この機能で、自撮りや画像に楽しく便利な拡張現実の効果を適用できます。Snapのカメラは特定の特徴（例えばあなたの手や目、鼻などの位置）をとらえるテクノロジーを使用し、その情報を利用してカメラによって感知した画像に特徴を適用します。収集した情報はいずれもすぐに消去され（通常アプリが閉じられてからすぐ）、3年を超えて保存されることはありません。<br/><br/>同意して続行するには下記をタップしてください。`,\n        legalPromptVariantGAdultOrChild: `大人ですか、子どもですか？`,\n        legalPromptVariantGFindYourParent: `親または保護者を探してください。`,\n        legalPromptVariantGIAmGuardian: `私はその子供の保護者です`,\n        legalPromptVariantGCancel: `キャンセル`,\n        legalPromptVariantGAdult: `大人`,\n        legalPromptVariantGChild: `子ども`,\n    },\n\n    \"kn-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`ಲೆನ್ಸ್‌ಗಳನ್ನು ಬಳಸುವ ಮೂಲಕ, Snap ನ <a href=\"${0}\" target=\"_blank\">ಗೌಪ್ಯತಾ ನೀತಿ</a> ಅನ್ನು ನೀವು ಓದಿದ್ದೀರಿ ಎಂದು ಅಂಗೀಕರಿಸುತ್ತೀರಿ ಮತ್ತು Snap ನ <a href=\"${0}\" target=\"_blank\">ಸೇವೆಯ ನಿಯಮಗಳು</a> ಅನ್ನು ಒಪ್ಪುತ್ತೀರಿ. ಕೆಲವು ಲೆನ್ಸ್‌ಗಳು ಕಾರ್ಯನಿರ್ವಹಿಸಲು ನಿಮ್ಮ ಮುಖ, ಕೈಗಳು ಮತ್ತು ಧ್ವನಿಯ ಮಾಹಿತಿಯನ್ನು ಬಳಸುತ್ತವೆ. <a href=\"${0}\" target=\"_blank\">ಇನ್ನಷ್ಟು ತಿಳಿಯಿರಿ</a>, ಹಾಗೂ ಒಂದು ವೇಳೆ ನೀವು ಒಪ್ಪಿ ಮುಂದುವರಿಯಲು ಬಯಸಿದರೆ, ಕೆಳಗೆ ಟ್ಯಾಪ್ ಮಾಡಿ.`\n        ),\n        legalPromptAccept: `ನಾನು ಒಪ್ಪುತ್ತೇನೆ`,\n        legalPromptReject: `ವಜಾಮಾಡಿ`,\n        legalPromptTermsOfService: `ಸೇವೆಯ ನಿಯಮಗಳು`,\n        legalPromptVariantGMessage: `ಈ ವೈಶಿಷ್ಟ್ಯವು ಕಾರ್ಯನಿರ್ವಹಿಸಲು ಕ್ಯಾಮರಾ ಮತ್ತು ಮೈಕ್ರೊಫೋನ್‌ನಿಂದ ಪತ್ತೆಯಾದ ಮುಖ(ಗಳು), ಕೈಗಳು ಮತ್ತು ಧ್ವನಿ(ಗಳು) ಕುರಿತು ಮಾಹಿತಿಯನ್ನು ಬಳಸುತ್ತದೆ. ಈ ವೈಶಿಷ್ಟ್ಯದೊಂದಿಗೆ, ನೀವು ಸೆಲ್ಫಿಗಳು ಮತ್ತು ಚಿತ್ರಗಳ ಮೇಲೆ ವಿನೋದ ಮತ್ತು ಉಪಯುಕ್ತ ಆಗ್ಮೆಂಟೆಡ್‌ ರಿಯಾಲಿಟಿ ಪರಿಣಾಮಗಳನ್ನು ಅನ್ವಯಿಸಬಹುದು. ನಮ್ಮ ಕ್ಯಾಮರಾ ಕೆಲವು ವೈಶಿಷ್ಟ್ಯಗಳನ್ನು (ನಿಮ್ಮ ಕೈಗಳು, ಕಣ್ಣುಗಳು ಮತ್ತು ಮೂಗು ಎಲ್ಲಿದೆ ಎಂದು) ಪತ್ತೆಹಚ್ಚಲು ತಂತ್ರಜ್ಞಾನವನ್ನು ಬಳಸುತ್ತದೆ ಮತ್ತು ಕ್ಯಾಮರಾದಿಂದ ಗ್ರಹಿಸಲ್ಪಟ್ಟ ಚಿತ್ರದೊಂದಿಗೆ ವೈಶಿಷ್ಟ್ಯವನ್ನು ನಿಖರವಾಗಿ ಇರಿಸಲು ಆ ಮಾಹಿತಿಯನ್ನು ಬಳಸುತ್ತದೆ. ಸಂಗ್ರಹಿಸಿದ ಯಾವುದೇ ಮಾಹಿತಿಯನ್ನು ಸಾಧ್ಯವಾದಷ್ಟು ಬೇಗ ಅಳಿಸಲಾಗುತ್ತದೆ (ಸಾಮಾನ್ಯವಾಗಿ ಆ್ಯಪ್‌ ಅನ್ನು ಮುಚ್ಚಿದ ನಂತರ) ಮತ್ತು ಎಂದಿಗೂ ಮೂರು ವರ್ಷಗಳ ನಂತರ ಇರಿಸಿಕೊಳ್ಳಲಾಗುವುದಿಲ್ಲ. <br/><br/> ನೀವು ಒಪ್ಪಿಕೊಳ್ಳಲು ಮತ್ತು ಮುಂದುವರಿಸಲು ಬಯಸಿದರೆ, ಕೆಳಗೆ ಟ್ಯಾಪ್ ಮಾಡಿ.`,\n        legalPromptVariantGAdultOrChild: `ನೀವು ವಯಸ್ಕರೇ ಅಥವಾ ಮಗುವೇ?`,\n        legalPromptVariantGFindYourParent: `ದಯವಿಟ್ಟು ನಿಮ್ಮ ಪೋಷಕರು ಅಥವಾ ಕಾನೂನು ಪಾಲಕರನ್ನು ಹುಡುಕಿ.`,\n        legalPromptVariantGIAmGuardian: `ನಾನು ಮಗುವಿನ ಪೋಷಕ`,\n        legalPromptVariantGCancel: `ರದ್ದುಮಾಡಿ`,\n        legalPromptVariantGAdult: `ವಯಸ್ಕ`,\n        legalPromptVariantGChild: `ಮಗು`,\n    },\n\n    \"ko-KR\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`렌즈를 사용하면 Snap의 <a href=\"${0}\" target=\"_blank\">개인정보 보호정책</a>을 읽고 Snap의 <a href=\"${0}\" target=\"_blank\">이용 약관</a>에 동의하는 것으로 간주됩니다. 일부 렌즈는 회원님의 얼굴, 손 및 목소리 정보를 사용합니다. <a href=\"${0}\" target=\"_blank\">자세히 알아보고</a>, 동의 및 계속하려면 아래를 누르세요.`\n        ),\n        legalPromptAccept: `동의함`,\n        legalPromptReject: `취소`,\n        legalPromptTermsOfService: `이용 약관`,\n        legalPromptVariantGMessage: `이 기능은 카메라와 마이크가 감지한 얼굴, 손, 음성에 대한 정보를 사용하여 작동합니다. 이 기능을 사용하면 셀카 및 이미지에 재미있고 유용한 증강 현실 효과를 적용할 수 있습니다. Snapchat 카메라는 특정 특징(예: 손, 눈 및 코의 위치)을 찾아내는 기술을 사용하며, 해당 정보를 바탕으로 카메라가 감지한 이미지에서 특징의 위치를 정확하게 파악합니다. 수집된 모든 정보는 가능한 한 빨리(일반적으로 앱 종료 직후) 삭제되며, 항상 3년 이내에 삭제됩니다.<br/><br/>동의하고 계속하려면 아래를 누르세요.`,\n        legalPromptVariantGAdultOrChild: `성인인가요, 아동인가요?`,\n        legalPromptVariantGFindYourParent: `부모님 또는 법적 보호자와 함께 진행하세요.`,\n        legalPromptVariantGIAmGuardian: `아동의 보호자입니다`,\n        legalPromptVariantGCancel: `취소`,\n        legalPromptVariantGAdult: `성인`,\n        legalPromptVariantGChild: `아동`,\n    },\n\n    \"ml-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`ലെൻസുകൾ ഉപയോഗിക്കുന്നതിലൂടെ നിങ്ങൾ Snap-ന്റെ <a href=\"${0}\" target=\"_blank\">സ്വകാര്യതാ നയം</a> വായിച്ചുവെന്ന് സമ്മതിക്കുകയും Snap-ന്റെ <a href=\"${0}\" target=\"_blank\">സേവന നിബന്ധനകൾ</a> അംഗീകരിക്കുകയും ചെയ്യുന്നു. പ്രവർത്തിക്കുന്നതിന് ചില ലെൻസുകൾ നിങ്ങളുടെ മുഖം, കൈകൾ, ശബ്ദം എന്നിവയേക്കുറിച്ചുള്ള വിവരങ്ങൾ ഉപയോഗിക്കുന്നു. <a href=\"${0}\" target=\"_blank\">കൂടുതലറിയുക</a>, അംഗീകരിച്ച് തുടരണമെങ്കിൽ ചുവടെ ടാപ്പ് ചെയ്യുക.`\n        ),\n        legalPromptAccept: `ഞാൻ അംഗീകരിക്കുന്നു`,\n        legalPromptReject: `ഡിസ്‌മിസ് ചെയ്യുക`,\n        legalPromptTermsOfService: `സേവന വ്യവസ്ഥകൾ`,\n        legalPromptVariantGMessage: `ഈ ആപ്പ് അതിന്റെ പ്രവർത്തനത്തിന്, ക്യാമറയും മൈക്രോഫോണും കണ്ടെത്തുന്ന മുഖം(ങ്ങൾ), കൈകളും ശബ്ദവും(ങ്ങളും) എന്നിവയുമായി ബന്ധപ്പെട്ട വിവരങ്ങൾ ഉപയോഗിക്കുന്നു. ഈ ഫീച്ചർ ഉപയോഗിച്ച് നിങ്ങളുടെ സെൽഫികൾക്കും ചിത്രങ്ങൾക്കും മുകളിൽ, ഉപയോഗപ്രദമായ ഓഗ്‌മെന്റഡ് റിയാലിറ്റി ഇഫക്റ്റുകൾ നൽകാനാകും. ഞങ്ങളുടെ ക്യാമറ ചില ഫീച്ചറുകൾ ലൊക്കേറ്റ് ചെയ്യാൻ (ഉദാഹരണത്തിന് നിങ്ങളുടെ കൈകൾ, കണ്ണുകൾ, മൂക്ക് എന്നിവ എവിടെയാണ്) സാങ്കേതികവിദ്യ ഉപയോഗിക്കുന്നു, ക്യാമറ സെൻസ് ചെയ്ത ചിത്രത്തിൽ ഈ ഫീച്ചർ കൃത്യമായി പൊസിഷൻ ചെയ്യാൻ ഈ വിവരങ്ങൾ ഉപയോഗിക്കുകയും ചെയ്യുന്നു. ശേഖരിക്കുന്ന എല്ലാ വിവരങ്ങളും എത്രയും വേഗവും (സാധാരണയായി ആപ്പ് അടച്ചാൽ ഉടൻ) മൂന്ന് വർഷത്തിനുള്ളിലും (എല്ലായ്‌പ്പോഴും) ഇല്ലാതാക്കുന്നു.<br/><br/>അംഗീകരിച്ച് തുടരണമെന്നുണ്ടെങ്കിൽ ചുവടെ ടാപ്പ് ചെയ്യുക.`,\n        legalPromptVariantGAdultOrChild: `നിങ്ങൾ ഒരു കുട്ടിയാണോ അതോ മുതിർന്ന വ്യക്തിയാണോ?`,\n        legalPromptVariantGFindYourParent: `നിങ്ങളുടെ രക്ഷിതാവിനെയോ നിയമപരമായ രക്ഷിതാവിനെയോ കണ്ടെത്തുക.`,\n        legalPromptVariantGIAmGuardian: `ഞാൻ കുട്ടിയുടെ നിയമപരമായ രക്ഷിതാവാണ്`,\n        legalPromptVariantGCancel: `റദ്ദാക്കുക`,\n        legalPromptVariantGAdult: `മുതിർന്നവ്യക്തി`,\n        legalPromptVariantGChild: `കുട്ടി`,\n    },\n\n    \"mr-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`लेन्सेस वापरून, तुम्ही मान्य करता की तुम्ही Snap चे <a href=\"${0}\" target=\"_blank\">गोपनीयता धोरण</a> वाचले आहे आणि Snap च्या <a href=\"${0}\" target=\"_blank\">सेवा अटींना</a> सहमती देता. काही लेन्सेस कार्य करण्यासाठी तुमचा चेहरा, हात आणि आवाज याविषयी माहिती वापरतात. <a href=\"${0}\" target=\"_blank\">अधिक जाणून घ्या</a> आणि तुम्हाला सहमती देऊन चालू ठेवायचे असल्यास खाली टॅप करा.`\n        ),\n        legalPromptAccept: `मी सहमत आहे`,\n        legalPromptReject: `दुर्लक्ष करा`,\n        legalPromptTermsOfService: `सेवा अटी`,\n        legalPromptVariantGMessage: `हे वैशिष्ट्य कार्य करण्यासाठी कॅमेरा आणि मायक्रोफोनद्वारे तपासलेली चेहरा(चेहरे), हात आणि आवाजाची माहिती वापरते. या वैशिष्ट्यासह, तुम्ही सेल्फी आणि इमेजवर मजेशीर आणि उपयोगी ऑग्मेंटेड रिॲलिटी प्रभाव लागू करू शकता. आमचा कॅमेरा काही फीचर्स (जसे की तुमचे हात, डोळे आणि नाक कुठे आहेत) शोधण्यासाठी तंत्रज्ञान वापरतो आणि कॅमेऱ्याद्वारे ओळखलेल्या इमेजसह फीचर नेमक्या ठिकाणी दाखवण्यासाठी ती माहिती वापरतो. गोळा केलेली कोणतीही माहिती शक्य तितक्या लवकर (सहसा ॲप बंद केल्यावर लगेच) आणि नेहमी तीन वर्षांच्या आत हटवली जाईल.<br/><br/>तुम्हाला सहमती देऊन पुढे चालू ठेवायचे असेल तर, खाली टॅप करा.`,\n        legalPromptVariantGAdultOrChild: `तुम्ही प्रौढ आहात किंवा लहान मूल आहात?`,\n        legalPromptVariantGFindYourParent: `कृपया तुमचे आईवडील किंवा कायदेशीर पालकांना शोधा.`,\n        legalPromptVariantGIAmGuardian: `मी मुलाचा पालक आहे`,\n        legalPromptVariantGCancel: `रद्द करा`,\n        legalPromptVariantGAdult: `प्रौढ`,\n        legalPromptVariantGChild: `मूल`,\n    },\n\n    \"ms-MY\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Dengan menggunakan Lensa, anda mengakui membaca <a href=\"${0}\" target=\"_blank\">Dasar Privasi</a> Snap dan bersetuju dengan <a href=\"${0}\" target=\"_blank\">Syarat Perkhidmatan</a> Snap. Sesetengan lensa menggunakan maklumat tentang muka anda, tangan dan suara untuk berfungsi. <a href=\"${0}\" target=\"_blank\">Ketahui Lebih Lanjut</a>, dan jika anda mahu bersetuju dan teruskan, ketik di bawah.`\n        ),\n        legalPromptAccept: `Saya Setuju`,\n        legalPromptReject: `Abaikan`,\n        legalPromptTermsOfService: `Syarat Perkhidmatan`,\n        legalPromptVariantGMessage: `Ciri ini menggunakan maklumat muka, tangan dan suara yang dikesan oleh kamera dan mikrofon untuk berfungsi. Dengan ciri ini, anda boleh menggunakan kesan realiti tambahan yang menyeronokkan dan berguna selain swafoto dan gambar. Kamera kami menggunakan teknologi untuk mengesan ciri tertentu (seperti di mana tangan, mata dan hidung anda) dan menggunakan maklumat tersebut untuk meletakkan ciri dengan tepat dengan imej yang dikesan oleh kamera. Sebarang maklumat yang dikumpul akan dipadamkan dengan segera (kebiasaannya sejurus aplikasi ditutup) dan sentiasa dalam tempoh tidak lebih daripada tiga tahun.<br/><br/>Jika anda bersetuju dan ingin teruskan, ketik dibawah.`,\n        legalPromptVariantGAdultOrChild: `Adakah anda seorang dewasa atau kanak-kanak?`,\n        legalPromptVariantGFindYourParent: `Sila cari ibu bapa atau penjaga anda yang sah.`,\n        legalPromptVariantGIAmGuardian: `Saya penjaga kanak-kanak ini`,\n        legalPromptVariantGCancel: `Batal`,\n        legalPromptVariantGAdult: `Dewasa`,\n        legalPromptVariantGChild: `Kanak-kanak`,\n    },\n\n    \"nb-NO\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Ved å ta i bruk Linser bekrefter du at du har lest <a href=\"${0}\" target=\"_blank\">personvernbetingelsene</a> og at du godtar <a href=\"${0}\" target=\"_blank\">tjenestevilkårene</a> til Snap. Noen Linser bruker informasjon om ansiktet ditt, hendene dine og stemmen din for å fungere. <a href=\"${0}\" target=\"_blank\">Finn ut mer</a>. Hvis du godtar dette og vil gå videre, klikker du nedenfor.`\n        ),\n        legalPromptAccept: `Jeg godtar`,\n        legalPromptReject: `Avvis`,\n        legalPromptTermsOfService: `Tjenestevilkår`,\n        legalPromptVariantGMessage: `Denne funksjonen bruker informasjon om ansikter, hender og stemmer som oppdages av kameraet og mikrofonen, for å fungere. Med denne funksjonen kan du legge til artige og nyttige effekter i utvidet virkelighet på selfier og bilder. Kameraet vårt bruker teknologi for å oppdage visse trekk (som hvor hendene, øynene og nesen er), og bruker denne informasjonen til å plassere funksjonen oppå bildet som kameraet har fanget opp. All informasjon som samles inn, blir slettet så snart som mulig (vanligvis rett etter at appen lukkes) og alltid innen maks tre år.<br/><br/>Hvis du ønsker å godta og fortsette, trykker du nedenfor.`,\n        legalPromptVariantGAdultOrChild: `Er du en voksen eller et barn?`,\n        legalPromptVariantGFindYourParent: `Finn en forelder eller foresatt.`,\n        legalPromptVariantGIAmGuardian: `Jeg er barnets foresatt`,\n        legalPromptVariantGCancel: `Avbryt`,\n        legalPromptVariantGAdult: `Voksen`,\n        legalPromptVariantGChild: `Barn`,\n    },\n\n    \"nl-NL\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Door Lenzen te gebruiken, geef je aan dat je het <a href=\"${0}\" target=\"_blank\">Privacybeleid</a> van Snap hebt gelezen en dat je akkoord gaat met de <a href=\"${0}\" target=\"_blank\">Servicevoorwaarden</a> van Snap. Sommige Lenzen gebruiken informatie over je gezicht, handen en stem om te functioneren. Lees <a href=\"${0}\" target=\"_blank\">meer informatie</a> en tik hieronder als je akkoord gaat en wilt doorgaan.`\n        ),\n        legalPromptAccept: `Ik ga akkoord`,\n        legalPromptReject: `Annuleren`,\n        legalPromptTermsOfService: `Servicevoorwaarden`,\n        legalPromptVariantGMessage: `Voor de werking van deze functie wordt informatie over gezicht(en), handen en stem(men) gebruikt die door camera en microfoon worden gedetecteerd. Je kunt met deze functie leuke en nuttige augmented reality-effecten op selfies en afbeeldingen plaatsen. Onze camera gebruikt technologie om de locatie te bepalen van bepaalde kenmerken (bijvoorbeeld waar je handen, ogen en neus zich bevinden) en gebruikt die informatie om het kenmerk nauwkeurig te positioneren in de afbeelding die is gedetecteerd met de camera. De verzamelde informatie wordt zo snel mogelijk verwijderd (gewoonlijk kort nadat de app is gesloten) en altijd binnen een periode van maximaal drie jaar.<br/><br/>Tik hieronder als je hiermee akkoord gaat en wilt doorgaan.`,\n        legalPromptVariantGAdultOrChild: `Ben je een volwassene of een kind?`,\n        legalPromptVariantGFindYourParent: `Vraag toestemming aan een ouder of wettelijke voogd.`,\n        legalPromptVariantGIAmGuardian: `Ik ben de voogd van het kind`,\n        legalPromptVariantGCancel: `Annuleren`,\n        legalPromptVariantGAdult: `Volwassene`,\n        legalPromptVariantGChild: `Kind`,\n    },\n\n    pa: {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`ਲੈਂਜ਼ਾਂ ਦੀ ਵਰਤੋਂ ਕਰਕੇ, ਤੁਸੀਂ ਇਸ ਗੱਲ ਨੂੰ ਸਵੀਕਾਰ ਕਰਦੇ ਹੋ ਕਿ ਤੁਸੀਂ Snap ਦੀ <a href=\"${0}\" target=\"_blank\">ਪਰਦੇਦਾਰੀ ਬਾਰੇ ਨੀਤੀ</a> ਨੂੰ ਪੜ੍ਹ ਲਿਆ ਹੈ ਅਤੇ ਤੁਸੀਂ Snap ਦੀਆਂ <a href=\"${0}\" target=\"_blank\">ਸੇਵਾ ਦੀਆਂ ਮਦਾਂ</a> ਨਾਲ ਸਹਿਮਤ ਹੋ। ਕੁਝ ਲੈਂਜ਼ ਕੰਮ ਕਰਨ ਲਈ ਤੁਹਾਡੇ ਚਿਹਰੇ, ਹੱਥਾਂ ਅਤੇ ਆਵਾਜ਼ ਨਾਲ ਸੰਬੰਧਿਤ ਜਾਣਕਾਰੀ ਦੀ ਵਰਤੋਂ ਕਰਦੇ ਹਨ। <a href=\"${0}\" target=\"_blank\">ਹੋਰ ਜਾਣੋ</a> ਅਤੇ ਜੇਕਰ ਤੁਸੀਂ ਸਹਿਮਤ ਹੋ ਅਤੇ ਜਾਰੀ ਰੱਖਣਾ ਚਾਹੁੰਦੇ ਹੋ, ਤਾਂ ਹੇਠਾਂ ਟੈਪ ਕਰੋ।`\n        ),\n        legalPromptAccept: `ਮੈਂ ਸਹਿਮਤ ਹਾਂ`,\n        legalPromptReject: `ਖ਼ਾਰਜ ਕਰੋ`,\n        legalPromptTermsOfService: `ਸੇਵਾ ਦੀਆਂ ਮਦਾਂ`,\n        legalPromptVariantGMessage: `ਕੰਮ ਕਰਨ ਲਈ ਇਹ ਸੁਵਿਧਾ ਕੈਮਰੇ ਅਤੇ ਮਾਈਕ੍ਰੋਫ਼ੋਨ ਨਾਲ ਚਿਹਰੇ(ਚਿਹਰਿਆਂ), ਹੱਥਾਂ ਅਤੇ ਆਵਾਜ਼(ਆਵਾਜ਼ਾਂ) ਬਾਰੇ ਲਈ ਗਈ ਜਾਣਕਾਰੀ ਦੀ ਵਰਤੋਂ ਕਰਦੀ ਹੈ। ਇਸ ਸੁਵਿਧਾ ਨਾਲ, ਤੁਸੀਂ ਸੈਲਫ਼ੀਆਂ ਅਤੇ ਚਿੱਤਰਾਂ ਉੱਪਰ ਮਜ਼ੇਦਾਰ ਅਤੇ ਲਾਭਕਾਰੀ ਵਧਾਈ ਗਈ ਹਕੀਕਤ ਵਾਲੇ ਪ੍ਰਭਾਵ ਲਾਗੂ ਕਰ ਸਕਦੇ ਹੋ। ਸਾਡਾ ਕੈਮਰਾ ਕੁਝ ਸੁਵਿਧਾਵਾਂ (ਜਿਵੇਂ ਕਿ ਤੁਹਾਡੇ ਹੱਥ, ਅੱਖਾਂ ਅਤੇ ਨੱਕ ਕਿੱਥੇ ਹਨ) ਦਾ ਪਤਾ ਲਗਾਉਣ ਲਈ ਤਕਨਾਲੋਜੀ ਦੀ ਵਰਤੋਂ ਕਰਦਾ ਹੈ ਅਤੇ ਕੈਮਰੇ ਦੁਆਰਾ ਸੰਵੇਦਿਤ ਚਿੱਤਰ ਦੇ ਨਾਲ ਸੁਵਿਧਾ ਦੀ ਸਹੀ ਸਥਿਤੀ ਲਈ ਉਸ ਜਾਣਕਾਰੀ ਦੀ ਵਰਤੋਂ ਕਰਦਾ ਹੈ। ਇਕੱਠੀ ਕੀਤੀ ਜਾਣ ਵਾਲੀ ਕੋਈ ਵੀ ਜਾਣਕਾਰੀ ਜਿੰਨੀ ਜਲਦੀ ਹੋ ਸਕੇ ਮਿਟਾ ਦਿੱਤੀ ਜਾਵੇਗੀ (ਆਮ ਤੌਰ \\'ਤੇ ਐਪ ਬੰਦ ਹੋਣ ਤੋਂ ਤੁਰੰਤ ਬਾਅਦ) ਅਤੇ ਹਮੇਸ਼ਾ ਤਿੰਨ ਸਾਲਾਂ ਦੇ ਅੰਦਰ।<br/><br/>ਜੇਕਰ ਤੁਸੀਂ ਸਹਿਮਤ ਹੋਣਾ ਅਤੇ ਜਾਰੀ ਰੱਖਣਾ ਚਾਹੁੰਦੇ ਹੋ, ਤਾਂ ਹੇਠਾਂ ਟੈਪ ਕਰੋ।`,\n        legalPromptVariantGAdultOrChild: `ਕੀ ਤੁਸੀਂ ਬਾਲਗ ਹੋ ਜਾਂ ਬੱਚਾ ਹੋ?`,\n        legalPromptVariantGFindYourParent: `ਕਿਰਪਾ ਕਰਕੇ ਆਪਣੇ ਮਾਤਾ-ਪਿਤਾ ਜਾਂ ਕਾਨੂੰਨੀ ਸਰਪ੍ਰਸਤ ਲੱਭੋ।`,\n        legalPromptVariantGIAmGuardian: `ਮੈਂ ਬੱਚੇ ਦਾ ਸਰਪ੍ਰਸਤ ਹਾਂ`,\n        legalPromptVariantGCancel: `ਰੱਦ ਕਰੋ`,\n        legalPromptVariantGAdult: `ਬਾਲਗ`,\n        legalPromptVariantGChild: `ਬੱਚਾ`,\n    },\n\n    \"pl-PL\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Korzystając z nakładek, potwierdzasz zapoznanie się z <a href=\"${0}\" target=\"_blank\">Polityką prywatności</a> i akceptujesz <a href=\"${0}\" target=\"_blank\">Regulamin usługi</a>. Niektóre nakładki wykorzystują informacje o Twojej twarzy, dłoniach i głosie, aby działać poprawnie. <a href=\"${0}\" target=\"_blank\">Dowiedz się więcej</a>, a jeśli chcesz wyrazić zgodę i kontynuować, stuknij poniżej.`\n        ),\n        legalPromptAccept: `Zgadzam się`,\n        legalPromptReject: `Odrzuć`,\n        legalPromptTermsOfService: `Regulamin`,\n        legalPromptVariantGMessage: `Ta funkcja wykorzystuje do działania informacje o twarzy (twarzach), rękach i głosie (głosach) wykrytych przez kamerę i mikrofon. Dzięki niej możesz nakładać na selfie i zdjęcia zabawne i przydatne efekty rozszerzonej rzeczywistości. Nasza kamera wykorzystuje technologię do lokalizowania określonych cech (takich jak miejsce, w którym znajdują się Twoje ręce, oczy i nos) i wykorzystuje te informacje do dokładnego umiejscowienia danej cechy na obrazie wykrywanym przez kamerę. Wszelkie zebrane informacje zostaną usunięte możliwie jak najszybciej (zazwyczaj wkrótce po zamknięciu aplikacji) i zawsze nie później niż w ciągu trzech lat.<br/><br/>Jeśli chcesz wyrazić zgodę i kontynuować, stuknij poniżej.`,\n        legalPromptVariantGAdultOrChild: `Jesteś osobą dorosłą czy dzieckiem?`,\n        legalPromptVariantGFindYourParent: `Zwróć się do swojego rodzica lub opiekuna prawnego.`,\n        legalPromptVariantGIAmGuardian: `Jestem opiekunem prawnym dziecka`,\n        legalPromptVariantGCancel: `Anuluj`,\n        legalPromptVariantGAdult: `Osoba dorosła`,\n        legalPromptVariantGChild: `Dziecko`,\n    },\n\n    \"pt-BR\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Ao usar as Lentes, você reconhece ter lido a <a href=\"${0}\" target=\"_blank\">Política de Privacidade</a> da Snap e concorda com os <a href=\"${0}\" target=\"_blank\">Termos de Serviço</a> da Snap. Algumas Lentes usam informações sobre seu rosto, mãos e voz para funcionar. <a href=\"${0}\" target=\"_blank\">Saiba mais</a> e, se quiser concordar e continuar, toque abaixo.`\n        ),\n        legalPromptAccept: `Eu concordo`,\n        legalPromptReject: `Recusar`,\n        legalPromptTermsOfService: `Termos de Serviço`,\n        legalPromptVariantGMessage: `Este recurso usa informações sobre rosto(s), mãos e voz(es) detectados pela câmera e pelo microfone para funcionar. Com este recurso, você pode aplicar efeitos divertidos e úteis de realidade aumentada em selfies e imagens. Nossa câmera usa tecnologia para localizar certos recursos (como onde estão suas mãos, olhos e nariz) e usa esta informação para posicionar corretamente o recurso na imagem detectada pela câmera. Qualquer informação coletada será apagada o mais rápido possível (geralmente logo depois que o aplicativo é fechado) e sempre antes de três dias.<br/><br/>Se você quiser concordar e continuar, toque abaixo.`,\n        legalPromptVariantGAdultOrChild: `Você é adulto ou criança?`,\n        legalPromptVariantGFindYourParent: `Localize seu pai/mãe ou representante legal.`,\n        legalPromptVariantGIAmGuardian: `Sou representante da criança`,\n        legalPromptVariantGCancel: `Cancelar`,\n        legalPromptVariantGAdult: `Adulto`,\n        legalPromptVariantGChild: `Criança`,\n    },\n\n    \"pt-PT\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Ao utilizares as Lentes, confirmas a leitura da <a href=\"${0}\" target=\"_blank\">Política de Privacidade</a> da Snap e aceitas as <a href=\"${0}\" target=\"_blank\">Condições de Serviço</a> da Snap. Algumas Lentes utilizam informações sobre a tua cara, mãos e voz para funcionarem. <a href=\"${0}\" target=\"_blank\">Obtém mais informações</a> e, se quiseres aceitar e continuar, toca abaixo.`\n        ),\n        legalPromptAccept: `Aceito`,\n        legalPromptReject: `Fechar`,\n        legalPromptTermsOfService: `Condições de Serviço`,\n        legalPromptVariantGMessage: `Esta funcionalidade utiliza informações relacionadas com caras, mãos e vozes detetadas pela câmara e o microfone para poder funcionar. Com esta funcionalidade, pode aplicar efeitos de realidade aumentada de forma divertida e útil a selfies e imagens. A nossa câmara recorre a tecnologia para localizar determinadas caraterísticas (como a localização das tuas mãos, dos olhos e do nariz) e utiliza essas informações para posicionar de forma precisa a caraterística na imagem captada pela câmara. Quaisquer informações recolhidas serão eliminadas logo que possível (normalmente pouco depois de a app ser fechada) e nunca após um máximo de três anos. <br/><br/>Se quiser aceitar e continuar, toque abaixo.`,\n        legalPromptVariantGAdultOrChild: `És um adulto ou uma criança?`,\n        legalPromptVariantGFindYourParent: `Recorre ao teus pais ou ao(à) teu(tua) representante legal`,\n        legalPromptVariantGIAmGuardian: `Sou o(a) representante da criança`,\n        legalPromptVariantGCancel: `Cancelar`,\n        legalPromptVariantGAdult: `Adulto`,\n        legalPromptVariantGChild: `Criança`,\n    },\n\n    \"ro-RO\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Dacă folosești lentile, confirmi că ai citit <a href=\"${0}\" target=\"_blank\">Politica de confidențialitate</a> Snap și că ești de acord cu <a href=\"${0}\" target=\"_blank\">Condițiile de utilizare</a> Snap. Unele lentile folosesc informații despre fața ta, despre mâinile tale și despre vocea ta pentru a funcționa. <a href=\"${0}\" target=\"_blank\">Află mai multe</a>, iar dacă dorești să accepți și să continui, atinge dedesubt.`\n        ),\n        legalPromptAccept: `Accept`,\n        legalPromptReject: `Respinge`,\n        legalPromptTermsOfService: `Termeni de utilizare`,\n        legalPromptVariantGMessage: `Pentru a rula, funcția utilizează informații despre chipul tău, mâinile tale și vocea ta detectate de cameră și microfon. Cu ajutorul acestei funcții, poți să aplici efecte de realitate augumentată amuzante și utile peste selfie-uri și imagini. Camera noastră folosește tehnologia pentru a găsi anumite caracteristici (de exemplu, unde se află mâinile, ochii și nasul tău) și utilizează aceste informații pentru a poziționa corect funcția în imaginea detectată de cameră. Toate informațiile colectate sunt șterse cât mai curând posibil (de obicei, la scurt timp după ce se închide aplicația), limita maximă fiind de trei ani.<br/><br/>Dacă ești de acord și dorești să continui, atinge mai jos.`,\n        legalPromptVariantGAdultOrChild: `Ești adult sau copil?`,\n        legalPromptVariantGFindYourParent: `Este necesară prezența părintelui sau a tutorelui.`,\n        legalPromptVariantGIAmGuardian: `Sunt tutorele copilului`,\n        legalPromptVariantGCancel: `Anulează`,\n        legalPromptVariantGAdult: `Adult`,\n        legalPromptVariantGChild: `Copil`,\n    },\n\n    \"ru-RU\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Используя линзы, вы подтверждаете, что прочитали <a href=\"${0}\" target=\"_blank\">Политику конфиденциальности</a> Snap и принимаете <a href=\"${0}\" target=\"_blank\">Условия оказания услуг</a>. Для работы некоторых линз необходимы сведения о вашем лице, руках и голосе. <a href=\"${0}\" target=\"_blank\">Подробнее</a>. Если вы согласны продолжать, нажмите ниже.`\n        ),\n        legalPromptAccept: `Принимаю`,\n        legalPromptReject: `Закрыть`,\n        legalPromptTermsOfService: `Условия оказания услуг`,\n        legalPromptVariantGMessage: `Для работы этой функции используется регистрируемая камерой и микрофоном информация о лицах, руках и голосах. С её помощью к селфи и изображениям можно применять забавные и полезные эффекты дополненной реальности. Наша камера использует технологию, чтобы определять расположение конкретных элементов (например, ваших рук, глаз и носа), и использует эту информацию для точного наложения функции на изображение, которое уловила камера. Вся полученная информация удаляется в кратчайшие сроки (как правило, вскоре после закрытия приложения), но не позднее, чем через три года.<br/><br/>Если вы согласны и хотите продолжить, нажмите ниже.`,\n        legalPromptVariantGAdultOrChild: `Вы ― взрослый или ребёнок?`,\n        legalPromptVariantGFindYourParent: `Позовите родителя или законного опекуна.`,\n        legalPromptVariantGIAmGuardian: `Я ― законный опекун ребёнка`,\n        legalPromptVariantGCancel: `Отмена`,\n        legalPromptVariantGAdult: `Взрослый`,\n        legalPromptVariantGChild: `Ребёнок`,\n    },\n\n    \"sv-SE\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Genom att använda linser intygar du att du har läst Snaps <a href=\"${0}\" target=\"_blank\">sekretessvillkor</a> och godkänner Snaps <a href=\"${0}\" target=\"_blank\">användarvillkor</a>. Vissa linser använder information om ditt ansikte, dina händer och din röst för att fungera. <a href=\"${0}\" target=\"_blank\">Läs mer</a> och om du vill godkänna och fortsätta så trycker du nedan.`\n        ),\n        legalPromptAccept: `Jag godkänner`,\n        legalPromptReject: `Avvisa`,\n        legalPromptTermsOfService: `Användarvillkor`,\n        legalPromptVariantGMessage: `För att fungera använder funktionen information om ansikte(n), händer och röst(er) som upptäckts av kameran och mikrofonen. Funktionen gör att du kan tillämpa roliga och användbara AR-effekter över selfies och bilder. Med hjälp av teknik kan vår kamera lokalisera vissa särdrag (som dina händer, ögon och din näsa). Informationen används sedan för att korrekt positionera funktionen över bilden som kameran fångat upp. All information som samlats in raderas så snart som möjligt (vanligtvis inom kort efter att appen stängts) och alltid inom tre år.<br/><br/>Tryck nedan om du vill godkänna och fortsätta.`,\n        legalPromptVariantGAdultOrChild: `Är du vuxen eller ett barn?`,\n        legalPromptVariantGFindYourParent: `Leta upp din förälder eller vårdnadshavare`,\n        legalPromptVariantGIAmGuardian: `Jag är barnets vårdnadshavare`,\n        legalPromptVariantGCancel: `Avbryt`,\n        legalPromptVariantGAdult: `Vuxen`,\n        legalPromptVariantGChild: `Barn`,\n    },\n\n    \"ta-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`லென்ஸஸைப் பயன்படுத்துவதன் மூலம், நீங்கள் Snap இன் <a href=\"${0}\" target=\"_blank\">தனியுரிமைக் கொள்கையைப்</a> படித்துவிட்டதாக ஒப்புக்கொள்கிறீர்கள் மற்றும் Snap இன் <a href=\"${0}\" target=\"_blank\">சேவை நிபந்தனைகளை</a> ஏற்றுக்கொள்கிறீர்கள். சில லென்ஸஸ் வேலை செய்வதற்கு உங்கள் முகம், கைகள் மற்றும் குரலைப் பற்றிய தகவல்களைப் பயன்படுத்துகின்றன. <a href=\"${0}\" target=\"_blank\">மேலும் அறிக</a>, நீங்கள் ஒப்புக்கொண்டு தொடர விரும்பினால், கீழே தட்டுங்கள்.`\n        ),\n        legalPromptAccept: `ஏற்கிறேன்`,\n        legalPromptReject: `நிராகரி`,\n        legalPromptTermsOfService: `சேவை நிபந்தனைகள்`,\n        legalPromptVariantGMessage: `இந்த அம்சம் வேலை செய்ய கேமரா மற்றும் மைக்ரோஃபோனால் கண்டறியப்படும் முகம் (முகங்கள்), கைகள் மற்றும் குரல்(கள்) பற்றிய தகவல்களைப் பயன்படுத்துகிறது. இந்த அம்சத்தின் மூலம் நீங்கள் செல்ஃபிக்கள் மற்றும் படங்களில் வேடிக்கையான மற்றும் பயனுள்ள இணைப்பு நிஜமாக்கத்தைப் பயன்படுத்தலாம். எங்கள் கேமரா சில அம்சங்களைக் கண்டறிய (எடுத்துக்காட்டாக, உங்கள் கைகள், கண்கள், மூக்கு போன்றவை எங்கு உள்ளன என்று கண்டறிய) தொழில்நுட்பத்தைப் பயன்படுத்துகிறது, கேமராவால் கண்காணிக்கப்படும் படத்தில் அம்சத்தைத் துல்லியமாக வைக்க அந்தத் தகவல்களைப் பயன்படுத்துகிறது. திரட்டப்படும் எந்தத் தகவலும் இயன்றவரை விரைவாக நீக்கப்படும் (பொதுவாக, செயலி மூடப்பட்டவுடன்). மேலும், இது எப்போதும் மூன்று ஆண்டுகளுக்கு மேல் சேமிக்கப்படுவதில்லை.<br/><br/>நீங்கள் ஏற்றுக்கொண்டு தொடர விரும்பினால், கீழே தட்டுங்கள்.`,\n        legalPromptVariantGAdultOrChild: `நீங்கள் வயதுவந்தவரா அல்லது சிறுவரா?`,\n        legalPromptVariantGFindYourParent: `உங்கள் பெற்றோர் அல்லது சட்டப்பூர்வப் பாதுகாவலரைக் கண்டறியுங்கள்.`,\n        legalPromptVariantGIAmGuardian: `நான் குழந்தையின் பாதுகாவலர்`,\n        legalPromptVariantGCancel: `ரத்துசெய்`,\n        legalPromptVariantGAdult: `வயதுவந்தவர்`,\n        legalPromptVariantGChild: `சிறுவர்`,\n    },\n\n    \"te-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`లెన్సెస్‌ను ఉపయోగించడం ద్వారా, మీరు Snap యొక్క <a href=\"${0}\" target=\"_blank\">గోప్యతా విధానాన్ని</a> చదివినట్లు అంగీకరిస్తున్నారు మరియు Snap <a href=\"${0}\" target=\"_blank\">సేవా నిబంధనలకు</a> అంగీకరిస్తున్నారు. కొన్ని లెన్సెస్ పని చేయడానికి మీ ముఖం, చేతులు మరియు వాయిస్ గురించిన సమాచారాన్ని ఉపయోగిస్తాయి. <a href=\"${0}\" target=\"_blank\">మరింత తెలుసుకోండి</a>, మీరు అంగీకరించి కొనసాగించాలనుకుంటే, దిగువన ట్యాప్ చేయండి.`\n        ),\n        legalPromptAccept: `నేను అంగీకరిస్తున్నాను`,\n        legalPromptReject: `డిస్మిస్ చేయండి`,\n        legalPromptTermsOfService: `సేవా నిబంధనలు`,\n        legalPromptVariantGMessage: `ఈ ఫీచర్ పని చేయడానికి కెమెరా మరియు మైక్రోఫోన్ ద్వారా గుర్తించబడిన ముఖం(లు), చేతులు మరియు వాయిస్(ల) గురించిన సమాచారాన్ని ఉపయోగిస్తుంది. ఈ ఫీచర్‌తో, మీరు సెల్ఫీలు, చిత్రాల పైన ఆహ్లాదకరమైన మరియు ఉపయోగకరమైన ఆగ్మెంటేడ్ రియాలిటీ ప్రభావాలను వర్తింపజేసుకోవచ్చు. మా కెమెరా నిర్దిష్ట ఫీచర్‌లను (మీ చేతులు, కళ్ళు మరియు ముక్కు ఎక్కడ ఉన్నాయో) గుర్తించడానికి సాంకేతికతను ఉపయోగిస్తుంది మరియు కెమెరా ద్వారా గ్రహించబడిన చిత్రంతో ఫీచర్‌ను ఖచ్చితంగా ఉంచడానికి ఆ సమాచారాన్ని ఉపయోగిస్తుంది. సేకరించిన ఏదైనా సమాచారం వీలైనంత త్వరగా (సాధారణంగా యాప్ మూసివేయబడిన వెంటనే) మరియు ఎల్లప్పుడూ మూడు సంవత్సరాలలోపు డిలీట్ చేయబడుతుంది.<br/><br/>మీరు అంగీకరించి కొనసాగించాలనుకుంటే, దిగువున ట్యాప్ చేయండి.`,\n        legalPromptVariantGAdultOrChild: `మీరు పెద్దవారా లేదా చిన్నవారా?`,\n        legalPromptVariantGFindYourParent: `దయచేసి మీ తల్లిదండ్రులు లేదా చట్టపరమైన సంరక్షకుడిని కనుగొనండి.`,\n        legalPromptVariantGIAmGuardian: `నేను పిల్లవాడి సంరక్షకుడిని`,\n        legalPromptVariantGCancel: `రద్దు`,\n        legalPromptVariantGAdult: `వయోజనుడు`,\n        legalPromptVariantGChild: `పిల్లవాడు`,\n    },\n\n    \"th-TH\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`การใช้เลนส์แสดงว่าคุณยอมรับว่าคุณได้อ่าน <a href=\"${0}\" target=\"_blank\">นโยบายความเป็นส่วนตัว</a> ของ Snap และตกลงยอมรับ <a href=\"${0}\" target=\"_blank\">ข้อกำหนดการให้บริการ</a> ของ Snap เลนส์บางรายการต้องใช้ข้อมูลเกี่ยวกับใบหน้า มือ และเสียงของคุณจึงจะสามารถทำงานได้ <a href=\"${0}\" target=\"_blank\">เรียนรู้เพิ่มเติม</a> และหากคุณต้องการตกลงยอมรับและดำเนินการต่อ ให้แตะที่ด้านล่าง`\n        ),\n        legalPromptAccept: `ฉันตกลงยอมรับ`,\n        legalPromptReject: `เพิกเฉย`,\n        legalPromptTermsOfService: `ข้อกำหนดการให้บริการ`,\n        legalPromptVariantGMessage: `ฟีเจอร์นี้ใช้ข้อมูลเกี่ยวกับใบหน้า มือ และเสียงซึ่งตรวจจับโดยใช้กล้องและไมโครโฟน เมื่อใช้ฟีเจอร์นี้ คุณสามารถใช้เอฟเฟกต์ความเป็นจริงเสริม (AR) ที่ทั้งสนุกและมีประโยชน์เมื่อใช้กับภาพเซลฟีและรูปภาพ กล้องของเราใช้เทคโนโลยีเพื่อระบุตำแหน่งของฟีเจอร์บางอย่าง (เช่น ตำแหน่งของมือ ตา และจมูกของคุณ) และใช้ข้อมูลดังกล่าวเพื่อให้วางตำแหน่งฟีเจอร์ได้อย่างถูกต้องลงบนรูปภาพที่ตรวจจับโดยใช้กล้อง เราจะลบข้อมูลต่าง ๆ ที่รวบรวมไว้โดยเร็วที่สุดเท่าที่จะทำได้ (ส่วนใหญ่จะเป็นช่วงหลังจากที่ปิดแอปแล้วไม่นาน) และจะไม่เกินกว่าระยะเวลาสามปี<br/><br/>หากคุณต้องการตกลงยอมรับและดำเนินการต่อ ให้แตะที่ด้านล่างนี้`,\n        legalPromptVariantGAdultOrChild: `คุณเป็นผู้ใหญ่หรือเด็ก?`,\n        legalPromptVariantGFindYourParent: `โปรดค้นหาพ่อแม่หรือผู้ปกครองตามกฎหมายของคุณ`,\n        legalPromptVariantGIAmGuardian: `ฉันเป็นผู้ปกครองของเด็ก`,\n        legalPromptVariantGCancel: `ยกเลิก`,\n        legalPromptVariantGAdult: `ผู้ใหญ่`,\n        legalPromptVariantGChild: `เด็ก`,\n    },\n\n    \"tr-TR\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Lensleri kullanarak, Snap\\'in <a href=\"${0}\" target=\"_blank\">Gizlilik Politikası</a> içeriğini okuduğunu doğrulamış ve Snap\\'in <a href=\"${0}\" target=\"_blank\">Kullanım Şartları</a> içeriğini kabul etmiş olursun. Bazı lenslerin çalışması için yüzün, ellerin ve sesinle ilgili bilgiler kullanılır. <a href=\"${0}\" target=\"_blank\">Daha Fazlasını Öğren</a> ve kabul edip devam etmek istiyorsan aşağıya dokun.`\n        ),\n        legalPromptAccept: `Kabul Ediyorum`,\n        legalPromptReject: `Yoksay`,\n        legalPromptTermsOfService: `Kullanım Şartları`,\n        legalPromptVariantGMessage: `Bu özelliğin çalışması için kamera ve mikrofon tarafından algılanan yüzler, eller ve sesler hakkındaki bilgiler kullanılır. Bu özellik sayesinde selfie\\'lerin ve görüntülerin üzerine eğlenceli ve kullanışlı artırılmış gerçeklik efektleri uygulayabilirsin. Kameramız, belirli özellikleri (ellerinin, gözlerinin ve burnunun nerede olduğu gibi) bulmak için teknolojiden yararlanır ve bu bilgileri, kamera tarafından algılanan görüntüyle özelliği doğru şekilde konumlandırmak için kullanır. Toplanan tüm bilgiler mümkün olan en kısa sürede (genellikle uygulama kapatıldıktan kısa süre sonra) ve mutlaka en fazla üç yıl içinde silinir.<br/><br/>Kabul edip devam etmek istiyorsan aşağıya dokun.`,\n        legalPromptVariantGAdultOrChild: `Yetişkin mi yoksa çocuk musun?`,\n        legalPromptVariantGFindYourParent: `Lütfen ebeveynini veya yasal vasini bul.`,\n        legalPromptVariantGIAmGuardian: `Ben çocuğun vasisiyim`,\n        legalPromptVariantGCancel: `İptal Et`,\n        legalPromptVariantGAdult: `Yetişkin`,\n        legalPromptVariantGChild: `Çocuk`,\n    },\n\n    \"ur-PK\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`لینزز استعمال کرنے کا مطلب ہے کہ آپ Snap کی <a href=\"${0}\" target=\"_blank\">پرائیویسی پالیسی</a> پڑھنے کا اعتراف کرتے ہیں اور Snap کی <a href=\"${0}\" target=\"_blank\">سروس کی شرائط</a> سے متفق ہیں۔ کچھ لینزز کام کرنے کیلئے آپ کے چہرے، ہاتھوں اور آواز کے بارے میں معلومات استعمال کرتے ہیں۔ <a href=\"${0}\" target=\"_blank\">مزید جانیں</a> اور اگر آپ متفق ہیں اور جاری رکھنا چاہتے ہیں تو ذیل میں ٹیپ کریں۔`\n        ),\n        legalPromptAccept: `میں متفق ہوں`,\n        legalPromptReject: `برخاست کریں`,\n        legalPromptTermsOfService: `سروس کی شرائط`,\n        legalPromptVariantGMessage: `یہ خصوصیت کام کرنے کیلئے چہرہ (چہرے)، ہاتھوں اور آوازوں کے بارے میں معلومات استعمال کرتی ہے جن کا پتا کیمرے اور مائیکرو فون کے ذریعے لگایا جاتا ہے۔ اس خصوصیت کے ساتھ، آپ سیلفیز اور تصاویر پر دلچسپ اور کارآمد افزودہ حقیقت کے ایفیکٹس کا اطلاق کر سکتے ہیں۔ ہمارا کیمرا مخصوص خصوصیات کے لوکیشن کا تعین کرنے (جیسے کہ آپ کے ہاتھ، آنکھیں اور ناک کہاں ہیں) کیلئے ٹیکنالوجی استعمال کرتا ہے اور ان معلومات کی مدد سے خصوصیت کو کیمرا کی جانب سے محسوس کی گئی تصویر کے ساتھ درست طور پر پوزیشن کرتا ہے۔ اکٹھی کی گئی کوئی بھی معلومات جلد از جلد ڈیلیٹ ہو جائیں گی (عموماً ایپ بند ہونے کے فوراً بعد) نیز ہر صورت میں تین سال کے اندر ڈیلیٹ ہو جائیں گی۔<br/><br/>اگر آپ اتفاق کرنا اور جاری رکھنا چاہتے ہیں تو ذیل میں ٹیپ کریں۔`,\n        legalPromptVariantGAdultOrChild: `کیا آپ ایک بالغ یا بچہ ہیں؟`,\n        legalPromptVariantGFindYourParent: `براہ کرم اپنے والد/والدہ یا قانونی سرپرست کو تلاش کریں۔`,\n        legalPromptVariantGIAmGuardian: `میں بچہ کا/کی سرپرست ہوں`,\n        legalPromptVariantGCancel: `منسوخ کریں`,\n        legalPromptVariantGAdult: `بالغ`,\n        legalPromptVariantGChild: `بچہ`,\n    },\n\n    \"vi-VN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Bằng cách sử dụng Ống Kính, bạn xác nhận đã đọc <a href=\"${0}\" target=\"_blank\">Chính Sách Bảo Mật</a> của Snap và đồng ý với <a href=\"${0}\" target=\"_blank\">Điều Khoản Dịch Vụ</a>của Snap. Một số ống kính sử dụng thông tin về khuôn mặt, bàn tay và giọng nói của bạn để hoạt động. Bạn có thể <a href=\"${0}\" target=\"_blank\">Tìm Hiểu Thêm</a>, còn nếu bạn muốn đồng ý và tiếp tục, hãy chạm vào bên dưới.`\n        ),\n        legalPromptAccept: `Tôi Đồng Ý`,\n        legalPromptReject: `Bỏ Qua`,\n        legalPromptTermsOfService: `Điều Khoản Dịch Vụ`,\n        legalPromptVariantGMessage: `Tính năng này hoạt động dựa trên việc sử dụng thông tin về khuôn mặt, bàn tay và giọng nói mà camera và micrô phát hiện được. Bạn có thể sử dụng tính năng này để áp dụng các hiệu ứng thực tế tăng cường thú vị và hữu ích lên ảnh tự sướng và hình ảnh. Camera của chúng tôi áp dụng công nghệ để tìm những đặc điểm nhất định (chẳng hạn như vị trí bàn tay, mắt và mũi của bạn), rồi sử dụng thông tin đó để xác định chính xác vị trí của đặc điểm trong hình ảnh mà camera chụp được. Chúng tôi sẽ xóa mọi thông tin được thu thập sớm nhất có thể (thường ngay sau khi bạn đóng ứng dụng) và luôn xóa trong khoảng thời gian không quá ba năm.<br/><br/>Nếu bạn muốn đồng ý và tiếp tục, hãy chạm vào bên dưới.`,\n        legalPromptVariantGAdultOrChild: `Bạn là người lớn hay trẻ em?`,\n        legalPromptVariantGFindYourParent: `Vui lòng tìm phụ huynh hoặc người giám hộ hợp pháp.`,\n        legalPromptVariantGIAmGuardian: `Tôi là người giám hộ của trẻ`,\n        legalPromptVariantGCancel: `Hủy Bỏ`,\n        legalPromptVariantGAdult: `Người lớn`,\n        legalPromptVariantGChild: `Trẻ em`,\n    },\n\n    \"zh-Hans\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`使用特效镜头，即表示你确认已经阅读 Snap 的<a href=\"${0}\" target=\"_blank\">隐私政策</a>，并同意 Snap 的<a href=\"${0}\" target=\"_blank\">服务条款</a>。一些特效镜头需要使用有关你的脸、手和声音的信息才能正常工作。<a href=\"${0}\" target=\"_blank\">了解更多</a>，如果你同意并继续，请点击下面。`\n        ),\n        legalPromptAccept: `我同意`,\n        legalPromptReject: `忽略`,\n        legalPromptTermsOfService: `服务条款`,\n        legalPromptVariantGMessage: `此功能会使用相机和麦克风检测到的面部、手部和声音信息。使用此功能，你可以对自拍照和图片应用有趣和有用的增强现实效果。我们的相机会使用技术，定位某些特征信息（例如：你的手、眼睛和鼻子的位置），并使用这些信息和相机感知到的图像来准确定位这些特征。收集的所有信息都将尽快删除（通常在应用关闭后不久），最久不会超过三年。<br/><br/>如果你同意并想继续，请点击下方。`,\n        legalPromptVariantGAdultOrChild: `你是成人还是儿童？`,\n        legalPromptVariantGFindYourParent: `请通知你的家长或法定监护人。`,\n        legalPromptVariantGIAmGuardian: `我是这名儿童的监护人`,\n        legalPromptVariantGCancel: `取消`,\n        legalPromptVariantGAdult: `成人`,\n        legalPromptVariantGChild: `儿童`,\n    },\n\n    \"zh-Hant\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`使用特效鏡頭，代表你已閱讀 Snap 的<a href=\"${0}\" target=\"_blank\">隱私政策</a>並同意 Snap 的<a href=\"${0}\" target=\"_blank\">服務條款</a>。有些特效鏡頭需使用你的臉部、手部和聲音資訊才能運作。<a href=\"${0}\" target=\"_blank\">請按這裡以了解更多資訊</a>，如果你同意並想繼續使用功能，請點按下方。`\n        ),\n        legalPromptAccept: `我同意`,\n        legalPromptReject: `略過`,\n        legalPromptTermsOfService: `服務條款`,\n        legalPromptVariantGMessage: `這個功能會使用相機和麥克風偵測到的臉部、手部和聲音資訊來進行運作。使用這個功能，你可以針對自拍照和圖片套用好玩和有作用的擴增實境效果。我們的相機會使用科技技術，定位某些特徵資訊 (例如：你的手、眼睛和鼻子的位置)，並使用這些資訊和相機感應到的影像來正確地定位這些特徵。所收集的資訊將盡快刪除 (通常會在應用程式關閉後)，最久不會超過三年。<br/><br/>如果你同意並想繼續使用此功能，請點按下方。`,\n        legalPromptVariantGAdultOrChild: `你是成人或兒童？`,\n        legalPromptVariantGFindYourParent: `請通知你的父母或法定監護人。`,\n        legalPromptVariantGIAmGuardian: `我是這個兒童的監護人`,\n        legalPromptVariantGCancel: `取消`,\n        legalPromptVariantGAdult: `成人`,\n        legalPromptVariantGChild: `兒童`,\n    },\n} satisfies Record<string, LocalizableStrings>;\n\n/**\n * --- end of string definitions ---\n */\n\n/**\n * Language codes with a mapping to a corresponding default locale.\n */\nconst languageDefaultLocale: Record<string, Locale | undefined> = {\n    bn: \"bn-BD\",\n    da: \"da-DK\",\n    de: \"de-DE\",\n    el: \"el-GR\",\n    en: \"en-US\",\n    es: \"es-ES\",\n    fi: \"fi-FI\",\n    fil: \"fil-PH\",\n    fr: \"fr-FR\",\n    gu: \"gu-IN\",\n    hi: \"hi-IN\",\n    id: \"id-ID\",\n    it: \"it-IT\",\n    ja: \"ja-JP\",\n    kn: \"kn-IN\",\n    ko: \"ko-KR\",\n    ml: \"ml-IN\",\n    mr: \"mr-IN\",\n    ms: \"ms-MY\",\n    nb: \"nb-NO\",\n    nl: \"nl-NL\",\n    pl: \"pl-PL\",\n    pt: \"pt-BR\",\n    ro: \"ro-RO\",\n    ru: \"ru-RU\",\n    sv: \"sv-SE\",\n    ta: \"ta-IN\",\n    te: \"te-IN\",\n    th: \"th-TH\",\n    tr: \"tr-TR\",\n    ur: \"ur-PK\",\n    vi: \"vi-VN\",\n    zh: \"zh-Hans\",\n};\n\n/**\n * Some locale synonyms that require mapping.\n */\nconst synonyms: Record<string, Locale | undefined> = {\n    \"zh-TW\": \"zh-Hant\",\n    \"zh-CN\": \"zh-Hans\",\n};\n\ntype Locale = keyof typeof allStrings;\nconst isLocaleString = (value: string): value is Locale => value in allStrings;\n\n// Default locale in case a user locale cannot be found.\nconst defaultLocale = \"en-US\" satisfies Locale;\n\n/**\n * Gets browser locale and maps it to the closest locale that has a translation.\n */\nfunction getSupportedLocale() {\n    const locale = getPlatformInfo().locale;\n    if (isLocaleString(locale)) return locale;\n\n    const synonym = synonyms[locale];\n    if (synonym && synonym in allStrings) return synonym;\n\n    const langCode = locale.split(\"-\")[0];\n    // Safety: \"in\" operator ensures that langCode is in allStrings, i.e. is of Locale type.\n    if (langCode && langCode in allStrings) return langCode as Locale;\n    // Safety: \"in\" operator ensures that langCode is in languageDefaultLocale.\n    if (langCode && langCode in languageDefaultLocale) return languageDefaultLocale[langCode]!;\n\n    return defaultLocale;\n}\n\n/**\n * The most closest locale with a translation.\n */\nexport const supportedLocale = getSupportedLocale();\n\n/**\n * Returns localized string by its ID.\n */\nexport function localizedString<ID extends keyof LocalizableStrings>(stringId: ID): LocalizableStrings[ID] {\n    return allStrings[supportedLocale][stringId];\n}\n", "import { fromEvent, map, merge, take } from \"rxjs\";\n\n/**\n * Dialog options.\n */\ninterface DialogOptions<Keys extends string> {\n    /**\n     * Element to attach the dialgo to.\n     */\n    container: HTMLElement;\n    /**\n     * Body content string. Can be HTML string.\n     */\n    body?: string;\n    /**\n     * Title string to render. Can be HTML string.\n     */\n    title?: string;\n    /**\n     * Accessible dialog title text,\n     * especially useful for voice-over features when the title field is an image.\n     */\n    titleText?: string;\n    /**\n     * \"data-testid\" attribute for testing purposes.\n     */\n    dataTestId?: string;\n    /**\n     * Use the lang field to set \"lang\" attribute on the dialog if that should be different from the parent page.\n     */\n    lang?: string;\n    /**\n     * Accessbile text of dismiss (X) button,\n     * especially useful for voice-over features when the title field is an image.\n     */\n    dismissButtonText?: string;\n    /**\n     * Buttons to display at the bottom of the dialog.\n     */\n    buttons?: DialogButton<Keys>[];\n}\n\n/**\n * Dialog button.\n */\ninterface DialogButton<Key extends string> {\n    /**\n     * Button text.\n     */\n    text: string;\n    /**\n     * Value returned by the {@link showDialog} function after the button is clicked.\n     */\n    key: Key;\n    /**\n     * Whether to apply \"secondary\" styles on the button.\n     */\n    isSecondary?: boolean;\n}\n\ntype DismissKey = \"dismiss\";\n\nconst stylesCss = `\ndialog {\n    display: flex;\n    flex-direction: column;\n\n    background-color: #fff;\n    border: #efefef 1px solid;\n    border-radius: 20px;\n    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.3);\n\n    max-width: 80vw;\n    max-height: 80vh;\n    padding: 44px 0 24px 0;\n\n    font-size: 16px;\n    font-family: sans-serif;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px;\n}\n\ndialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.4);\n}\n\n.title {\n    color: #16191C;\n    padding: 0 32px;\n    text-align: center;\n}\n\n.body {\n    color: #656D78;\n    font-size: 14px;\n    font-weight: 500;\n    margin-top: 16px;\n    max-width: 350px;\n    padding: 0 32px;\n    overflow: auto;\n}\n\na {\n    color: rgb(78, 171, 248);\n}\n\nbutton {\n    cursor: pointer;\n}\n\nbutton.dismiss {\n    position: absolute;\n    top: 7px;\n    right: 7px;\n    padding: 0;\n    height: 36px;\n    width: 36px;\n    margin: 0;\n    background-color: transparent;\n    border: 0;\n}\n\nbutton.dismiss svg {\n    fill: black;\n}\n\n.buttons {\n    margin-top: 8px;\n    padding: 0 32px;\n}\n\n.buttons button {\n    background: #0FADFF;\n    border: 0;\n    border-radius: 25px;\n\n    width: 100%;\n    padding: 1rem;\n    margin-top: 8px;\n\n    color: #fff;\n    font-weight: inherit;\n    font-family: inherit;\n    font-size: inherit;\n    font-style: inherit;\n}\n\n.buttons button.secondary {\n    background-color: transparent;\n    color: #656D78;\n}\n\n// Proper filling of X button in High Contrast themes\n@media (forced-colors: active) {\n    button.dismiss svg {\n        fill: ButtonText;\n    }\n}\n`;\n\nfunction getDismissButtonHtml(button: DialogButton<DismissKey>) {\n    /* eslint-disable max-len */\n    return `\n        <button class=\"dismiss\" autofocus data-key=${button.key}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\n                <title>${button.text}</title>\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.6763 11.2621C12.2858 10.8716 11.6527 10.8716 11.2621 11.2621C10.8716 11.6527 10.8716 12.2858 11.2621 12.6763L16.5858 18L11.2621 23.3237C10.8716 23.7142 10.8716 24.3474 11.2621 24.7379C11.6527 25.1284 12.2858 25.1284 12.6764 24.7379L18 19.4142L23.3237 24.7379C23.7142 25.1284 24.3474 25.1284 24.7379 24.7379C25.1284 24.3474 25.1284 23.7142 24.7379 23.3237L19.4142 18L24.7379 12.6763C25.1284 12.2858 25.1284 11.6527 24.7379 11.2621C24.3474 10.8716 23.7142 10.8716 23.3237 11.2621L18 16.5858L12.6763 11.2621Z\" fill-opacity=\"0.4\"/>\n            </svg>\n        </button>`;\n    /* eslint-enable */\n}\n\nfunction getTitleHtml(title: string | undefined) {\n    return title ? `<div class=\"title\" role=\"heading\">${title}</div>` : \"\";\n}\n\nfunction getBodyHtml(body: string | undefined) {\n    return body ? `<div class=\"body\">${body}</div>` : \"\";\n}\n\nfunction getButtonHtml<Key extends string>(button: DialogButton<Key>) {\n    return `<button data-key=\"${button.key}\"${button.isSecondary ? ` class=\"secondary\"` : \"\"}>${button.text}</button>`;\n}\n\nfunction getButtonsHtml<Key extends string>(buttons: DialogButton<Key>[]) {\n    if (buttons.length === 0) return \"\";\n    return `\n        <div class=\"buttons\">\n        ${buttons.map((b) => getButtonHtml(b)).join(\"\\n\")}\n        </div>`;\n}\n\nfunction setAttribute(element: HTMLElement, attr: string, value: string | undefined) {\n    if (value) element.setAttribute(attr, value);\n}\n\nexport function showDialog<Keys extends string>(options: DialogOptions<Keys>): Promise<Keys | DismissKey> {\n    return new Promise((res) => {\n        const element = document.createElement(\"div\");\n        setAttribute(element, \"data-testid\", options.dataTestId);\n        const shadow = element.attachShadow({ mode: \"open\" });\n\n        const style = document.createElement(\"style\");\n        shadow.appendChild(style);\n        style.innerHTML = stylesCss;\n\n        const prompt = document.createElement(\"dialog\");\n        setAttribute(prompt, \"aria-label\", options.titleText ?? options.title);\n        setAttribute(prompt, \"lang\", options.lang);\n        setAttribute(prompt, \"dir\", \"auto\");\n        shadow.appendChild(prompt);\n\n        prompt.innerHTML = `\n            ${getDismissButtonHtml({ key: \"dismiss\", text: options.dismissButtonText ?? \"Dismiss\" })}\n            ${getTitleHtml(options.title)}\n            ${getBodyHtml(options.body)}\n            ${getButtonsHtml(options.buttons ?? [])}\n        `;\n\n        const buttonsElements = Array.from(prompt.querySelectorAll(\"button\"));\n        merge(\n            ...buttonsElements.map((b) => fromEvent(b, \"click\").pipe(map(() => b.dataset.key as Keys))),\n            fromEvent(prompt, \"cancel\").pipe(map(() => \"dismiss\" as const))\n        )\n            .pipe(take(1))\n            .subscribe({ next: res, complete: () => element.remove() });\n        options.container.appendChild(element);\n        prompt.showModal();\n    });\n}\n", "/**\n * Fast, simple hashing function from github.com/bryc\n * https://github.com/bryc/code/blob/master/jshash/experimental/cyrb53.js\n */\nexport const computeHash = (str: string): string => {\n    let h1 = 0xdeadbeef;\n    let h2 = 0x41c6ce57;\n    for (let i = 0; i < str.length; i++) {\n        const ch = str.charCodeAt(i);\n        h1 = Math.imul(h1 ^ ch, 2654435761);\n        h2 = Math.imul(h2 ^ ch, 1597334677);\n    }\n    h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n    h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n    return (4294967296 * (2097151 & h2) + (h1 >>> 0)).toString(16);\n};\n", "import { Injectable } from \"../dependency-injection/Injectable\";\nimport { LegalDocument, LegalDocument_Type } from \"../generated-proto/pb_schema/camera_kit/v3/legal_prompt\";\nimport { supportedLocale, localizedString } from \"../common/localization\";\nimport { showDialog } from \"../common/dialog\";\nimport { assertUnreachable } from \"../common/assertions\";\nimport { computeHash } from \"../common/hash\";\n\n/* eslint-disable max-len */\nconst snapIcon = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 32 32\" height=\"48px\">\n    <g>\n        <path\n            d=\"M 30.898 23.477 C 30.77 23.045 30.148 22.743 30.148 22.743 C 30.092 22.71 30.039 22.684 29.994 22.663 C 28.962 22.161 28.048 21.561 27.277 20.876 C 26.659 20.325 26.128 19.719 25.701 19.074 C 25.182 18.288 24.937 17.632 24.831 17.275 C 24.773 17.043 24.782 16.951 24.831 16.832 C 24.873 16.731 24.99 16.632 25.049 16.588 C 25.397 16.341 25.96 15.976 26.303 15.75 C 26.602 15.556 26.859 15.389 27.009 15.283 C 27.494 14.944 27.824 14.596 28.02 14.223 C 28.275 13.74 28.303 13.208 28.107 12.684 C 27.84 11.978 27.184 11.556 26.35 11.556 C 26.163 11.556 25.974 11.577 25.785 11.62 C 25.308 11.723 24.852 11.894 24.474 12.042 C 24.446 12.054 24.416 12.032 24.418 12.002 C 24.457 11.059 24.502 9.79 24.399 8.584 C 24.306 7.493 24.082 6.576 23.717 5.776 C 23.351 4.972 22.874 4.376 22.5 3.947 C 22.143 3.536 21.519 2.936 20.577 2.394 C 19.251 1.631 17.742 1.244 16.09 1.244 C 14.443 1.244 12.934 1.631 11.605 2.394 C 10.607 2.966 9.97 3.614 9.678 3.947 C 9.304 4.376 8.827 4.972 8.46 5.776 C 8.096 6.576 7.872 7.496 7.778 8.584 C 7.673 9.792 7.715 10.96 7.76 11.999 C 7.762 12.03 7.732 12.051 7.704 12.039 C 7.325 11.892 6.87 11.72 6.393 11.617 C 6.204 11.575 6.012 11.554 5.828 11.554 C 4.994 11.554 4.337 11.976 4.071 12.682 C 3.875 13.205 3.903 13.738 4.157 14.221 C 4.354 14.594 4.685 14.941 5.169 15.281 C 5.318 15.387 5.575 15.553 5.874 15.748 C 6.211 15.968 6.758 16.323 7.108 16.569 C 7.152 16.599 7.299 16.712 7.346 16.827 C 7.397 16.951 7.404 17.045 7.341 17.289 C 7.234 17.648 6.989 18.298 6.479 19.069 C 6.052 19.715 5.522 20.32 4.902 20.871 C 4.132 21.556 3.218 22.157 2.186 22.658 C 2.137 22.682 2.078 22.712 2.015 22.748 C 2.015 22.748 1.399 23.064 1.282 23.472 C 1.109 24.075 1.567 24.64 2.036 24.943 C 2.8 25.438 3.732 25.703 4.272 25.849 C 4.421 25.889 4.559 25.926 4.683 25.964 C 4.76 25.989 4.956 26.062 5.038 26.17 C 5.143 26.306 5.155 26.473 5.192 26.66 C 5.253 26.977 5.384 27.373 5.774 27.643 C 6.204 27.941 6.75 27.962 7.444 27.99 C 8.168 28.018 9.07 28.054 10.1 28.394 C 10.579 28.553 11.011 28.818 11.514 29.128 C 12.56 29.773 13.864 30.578 16.09 30.578 C 18.318 30.578 19.629 29.768 20.685 29.119 C 21.183 28.811 21.612 28.546 22.08 28.391 C 23.11 28.049 24.011 28.014 24.735 27.988 C 25.427 27.962 25.974 27.941 26.404 27.641 C 26.822 27.35 26.943 26.918 26.997 26.59 C 27.027 26.428 27.046 26.285 27.14 26.165 C 27.219 26.064 27.399 25.992 27.483 25.964 C 27.609 25.924 27.751 25.886 27.906 25.844 C 28.445 25.698 29.123 25.527 29.945 25.061 C 30.933 24.511 31.001 23.82 30.898 23.477\"\n            fill=\"#ffffff\"\n            stroke=\"#00000000\"\n            stroke-width=\"1\"\n        />\n    </g>\n    <g>\n        <path\n            d=\"M 29.56 24.299 C 28.21 25.045 27.312 24.965 26.613 25.414 C 26.021 25.795 26.37 26.618 25.939 26.915 C 25.411 27.279 23.843 26.889 21.822 27.555 C 20.155 28.107 19.09 29.689 16.089 29.689 C 13.081 29.689 12.047 28.114 10.357 27.555 C 8.335 26.889 6.768 27.279 6.24 26.915 C 5.809 26.618 6.16 25.795 5.566 25.414 C 4.869 24.965 3.969 25.045 2.619 24.299 C 1.758 23.825 2.247 23.53 2.532 23.393 C 7.426 21.027 8.204 17.372 8.24 17.096 C 8.282 16.769 8.328 16.509 7.966 16.175 C 7.615 15.853 6.066 14.895 5.636 14.593 C 4.925 14.098 4.612 13.6 4.841 12.99 C 5 12.569 5.395 12.41 5.812 12.41 C 5.94 12.41 6.071 12.426 6.2 12.452 C 6.981 12.623 7.741 13.013 8.179 13.118 C 8.24 13.132 8.293 13.139 8.34 13.139 C 8.574 13.139 8.656 13.022 8.639 12.754 C 8.59 11.9 8.469 10.234 8.602 8.677 C 8.787 6.536 9.477 5.476 10.298 4.538 C 10.693 4.087 12.543 2.133 16.082 2.133 C 19.633 2.133 21.474 4.087 21.867 4.538 C 22.688 5.478 23.378 6.536 23.563 8.677 C 23.698 10.234 23.581 11.898 23.525 12.754 C 23.506 13.034 23.591 13.139 23.825 13.139 C 23.872 13.139 23.925 13.132 23.986 13.118 C 24.426 13.013 25.184 12.62 25.965 12.452 C 26.091 12.424 26.222 12.41 26.353 12.41 C 26.77 12.41 27.165 12.569 27.324 12.99 C 27.555 13.6 27.242 14.095 26.529 14.593 C 26.098 14.892 24.547 15.85 24.199 16.175 C 23.836 16.509 23.883 16.767 23.925 17.096 C 23.96 17.372 24.739 21.025 29.633 23.393 C 29.932 23.53 30.421 23.825 29.56 24.299 M 31.709 23.12 C 31.489 22.523 31.07 22.203 30.594 21.939 C 30.505 21.887 30.423 21.845 30.355 21.812 C 30.212 21.74 30.067 21.667 29.922 21.592 C 28.435 20.806 27.275 19.812 26.469 18.635 C 26.198 18.238 26.008 17.88 25.877 17.587 C 25.809 17.391 25.811 17.281 25.86 17.178 C 25.898 17.101 25.996 17.019 26.05 16.979 C 26.305 16.811 26.57 16.64 26.748 16.525 C 27.067 16.319 27.317 16.156 27.481 16.043 C 28.093 15.617 28.519 15.164 28.786 14.658 C 29.163 13.945 29.21 13.131 28.919 12.363 C 28.517 11.301 27.509 10.642 26.291 10.642 C 26.038 10.642 25.783 10.67 25.527 10.726 C 25.46 10.74 25.394 10.756 25.328 10.773 C 25.34 10.05 25.324 9.278 25.258 8.524 C 25.029 5.872 24.099 4.48 23.129 3.371 C 22.724 2.908 22.021 2.232 20.964 1.628 C 19.491 0.781 17.821 0.356 16 0.356 C 14.185 0.356 12.518 0.781 11.044 1.623 C 9.983 2.229 9.278 2.905 8.875 3.366 C 7.905 4.475 6.975 5.867 6.746 8.52 C 6.68 9.273 6.663 10.045 6.675 10.768 C 6.61 10.752 6.544 10.735 6.476 10.721 C 6.221 10.665 5.965 10.637 5.713 10.637 C 4.494 10.637 3.487 11.297 3.084 12.359 C 2.794 13.126 2.841 13.94 3.218 14.654 C 3.485 15.159 3.911 15.613 4.522 16.039 C 4.686 16.153 4.937 16.314 5.256 16.52 C 5.427 16.633 5.68 16.794 5.926 16.958 C 5.963 16.984 6.097 17.082 6.141 17.173 C 6.193 17.279 6.195 17.393 6.118 17.604 C 5.987 17.891 5.801 18.242 5.535 18.631 C 4.747 19.782 3.62 20.757 2.18 21.536 C 1.419 21.941 0.54 22.355 0.29 23.118 C 0.039 23.88 0.203 24.582 0.842 25.239 C 1.053 25.466 1.318 25.665 1.653 25.85 C 2.438 26.283 3.105 26.496 3.63 26.641 C 3.721 26.669 3.937 26.736 4.031 26.819 C 4.265 27.022 4.23 27.331 4.543 27.78 C 4.731 28.061 4.949 28.25 5.129 28.374 C 5.783 28.826 6.516 28.854 7.294 28.881 C 7.997 28.908 8.793 28.94 9.702 29.24 C 10.079 29.364 10.47 29.605 10.922 29.883 C 12.011 30.552 13.501 31.467 15.998 31.467 C 18.493 31.467 19.995 30.547 21.091 29.876 C 21.541 29.6 21.93 29.361 22.297 29.242 C 23.206 28.942 24.003 28.912 24.706 28.884 C 25.483 28.854 26.216 28.826 26.87 28.377 C 27.076 28.234 27.331 28.004 27.535 27.651 C 27.76 27.272 27.753 27.003 27.964 26.821 C 28.05 26.746 28.238 26.68 28.338 26.65 C 28.868 26.505 29.545 26.292 30.344 25.852 C 30.697 25.658 30.976 25.443 31.192 25.2 C 31.194 25.197 31.196 25.192 31.199 25.19 C 31.805 24.544 31.955 23.787 31.709 23.12\"\n            fill=\"#000000\"\n            stroke=\"#00000000\"\n            stroke-width=\"1\"\n        />\n    </g>\n</svg>`;\n/* eslint-enable */\n\nasync function showTosDialog(title: string, titleText: string, body: string) {\n    const result = await showDialog({\n        container: document.body,\n        dataTestId: \"tos-dialog\",\n        lang: supportedLocale,\n        title,\n        titleText,\n        body,\n        dismissButtonText: localizedString(\"legalPromptReject\"),\n        buttons: [\n            {\n                text: localizedString(\"legalPromptAccept\"),\n                key: \"accept\",\n            },\n        ],\n    });\n    return result === \"accept\";\n}\n\nfunction showAdultOrChildDialog() {\n    return showDialog({\n        container: document.body,\n        dataTestId: \"adult-or-child-dialog\",\n        lang: supportedLocale,\n        title: localizedString(\"legalPromptVariantGAdultOrChild\"),\n        buttons: [\n            {\n                text: localizedString(\"legalPromptVariantGAdult\"),\n                key: \"adult\",\n            },\n            {\n                text: localizedString(\"legalPromptVariantGChild\"),\n                key: \"child\",\n            },\n        ],\n    });\n}\n\nfunction showFindGuardianDialog() {\n    return showDialog({\n        container: document.body,\n        dataTestId: \"find-guardian-dialog\",\n        lang: supportedLocale,\n        title: localizedString(\"legalPromptVariantGFindYourParent\"),\n        buttons: [\n            {\n                text: localizedString(\"legalPromptVariantGIAmGuardian\"),\n                key: \"guardian\",\n            },\n            {\n                text: localizedString(\"legalPromptVariantGCancel\"),\n                key: \"cancel\",\n                isSecondary: true,\n            },\n        ],\n    });\n}\n\nexport type LegalPromptFactory = (\n    privacyPolicy: LegalDocument & { type: LegalDocument_Type.PRIVACY_POLICY },\n    termsOfService: LegalDocument & { type: LegalDocument_Type.TERMS_OF_SERVICE },\n    learnMore: LegalDocument & { type: LegalDocument_Type.LEARN_MORE },\n    childrenProtectionActRestricted: boolean\n) => LegalPrompt;\n\nexport type LegalPrompt = {\n    contentHash: string;\n    show: () => Promise<boolean>;\n};\n\n/**\n * @internal\n */\nexport const legalPromptFactory = Injectable(\"legalPrompt\", (): LegalPromptFactory => {\n    return function legalPrompt(\n        privacyPolicy: LegalDocument & { type: LegalDocument_Type.PRIVACY_POLICY },\n        termsOfService: LegalDocument & { type: LegalDocument_Type.TERMS_OF_SERVICE },\n        learnMore: LegalDocument & { type: LegalDocument_Type.LEARN_MORE },\n        childrenProtectionActRestricted: boolean\n    ) {\n        const legalMessage = childrenProtectionActRestricted\n            ? localizedString(\"legalPromptVariantGMessage\")\n            : localizedString(\"legalPromptMessage\")({\n                  privacyPolicyUrl: privacyPolicy.webUrl,\n                  termsOfServiceUrl: termsOfService.webUrl,\n                  learnMoreUrl: learnMore.webUrl,\n              });\n        const legalTitleText = localizedString(\"legalPromptTermsOfService\");\n        const legalTitle = childrenProtectionActRestricted ? legalTitleText : snapIcon;\n\n        return {\n            contentHash: computeHash(legalMessage),\n\n            async show() {\n                if (!childrenProtectionActRestricted) {\n                    return showTosDialog(legalTitle, legalTitleText, legalMessage);\n                }\n\n                while (true) {\n                    const adultOrChild = await showAdultOrChildDialog();\n                    switch (adultOrChild) {\n                        case \"child\": {\n                            const findGuardian = await showFindGuardianDialog();\n                            switch (findGuardian) {\n                                case \"cancel\":\n                                    continue;\n                                case \"guardian\":\n                                    return showTosDialog(legalTitle, legalTitleText, legalMessage);\n                                case \"dismiss\":\n                                    return false;\n                                default:\n                                    assertUnreachable(findGuardian);\n                            }\n                        }\n                        case \"adult\":\n                            return showTosDialog(legalTitle, legalTitleText, legalMessage);\n                        case \"dismiss\":\n                            return false;\n                        default:\n                            assertUnreachable(adultOrChild);\n                    }\n                }\n            },\n        };\n    };\n});\n", "import {\n    defineAction,\n    defineActions,\n    defineState,\n    defineStates,\n    dispatch,\n    forActions,\n    inStates,\n    StateMachine,\n} from \"@snap/state-management\";\nimport { catchError, forkJoin, from, map, merge, of, switchMap } from \"rxjs\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport {\n    LegalDocument,\n    LegalDocument_Type,\n    LegalPrompt as LegalPromptProto,\n} from \"../generated-proto/pb_schema/camera_kit/v3/legal_prompt\";\nimport { ConfigResult } from \"../generated-proto/pb_schema/cdp/cof/config_result\";\nimport { getLogger } from \"../logger/logger\";\nimport { ExpiringPersistence } from \"../persistence/ExpiringPersistence\";\nimport { IndexedDBPersistence } from \"../persistence/IndexedDBPersistence\";\nimport { RemoteConfiguration, remoteConfigurationFactory } from \"../remote-configuration/remoteConfiguration\";\nimport { GetInitializationConfigResponse } from \"../generated-proto/pb_schema/camera_kit/v3/service\";\nimport { LegalPromptFactory, legalPromptFactory } from \"./legalPrompt\";\n\nconst logger = getLogger(\"LegalState\");\n\ntype SupportedDocumentType =\n    | LegalDocument_Type.PRIVACY_POLICY\n    | LegalDocument_Type.TERMS_OF_SERVICE\n    | LegalDocument_Type.LEARN_MORE;\n\n/**\n * We store a hash of the last accepted ToS content. This is how we determine if the user previously accepted the\n * relevant ToS.\n *\n * ToS acceptance is only valid for 12 hours. That is, if legal status is checked and the last acceptance occurred more\n * than 12 hours ago, the user must be prompted to accept again.\n */\nconst tosContentHashExpiry = 12 * 60 * 60;\nconst tosContentHashKey = \"lastAcceptedTosContentHash\";\n\nconst createLegalState = () => {\n    const states = defineStates(defineState(\"unknown\")(), defineState(\"accepted\")(), defineState(\"rejected\")());\n\n    const actions = defineActions(\n        defineAction(\"requestLegalPrompt\")(),\n        defineAction(\"accept\")<string>(),\n        defineAction(\"reject\")<string>()\n    );\n\n    return new StateMachine(actions, states, states.unknown(), (actions) => {\n        return merge(\n            actions.pipe(\n                inStates(\"unknown\"),\n                forActions(\"accept\"),\n                map(() => states.accepted())\n            ),\n            actions.pipe(\n                inStates(\"unknown\"),\n                forActions(\"reject\"),\n                map(() => states.rejected())\n            ),\n\n            // We don't treat \"rejected\" as a terminal state -- if we get another request to display the legal prompt,\n            // even though we're in the rejected state, we'll transition back to unknown and the prompt will be shown.\n            //\n            // Conversely, we do treat \"accepted\" as a terminal state -- we will not transition back to unknown or\n            // show the legal prompt if we're already in accepted state, even if we get a request to display the prompt.\n            actions.pipe(\n                inStates(\"rejected\"),\n                forActions(\"requestLegalPrompt\"),\n                map(() => states.unknown())\n            )\n        );\n    });\n};\n\nconst defaultLegalDocumentDate = new Date(\"2021-09-30T00:00:00+00:00\");\nconst defaultLegalPrompt = LegalPromptProto.fromPartial({\n    documents: [\n        LegalDocument.fromPartial({\n            type: LegalDocument_Type.PRIVACY_POLICY,\n            webUrl: \"https://values.snap.com/privacy/privacy-policy\",\n            version: \"1\",\n            timestamp: defaultLegalDocumentDate,\n        }),\n        LegalDocument.fromPartial({\n            type: LegalDocument_Type.TERMS_OF_SERVICE,\n            webUrl: \"https://snap.com/terms\",\n            version: \"1\",\n            timestamp: defaultLegalDocumentDate,\n        }),\n        LegalDocument.fromPartial({\n            type: LegalDocument_Type.LEARN_MORE,\n            webUrl: \"https://support.snapchat.com/article/camera-information-use\",\n            version: \"1\",\n            timestamp: defaultLegalDocumentDate,\n        }),\n    ],\n    // By default, we adopt a fail-open approach, which means that if COF fails,\n    // we do not display ToS for the following reasons:\n    // 1. It provides better experince for big partners with ToS disabled\n    // 2. It has minimal risk\n    disabled: true,\n});\n\nconst defaultInitConfig = GetInitializationConfigResponse.fromPartial({});\n\nconst hasAnyValue = (c: ConfigResult): c is ConfigResult & { value: { anyValue: { value: Uint8Array } } } => {\n    return c.value?.anyValue?.value instanceof Uint8Array;\n};\n\nconst getDocumentOrDefault =\n    (documents: LegalDocument[]) =>\n    <T extends SupportedDocumentType>(type: T): LegalDocument & { type: T } => {\n        return (documents.find((d) => d.type === type) ??\n            defaultLegalPrompt.documents.find((d) => d.type === type)!) as LegalDocument & { type: T };\n    };\n\nexport type LegalState = ReturnType<typeof createLegalState>;\n\n/**\n * We maintain the state of the user's acceptance of Snap's various legal documents. Other components may require that\n * the legal state be \"accepted\" before proceeding (e.g. to apply a lens).\n *\n * On page load, the legal state starts as \"unknown.\" If a request is made to determine the legal state, the following\n * business logic is implemented:\n *\n * 1. Download remote COF config value containing the legal documents + a `disabled` field to optionally skip the legal\n * requirement.\n * 2. Check for a `lastAcceptedTosContentHash` stored in IndexedDB.\n * 3. Prompt the user to accept/reject the legal documents.\n *\n *                     ┌────────────────────────────────────────────────────────┐\n *                     │       COF config value includes \"disabled: true\"       │\n *                     └────────────────────────────────────────────────────────┘\n *                                                  │\n *                                                  │\n *                           ┌────────No────────────┴────────────Yes──────────────────┐\n *                           │                                                        │\n *                           ▼                                                        │\n *        ┌────────────────────────────────────┐                                      ▼\n *        │\"lastAcceptedTosContentHash\" exists │                               ┌────────────┐\n *        └────────────────────────────────────┘                               │  Skip ToS  │\n *                           │                                                 └────────────┘\n *                           │                                                        ▲\n *        ┌─────────────No───┴───────Yes────────────┐                                 │\n *        │                                         │                                 │\n *        │                                         │                                 │\n *        ▼                                         ▼                                 │\n * ┌────────────┐              ┌────────────────────────────────────────┐             │\n * │  Show ToS  │              │  Hash of ToS content from COF matches  │             │\n * └────────────┘              │      \"lastAcceptedTosContentHash\"      │             │\n *        ▲                    └────────────────────────────────────────┘             │\n *        │                                         │                                 │\n *        │                                         │                                 │\n *        └──────────────────No─────────────────────┴───────────────────Yes───────────┘\n *\n * @internal\n */\nexport const legalStateFactory = Injectable(\n    \"legalState\",\n    [remoteConfigurationFactory.token, legalPromptFactory.token] as const,\n    (remoteConfig: RemoteConfiguration, legalPrompt: LegalPromptFactory): LegalState => {\n        const persistance = new ExpiringPersistence<string>(\n            () => tosContentHashExpiry,\n            new IndexedDBPersistence({ databaseName: \"Legal\" })\n        );\n        const getLastAcceptedTosContentHash = () =>\n            from(persistance.retrieve(tosContentHashKey).catch((error) => logger.warn(error)));\n\n        const setLastAcceptedTosContentHash = (hash: string) =>\n            persistance.store(tosContentHashKey, hash).catch((error) => logger.warn(error));\n\n        const legalState = createLegalState();\n\n        legalState.events\n            .pipe(\n                inStates(\"unknown\"),\n                forActions(\"requestLegalPrompt\"),\n                switchMap(() =>\n                    forkJoin({\n                        cofConfig: remoteConfig.get(\"CAMERA_KIT_LEGAL_PROMPT\").pipe(\n                            map((configResults) => {\n                                const config = configResults.find(hasAnyValue);\n                                if (!config) return defaultLegalPrompt;\n                                return LegalPromptProto.decode(config.value.anyValue.value);\n                            }),\n                            catchError((error) => {\n                                logger.error(error);\n                                return of(defaultLegalPrompt);\n                            })\n                        ),\n                        initConfig: remoteConfig.getInitializationConfig().pipe(\n                            catchError((error) => {\n                                logger.error(error);\n                                return of(defaultInitConfig);\n                            })\n                        ),\n                    })\n                ),\n                switchMap(({ cofConfig, initConfig }) => {\n                    // NOTE: Currently, we check two sources to determine whether ToS is disabled or not:\n                    // COF and initConfig. Legal document links are pulled only from COF (or defaults),\n                    // because initConfig has not been implemented yet. In the future, we may choose\n                    // to exclusively use initConfig, which could incorporate the COF call internally:\n                    // https://jira.sc-corp.net/browse/CAMKIT-4791\n\n                    if (initConfig.legalPrompt?.disabled) {\n                        return of(legalState.actions.accept(\"disabled\"));\n                    }\n\n                    if (cofConfig.disabled) {\n                        return of(legalState.actions.accept(\"disabled\"));\n                    }\n\n                    const documentOfType = getDocumentOrDefault(cofConfig.documents);\n                    const prompt = legalPrompt(\n                        documentOfType(LegalDocument_Type.PRIVACY_POLICY),\n                        documentOfType(LegalDocument_Type.TERMS_OF_SERVICE),\n                        documentOfType(LegalDocument_Type.LEARN_MORE),\n                        initConfig.childrenProtectionActRestricted\n                    );\n\n                    return getLastAcceptedTosContentHash().pipe(\n                        switchMap((lastAcceptedTosContentHash) => {\n                            if (prompt.contentHash === lastAcceptedTosContentHash) return of(true);\n\n                            // Delegate prompting the end-user to accept/reject the legal documents. This returns with\n                            // a Promise<boolean> indicating accept/reject.\n                            return prompt.show();\n                        }),\n                        map((didAccept) => {\n                            if (!didAccept) return legalState.actions.reject(prompt.contentHash);\n                            setLastAcceptedTosContentHash(prompt.contentHash);\n                            return legalState.actions.accept(prompt.contentHash);\n                        })\n                    );\n                }),\n                dispatch(legalState)\n            )\n            .subscribe({\n                error: logger.error,\n            });\n\n        return legalState;\n    }\n);\n", "import { OperationalMetric } from \"../../generated-proto/pb_schema/camera_kit/v3/operational_metrics\";\n\ntype MetricConstructor<T> = new (name: string, dimensions: MetricDimensions) => T;\n\nconst nameDelimiter = \"_\";\nconst dimensionDelimiter = \".\";\nconst delimiterRegex = new RegExp(`^${nameDelimiter}+|${nameDelimiter}+$`, \"g\");\n\n/** @internal */\nexport type MetricDimensions = Record<string, string | number>;\n\n/** @internal */\nexport abstract class Metric {\n    constructor(readonly name: string, readonly dimensions: MetricDimensions = {}) {}\n\n    child<ChildName extends string, T extends Metric>(\n        constructor: MetricConstructor<T>,\n        name: ChildName,\n        dimensions: MetricDimensions = {}\n    ): T {\n        return new constructor(`${this.name}${nameDelimiter}${name}`, dimensions);\n    }\n\n    abstract toOperationalMetric(): Required<OperationalMetric>[];\n}\n\n/** @internal */\nexport type JoinMetricNames<Parent extends string, Child extends string> = `${Parent}${typeof nameDelimiter}${Child}`;\n\n/** @internal */\nexport function joinMetricNames(names: string[]): string {\n    return names.join(nameDelimiter).replace(delimiterRegex, \"\");\n}\n\n/** @internal */\nexport function serializeMetricDimensions(dimensions: MetricDimensions): string {\n    if (Object.keys(dimensions).length === 0) return \"\";\n    return `${dimensionDelimiter}${Array.from(Object.entries(dimensions))\n        .map((d) => d.join(dimensionDelimiter))\n        .join(dimensionDelimiter)}`;\n}\n", "import { getTimeMs } from \"../../common/time\";\nimport { OperationalMetric } from \"../../generated-proto/pb_schema/camera_kit/v3/operational_metrics\";\nimport { JoinMetricNames, Metric, MetricDimensions, joinMetricNames, serializeMetricDimensions } from \"./Metric\";\nimport { OperationalMetricsReporter } from \"./operationalMetricsReporter\";\n\ninterface Measure {\n    name: string;\n    duration: number;\n    dimensions: MetricDimensions;\n}\n\n/** @internal */\nexport type LatencyMetric = OperationalMetric & {\n    metric: Extract<OperationalMetric[\"metric\"], { $case: \"latencyMillis\" }>;\n};\n\n/** @internal */\nexport class Timer<Name extends string> extends Metric {\n    private readonly marks: Set<Timer<string>>;\n    private readonly measures: Set<Measure>;\n    private readonly startTime = getTimeMs();\n    private stopped = false;\n\n    constructor(readonly name: Name, dimensions: MetricDimensions = {}) {\n        super(name, dimensions);\n\n        this.marks = new Set();\n        this.measures = new Set();\n    }\n\n    /**\n     * Return all measures created by this Timer and any child timers.\n     */\n    getMeasures(): ReadonlyArray<Measure> {\n        return Array.from(this.measures.values()).concat(\n            ...Array.from(this.marks.values()).map((mark) => mark.getMeasures())\n        );\n    }\n\n    /**\n     * Create a child Timer, using this Timer's name as a prefix when naming the new Timer. Any measures made with the\n     * child Timer will be included when calling `getMeasures()` on this Timer, or when calling `toOperationalMetric`\n     * on this Timer.\n     *\n     * @example\n     * ```ts\n     * const parent = new Timer('parent')\n     * const child = parent.mark('child') // child metric name is parent_child.\n     *\n     * child.measure()\n     * const measures = parent.getMeasures() // has one element.\n     * ```\n     *\n     * @param name\n     * @param dimensions If omitted, the child timer will NOT inherit dimensions from the parent -- if the child timer\n     * should re-use the parent's dimensions, this must be done explicitly by passing the parent's dimensions as an\n     * argument here.\n     * @returns A child Timer.\n     */\n    mark<MarkName extends string>(\n        name: MarkName,\n        dimensions: MetricDimensions = {}\n    ): Timer<JoinMetricNames<Name, MarkName>> {\n        const mark = new Timer(joinMetricNames([this.name, name]) as JoinMetricNames<Name, MarkName>, dimensions);\n        if (this.stopped) mark.stop();\n        this.marks.add(mark);\n        return mark;\n    }\n\n    /**\n     * Measure the time (in milliseconds) since this Timer was created.\n     *\n     * If a name is provided, the measure's name will be prefixed with the name of this Timer. Otherwise the name of\n     * the measure will be the name of this Timer.\n     *\n     * @example\n     * ```ts\n     * const timer = new Timer('a')\n     * timer.measure('b')\n     * const measures = timer.getMeasures()\n     * // measure[0].name === 'a_b'\n     * ```\n     *\n     * @param name\n     * @returns\n     */\n    measure(name = \"\"): void {\n        if (this.stopped) return;\n        const fullName = joinMetricNames([this.name, name]);\n        const measure: Measure = {\n            name: fullName,\n            duration: getTimeMs() - this.startTime,\n            dimensions: this.dimensions,\n        };\n        this.measures.add(measure);\n    }\n\n    /**\n     * Remove all measures from this Timer and any child timers previously created by calls to `mark()`.\n     */\n    clear(): void {\n        this.measures.clear();\n        this.marks.forEach((mark) => mark.clear());\n    }\n\n    /**\n     * Prevent any future measures from being created by this Timer or any child timers.\n     */\n    stop(): void {\n        this.stopped = true;\n        this.marks.forEach((mark) => mark.stop());\n    }\n\n    /**\n     * Report this metric using {@link OperationalMetricsReporter}.\n     *\n     * After reporting, the Timer can longer be used. Its internal state is cleared and cannot be updated. Calling this\n     * method a second time will no-op.\n     *\n     * @param reporter All measurements will be reported using the given reporter.\n     */\n    async stopAndReport(reporter: OperationalMetricsReporter): Promise<void> {\n        reporter.report(this);\n        this.stop();\n        this.clear();\n    }\n\n    /**\n     * Convert all measures from this Timer and from any child timers into an array of {@link OperationalMeric} objects,\n     * which can be sent to the backend.\n     *\n     * @returns\n     */\n    toOperationalMetric(): LatencyMetric[] {\n        const timestamp = new Date();\n        return this.getMeasures().map((measure) => ({\n            name: `${measure.name}${serializeMetricDimensions(measure.dimensions)}`,\n            timestamp,\n            metric: {\n                $case: \"latencyMillis\",\n                latencyMillis: measure.duration,\n            },\n        }));\n    }\n}\n", "import { MonoTypeOperatorFunction, defer, finalize, tap } from \"rxjs\";\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when the source has no\n * more subscribers.\n *\n * This is exactly like the `finalize` operator, exept that the specified function will be called only when the source\n * is explicitly unsubscribed.\n *\n * @param callback Called when the source Observable has no more subscribers.\n * @returns\n */\nexport function unsubscribed<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n    return (source) =>\n        defer(() => {\n            // We can tell if the source is completed or errored -- if neither has happened, we know the source is being\n            // finalized because all subscribers have left.\n            let completedOrErrored = false;\n            return source.pipe(\n                tap({\n                    complete: () => (completedOrErrored = true),\n                    error: () => (completedOrErrored = true),\n                }),\n                finalize(() => {\n                    if (completedOrErrored) return;\n                    callback();\n                })\n            );\n        });\n}\n", "import {\n    Actions,\n    defineAction,\n    defineActions,\n    defineState,\n    defineStates,\n    dispatch,\n    forActions,\n    inStates,\n    StateMachine,\n} from \"@snap/state-management\";\nimport {\n    catchError,\n    exhaustMap,\n    from,\n    map,\n    merge,\n    mergeMap,\n    Observable,\n    of,\n    switchMap,\n    take,\n    takeUntil,\n    tap,\n} from \"rxjs\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { Lens } from \"../lens/Lens\";\nimport { LensRepository, lensRepositoryFactory } from \"../lens/LensRepository\";\nimport { lensCoreFactory, LensCore } from \"../lens-core-module\";\nimport { AddLensInput } from \"../lens-core-module/generated-types\";\nimport { IndexedDBPersistence } from \"../persistence/IndexedDBPersistence\";\nimport { lensPersistenceStoreFactory } from \"../lens/LensPersistenceStore\";\nimport { createLaunchData, LensLaunchParams } from \"../lens/LensLaunchParams\";\nimport { LegalState, legalStateFactory } from \"../legal/legalState\";\nimport { LensAssetRepository, lensAssetRepositoryFactory } from \"../lens/assets/LensAssetRepository\";\nimport {\n    legalError,\n    LegalError,\n    lensContentValidationError,\n    LensContentValidationError,\n    lensError,\n    LensError,\n} from \"../namedErrors\";\nimport { getLogger } from \"../logger/logger\";\nimport { Timer } from \"../metrics/operational/Timer\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../metrics/operational/operationalMetricsReporter\";\nimport { unsubscribed } from \"../observable-operators/unsubscribed\";\n\nconst logger = getLogger(\"LensState\");\n\nconst createLensState = () => {\n    const actions = defineActions(\n        defineAction(\"applyLens\")<{ lens: Lens; launchParams?: LensLaunchParams }>(),\n        defineAction(\"downloadComplete\")<Lens>(),\n        defineAction(\"turnedOn\")<Lens>(),\n        defineAction(\"resourcesLoaded\")<Lens>(),\n        defineAction(\"firstFrameProcessed\")<Lens>(),\n        defineAction(\"applyLensComplete\")<Lens>(),\n        defineAction(\"applyLensFailed\")<{ error: LensErrors; lens: Lens }>(),\n        defineAction(\"applyLensAborted\")<Lens>(),\n\n        defineAction(\"removeLens\")(),\n        defineAction(\"turnedOff\")<Lens>(),\n        defineAction(\"removeLensComplete\")(),\n        defineAction(\"removeLensFailed\")<Error>()\n    );\n\n    const states = defineStates(\n        defineState(\"noLensApplied\")(),\n        defineState(\"applyingLens\")<Lens>(),\n        defineState(\"lensApplied\")<Lens>()\n    );\n\n    return new StateMachine(actions, states, states.noLensApplied(), (events) =>\n        merge(\n            events.pipe(\n                // We allow a new lens to be applied at any time, no matter the state.\n                inStates(\"noLensApplied\", \"applyingLens\", \"lensApplied\"),\n                forActions(\"applyLens\"),\n                map(([a]) => states.applyingLens(a.data.lens))\n            ),\n            events.pipe(\n                inStates(\"applyingLens\"),\n                forActions(\"applyLensComplete\"),\n                map(([a]) => states.lensApplied(a.data))\n            ),\n            events.pipe(\n                inStates(\"applyingLens\"),\n                forActions(\"applyLensFailed\"),\n                map(() => states.noLensApplied())\n            ),\n            events.pipe(\n                inStates(\"lensApplied\"),\n                forActions(\"removeLensComplete\"),\n                map(() => states.noLensApplied())\n            )\n        )\n    );\n};\n\nexport type LensErrors = LegalError | LensContentValidationError | LensError;\n\nexport type LensState = ReturnType<typeof createLensState>;\n\nexport const lensStateFactory = Injectable(\n    \"lensState\",\n    [\n        lensCoreFactory.token,\n        lensRepositoryFactory.token,\n        lensAssetRepositoryFactory.token,\n        lensPersistenceStoreFactory.token,\n        legalStateFactory.token,\n        operationalMetricReporterFactory.token,\n    ] as const,\n    (\n        lensCore: LensCore,\n        lensRepository: LensRepository,\n        lensAssetRepository: LensAssetRepository,\n        lensPersistence: IndexedDBPersistence<ArrayBuffer>,\n        legalState: LegalState,\n        operationalMetricsReporter: OperationalMetricsReporter\n    ): LensState => {\n        const lensState = createLensState();\n        let firstLensApply = true;\n\n        /**\n         * Apply lens\n         */\n        lensState.events\n            .pipe(\n                forActions(\"applyLens\"),\n\n                // Determine the legal state (e.g. terms have been accepted). Using exhaustMap means while we are\n                // ascertaining legal status (which may include prompting the end user to accept terms), we will ignore\n                // any new applyLens actions.\n                exhaustMap(([a]) =>\n                    of(legalState.actions.requestLegalPrompt()).pipe(\n                        dispatch(legalState),\n                        inStates(\"accepted\", \"rejected\"),\n                        take(1),\n                        map(([, { name }]) => {\n                            if (name === \"accepted\") return a;\n                            return lensState.actions.applyLensFailed({\n                                error: legalError(\n                                    `Failed to apply lens ${a.data.lens.id}. Required legal terms were not accepted.`\n                                ),\n                                lens: a.data.lens,\n                            });\n                        })\n                    )\n                ),\n\n                // The use of switchMap is important so that if we get a new applyLens action while we're still\n                // downloading lens content for a previously-requested lens, we can cancel those requests and ensure\n                // that lenses are applied in the order they're requested.\n                switchMap((a) => {\n                    if (a.name === \"applyLensFailed\") return of(a);\n\n                    const { lens } = a.data;\n                    // Convenience method making dispatching an action with Lens data less verbose.\n                    const dispatch = (action: Extract<Actions<LensState>, { data: Lens }>[\"name\"]) => {\n                        lensState.dispatch(action, lens);\n                    };\n\n                    // We record if this was the first lens apply for this page load, since there may be additional\n                    // sources of latency (e.g. remote configuration that needs to be loaded) on the first apply that\n                    // are not present for subsequent applies.\n                    const applyTimer = new Timer(\"lens\").mark(\"apply\", { first: `${firstLensApply}` });\n                    firstLensApply = false;\n\n                    return of(a.data).pipe(\n                        mergeMap(({ lens, launchParams }) =>\n                            // If retrieval throws an error, we still want to proceed with the lens\n                            // because persisted data is not a necessity.\n                            from(lensPersistence.retrieve(lens.id).catch(() => undefined)).pipe(\n                                map((persistentStore) => ({ lens, launchParams, persistentStore }))\n                            )\n                        ),\n\n                        map(({ lens, launchParams, persistentStore }) => {\n                            const launchData = createLaunchData({\n                                launchParams,\n                                persistentStore,\n                            });\n\n                            const lensDetails = lensRepository.getLensMetadata(lens.id);\n                            if (!lensDetails) {\n                                throw new Error(\n                                    `Cannot apply lens ${lens.id}. It has not been loaded by the Lens ` +\n                                        `repository. Use CameraKit.lensRepository.loadLens (or loadLensGroups) ` +\n                                        `to load lens metadata before calling CameraKitSession.applyLens.`\n                                );\n                            }\n\n                            const { content } = lensDetails;\n                            if (!content) {\n                                throw new Error(\n                                    `Cannot apply lens ${lens.id}. Metadata retrieved for this lens does not ` +\n                                        `include the lens content URL.`\n                                );\n                            }\n\n                            return { lens, launchData, content };\n                        }),\n\n                        // Load lens assets and the lens itself in parallel. Both count toward lens download time.\n                        // TODO: use RxJS fetch utilities so that these requests can be cancelled on unsubscribe.\n                        mergeMap(({ lens, launchData, content }) => {\n                            const networkTimer = applyTimer.mark(\"network\");\n\n                            return from(\n                                Promise.all([\n                                    lensRepository.getLensContent(lens).finally(() => networkTimer.measure(\"lens\")),\n                                    content.assetManifest.length > 0\n                                        ? lensAssetRepository\n                                              .cacheAssets(content.assetManifest, lens)\n                                              .finally(() => networkTimer.measure(\"assets\"))\n                                        : Promise.resolve(),\n                                ])\n                            ).pipe(\n                                tap(() => {\n                                    networkTimer.measure();\n                                    lensState.dispatch(\"downloadComplete\", lens);\n                                }),\n                                map(([{ lensBuffer, lensChecksum }]): AddLensInput => {\n                                    // NOTE: cached array buffer has to be copied each time in order to be reused,\n                                    // otherwise the original cached copy would be detached by LensCore\n                                    // One optimization can be done here: do not copy the array if getLensContent()\n                                    // returned uncached buffer\n                                    const lensDataBuffer = lensBuffer.slice(0);\n                                    // LensCore chokes trying if launchData is set to undefined; we must omit it.\n                                    return launchData === undefined\n                                        ? { lensId: lens.id, lensDataBuffer, lensChecksum }\n                                        : { lensId: lens.id, lensDataBuffer, lensChecksum, launchData };\n                                })\n                            );\n                        }),\n\n                        // If removeLens is dispatched while downloading, cancel download, don't apply the lens.\n                        takeUntil(lensState.events.pipe(forActions(\"removeLens\"))),\n\n                        // Once the lens has downloaded, we can call replaceLenses. We're not concerned about\n                        // waiting for prior in-progress calls to replaceLenses to complete, because LensCore\n                        // guarantees that calls to replaceLenses will always be processed sequentially in the order\n                        // they are received.\n                        mergeMap(\n                            (lensInput) =>\n                                new Observable<Actions<LensState>>((subscriber) => {\n                                    const coreTimer = applyTimer.mark(\"core\");\n\n                                    // replaceLenses has the property that if it fails, LensCore guarantees that no\n                                    // lenses are active – so we can safely dispatch applyLensFailed and transition\n                                    // to noLensApplied state.\n                                    lensCore\n                                        .replaceLenses({\n                                            lenses: [\n                                                {\n                                                    ...lensInput,\n                                                    onTurnOn: () => dispatch(\"turnedOn\"),\n                                                    onResourcesLoaded: () => dispatch(\"resourcesLoaded\"),\n\n                                                    // onFirstFrameProcessed marks the end of the lens application for\n                                                    // the end-user -- this is when they see the newly applied lens\n                                                    // begin to render. As such, this is where we stop our overall\n                                                    // latency measurement and report latency metrics.\n                                                    onFirstFrameProcessed: () => {\n                                                        coreTimer.measure(\"first-frame\");\n                                                        applyTimer.measure(\"success\");\n                                                        applyTimer.stopAndReport(operationalMetricsReporter);\n                                                        dispatch(\"firstFrameProcessed\");\n                                                    },\n                                                    onTurnOff: () => dispatch(\"turnedOff\"),\n                                                },\n                                            ],\n                                        })\n                                        .then(() => {\n                                            coreTimer.measure(\"success\");\n\n                                            // We emit applyLensComplete (and applyLensFailed, below) on an\n                                            // Observable, which is piped to `dispatch` – this allows `switchMap` to\n                                            // properly cancel the dispatch of these actions if a new applyLens\n                                            // arrives while we're waiting for onSuccess/onFailure.\n                                            //\n                                            // That's desirable behavior, because we don't want the applyingLens\n                                            // state due to a *subsequent applyLens action* to be transitioned to\n                                            // lensApplied by this action.\n                                            subscriber.next(lensState.actions.applyLensComplete(lens));\n                                            subscriber.complete();\n                                        })\n                                        .catch((lensCoreError) => {\n                                            coreTimer.measure(\"failure\");\n                                            applyTimer.measure(\"failure\");\n                                            applyTimer.stopAndReport(operationalMetricsReporter);\n\n                                            const message = `Failed to apply lens ${lensInput.lensId}.`;\n                                            const error = /validation failed/.test(lensCoreError.message)\n                                                ? lensContentValidationError(message, lensCoreError)\n                                                : lensError(message, lensCoreError);\n\n                                            subscriber.next(lensState.actions.applyLensFailed({ error, lens }));\n                                            subscriber.complete();\n                                        });\n                                })\n                        ),\n                        catchError((error: LensErrors) => {\n                            applyTimer.measure(\"failure\");\n                            applyTimer.stopAndReport(operationalMetricsReporter);\n                            return of(lensState.actions.applyLensFailed({ error, lens }));\n                        }),\n\n                        // If a new applyLens is received, `switchMap` will unsubscribe from this inner observable,\n                        // which stops the current lens application. When this happens we can record a separate metric\n                        // to measure aborted lens applications.\n                        unsubscribed(() => {\n                            applyTimer.measure(\"abort\");\n                            applyTimer.stopAndReport(operationalMetricsReporter);\n                        })\n                    );\n                }),\n                dispatch(lensState)\n            )\n            .subscribe({\n                error: logger.error,\n            });\n\n        /**\n         * Remove lens\n         */\n        lensState.events\n            .pipe(\n                inStates(\"lensApplied\", \"noLensApplied\"),\n                forActions(\"removeLens\"),\n                mergeMap(\n                    () =>\n                        new Observable<Actions<LensState>>((subscriber) => {\n                            lensCore\n                                .clearAllLenses()\n                                .then(() => {\n                                    subscriber.next(lensState.actions.removeLensComplete());\n                                    subscriber.complete();\n                                })\n                                .catch((lensCoreError) => {\n                                    const error = new Error(\"Failed to remove lenses.\", { cause: lensCoreError });\n                                    subscriber.next(lensState.actions.removeLensFailed(error));\n                                    subscriber.complete();\n                                });\n                        })\n                ),\n                dispatch(lensState)\n            )\n            .subscribe({\n                error: logger.error,\n            });\n\n        lensState.events\n            .pipe(\n                inStates(\"applyingLens\"),\n                forActions(\"removeLens\"),\n                switchMap(([a]) =>\n                    lensState.events.pipe(\n                        // Wait to remove the lens until it has been applied.\n                        inStates(\"lensApplied\"),\n                        // But cancel the removal if a new applyLens supercedes the current lens. The goal here is to\n                        // make sure the latest apply/remove pre-empts any previous request to apply/remove.\n                        takeUntil(lensState.events.pipe(forActions(\"applyLens\"))),\n                        map(() => a)\n                    )\n                ),\n                dispatch(lensState)\n            )\n            .subscribe({\n                error: logger.error,\n            });\n\n        // Log transitions\n        lensState.events.subscribe(([a, s]) => logger.debug(`Action: \"${a.name}\", state: \"${s.name}\"`));\n\n        return lensState;\n    }\n);\n", "import {\n    defineAction,\n    defineActions,\n    defineState,\n    defineStates,\n    forActions,\n    StateMachine,\n} from \"@snap/state-management\";\nimport { map, merge } from \"rxjs\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { CameraKitSession } from \"./CameraKitSession\";\n\nconst createSessionState = () => {\n    const actions = defineActions(\n        defineAction(\"suspend\")<CameraKitSession>(),\n        defineAction(\"resume\")<CameraKitSession>(),\n        defineAction(\"destroy\")()\n    );\n\n    const states = defineStates(\n        defineState(\"inactive\")(),\n        defineState(\"active\")<CameraKitSession>(),\n        defineState(\"destroyed\")()\n    );\n\n    return new StateMachine(actions, states, defineState(\"inactive\")()(), (events) => {\n        return merge(\n            events.pipe(\n                forActions(\"resume\"),\n                map(([a]) => states.active(a.data))\n            ),\n            events.pipe(\n                forActions(\"suspend\"),\n                map(() => states.inactive())\n            ),\n            events.pipe(\n                forActions(\"destroy\"),\n                map(() => states.destroyed())\n            )\n        );\n    });\n};\n\nexport type SessionState = ReturnType<typeof createSessionState>;\n\nexport const sessionStateFactory = Injectable(\"sessionState\", (): SessionState => createSessionState());\n", "import { isState, forActions } from \"@snap/state-management\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { TypedEventListener, TypedEventListenerOptions, TypedEventTarget } from \"../events/TypedEventTarget\";\nimport { UriHandler } from \"../extensions/UriHandlers\";\nimport { Lens } from \"../lens/Lens\";\nimport { LensState, lensStateFactory } from \"./lensState\";\n\n/**\n * Events emitted by {@link Keyboard}.\n */\nexport type KeyboardEvents = TypedCustomEvent<\n    \"active\",\n    {\n        element: HTMLTextAreaElement;\n        active: boolean;\n        lens?: Lens;\n    }\n>;\n\n/**\n * Keyboard is an API enabling lenses to consume and render user-generated text.\n *\n * Applications that wish to use lenses that expect user-generated text will need to use this API to integrate text\n * input into their user experience.\n *\n * There are two ways to do this:\n * 1. Add the provided DOM element (an HTMLTextAreaElement) to the page. When the user updates this element with text,\n * that text will be sent to the currently active lens.\n * 2. Use the {@link sendInputToLens} method to send text strings to the currently active lens directly.\n *\n * Lenses will also signal to the application when text input is expected -- applications should add an event listener\n * and ensure the user is able to input text when the `active` event is received.\n *\n * @example\n * ```ts\n * cameraKitSession.keyboard.addEventListener('active', ({ detail }) => {\n *   const { element, active } = detail\n *   if (active) document.body.appendChild(element)\n *   else element.remove()\n * })\n * ```\n *\n * @category Lenses\n */\nexport type Keyboard = {\n    addEventListener: (\n        type: \"active\",\n        callback: TypedEventListener<KeyboardEvents>,\n        options?: TypedEventListenerOptions\n    ) => void;\n    removeEventListener: (type: \"active\", callback: TypedEventListener<KeyboardEvents>) => void;\n\n    /**\n     * Get an HTMLTextAreaElement that communicates text to the active Lens.\n     */\n    getElement: () => HTMLTextAreaElement;\n\n    /**\n     * Send text to the active Lens. Also updates the provided HTMLTextAreaElement.\n     *\n     * @param text String to render. This can include escape sequences, such as the newline character ( \\n ) for\n     * multi-line input.\n     */\n    sendInputToLens: (text: string) => void;\n\n    /**\n     * Clears the provided HTMLTextAreaElement, and emits the \"active\" event with `active == false`, allowing the\n     * application to e.g. remove relevant text input elements from the DOM.\n     */\n    dismiss: () => void;\n};\n\n/** @internal */\nexport class LensKeyboard {\n    public readonly uriHandler: UriHandler;\n    private readonly events: TypedEventTarget<KeyboardEvents>;\n    private readonly element: HTMLTextAreaElement;\n    private active: boolean;\n    private handleReply: (text: string) => void;\n\n    constructor(private readonly lensState: LensState) {\n        this.active = false;\n        this.element = document.createElement(\"textarea\");\n        this.element.addEventListener(\"keypress\", (event: KeyboardEvent) => {\n            if (event.code === \"Enter\" && !event.shiftKey) {\n                event.preventDefault();\n                this.handleReply(this.element.value);\n            }\n        });\n        this.events = new TypedEventTarget<KeyboardEvents>();\n        this.handleReply = () => {};\n        this.uriHandler = {\n            uri: \"app://textInput/requestKeyboard\",\n            handleRequest: (_request, reply) => {\n                this.element.autofocus = true;\n                this.handleReply = (text: string) => {\n                    const opt = {\n                        text: text,\n                        start: text.length,\n                        end: text.length,\n                        done: true,\n                        shouldNotify: true,\n                    };\n                    const output = new TextEncoder().encode(JSON.stringify(opt));\n                    reply({\n                        code: 200,\n                        description: \"\",\n                        contentType: \"application/json\",\n                        data: output,\n                    });\n                };\n                this.active = true;\n                this.updateStatus();\n                this.element.focus();\n            },\n        };\n        lensState.events.pipe(forActions(\"turnedOff\")).subscribe(() => {\n            this.dismiss();\n        });\n    }\n\n    dismiss(): void {\n        if (this.active) {\n            this.active = false;\n            this.element.value = \"\";\n            this.updateStatus();\n        }\n    }\n\n    getElement(): HTMLTextAreaElement {\n        return this.element;\n    }\n\n    sendInputToLens(text: string): void {\n        this.element.value = text;\n        this.handleReply(text);\n    }\n\n    addEventListener(\n        type: \"active\",\n        callback: TypedEventListener<KeyboardEvents>,\n        options?: TypedEventListenerOptions\n    ): void {\n        this.events.addEventListener(type, callback, options);\n    }\n\n    removeEventListener(type: \"active\", callback: TypedEventListener<KeyboardEvents>): void {\n        this.events.removeEventListener(type, callback);\n    }\n\n    toPublicInterface(): Keyboard {\n        return {\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n            getElement: this.getElement.bind(this),\n            sendInputToLens: this.sendInputToLens.bind(this),\n            dismiss: this.dismiss.bind(this),\n        };\n    }\n\n    private updateStatus(): void {\n        const state = this.lensState.getState();\n        // If lens keyboard status is changing, we know a lens must be applied.\n        if (isState(state, \"noLensApplied\")) return;\n        this.events.dispatchEvent(\n            new TypedCustomEvent(\"active\", {\n                element: this.element,\n                active: this.active,\n                // If the keyboard is up, it has been triggered by an active lens.\n                lens: state.data,\n            })\n        );\n    }\n}\n\n/**\n * @internal\n */\nexport const lensKeyboardFactory = Injectable(\n    \"lensKeyboard\",\n    [lensStateFactory.token] as const,\n    (lensState: LensState) => new LensKeyboard(lensState)\n);\n", "import { CameraKitSourceError, LensExecutionError, LensImagePickerError, LensAbortError } from \"../namedErrors\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { TypedEventListener } from \"../events/TypedEventTarget\";\nimport { Lens } from \"../lens\";\n\n/**\n * A type guard helper to detect unreachable code.\n */\nconst isReachable = (_: never) => false;\n\n/**\n * Returns true if given value is of {@link SessionErrors} type and false otherwise.\n */\nexport function isSessionError(value: unknown): value is SessionErrors {\n    if (!(value instanceof Error)) return false;\n\n    const maybeSessionErrorName = (value as SessionErrors).name;\n    switch (maybeSessionErrorName) {\n        case \"LensAbortError\":\n        case \"CameraKitSourceError\":\n        case \"LensExecutionError\":\n        case \"LensImagePickerError\":\n            return true;\n        default:\n            return isReachable(maybeSessionErrorName);\n    }\n}\n\n/**\n * Misc errors that occur during CameraKit session.\n * @internal\n */\nexport type SessionErrors = LensExecutionError | LensAbortError | LensImagePickerError | CameraKitSourceError;\n\n/**\n * Events emitted by {@link CameraKitSession.events | CameraKitSession.events}.\n *\n * The following events are emitted:\n *   - `error`: An error has been encountered during lens rendering. May contain an error of type:\n *     - {@link LensExecutionError} If an error of this type occurs, the rendering lens will be automatically removed\n * from the associated CameraKitSession.\n *     - {@link LensImagePickerError}\n *\n * @category Rendering\n * @category Lenses\n */\nexport type CameraKitSessionEvents = TypedCustomEvent<\n    \"error\",\n    { error: LensExecutionError | LensAbortError | LensImagePickerError; lens: Lens }\n>;\n\n/**\n * Listener of {@link CameraKitSessionEvents} events.\n */\nexport type CameraKitSessionEventListener = TypedEventListener<CameraKitSessionEvents>;\n\n/**\n * Returns true if given value is of {@link SessionErrors} type, which is notified to client.\n */\nexport function isPublicLensError(value: unknown): value is CameraKitSessionEvents[\"detail\"][\"error\"] {\n    if (!(value instanceof Error)) return false;\n\n    const maybeSessionErrorName = (value as CameraKitSessionEvents[\"detail\"][\"error\"]).name;\n    switch (maybeSessionErrorName) {\n        case \"LensAbortError\":\n        case \"LensExecutionError\":\n        case \"LensImagePickerError\":\n            return true;\n        default:\n            return isReachable(maybeSessionErrorName);\n    }\n}\n", "/* eslint-disable @typescript-eslint/member-ordering */\nimport { filter, firstValueFrom, map, Observable, of, Subscription, takeUntil, tap } from \"rxjs\";\nimport { dispatch, forActions, inStates, isAction, isState } from \"@snap/state-management\";\nimport { Lens, isLens } from \"../lens\";\nimport { CanvasType, LensCore } from \"../lens-core-module\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { lensCoreFactory } from \"../lens-core-module/loader/lensCoreFactory\";\nimport { LensLaunchParams } from \"../lens/LensLaunchParams\";\nimport { getTypeName, guard, validate } from \"../common/validate\";\nimport { TypedEventTarget } from \"../events/TypedEventTarget\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { CameraKitDeviceInfo, CameraKitDeviceOptions, CameraKitSource } from \"../media-sources/CameraKitSource\";\nimport { cameraKitSourceError, LensExecutionError } from \"../namedErrors\";\nimport { createMediaStreamSource } from \"../media-sources/MediaStreamSource\";\nimport { createVideoSource } from \"../media-sources/VideoSource\";\nimport { getLogger, LogEntry } from \"../logger/logger\";\nimport { errorLoggingDecorator } from \"../logger/errorLoggingDecorator\";\nimport { logEntriesFactory } from \"../logger/logEntries\";\nimport { PageVisibility, pageVisibilityFactory } from \"../common/pageVisibility\";\nimport { LensPerformanceMetrics } from \"./LensPerformanceMetrics\";\nimport { lensStateFactory, LensState } from \"./lensState\";\nimport { SessionState, sessionStateFactory } from \"./sessionState\";\nimport { Keyboard, lensKeyboardFactory, LensKeyboard } from \"./LensKeyboard\";\nimport { CameraKitSessionEvents, isPublicLensError, isSessionError } from \"./CameraKitSessionEvents\";\n\nconst logger = getLogger(\"CameraKitSession\");\nconst log = errorLoggingDecorator(logger);\n\nfunction isOptionalRenderTarget(value: unknown): value is RenderTarget | undefined {\n    return value === \"live\" || value === \"capture\" || value === undefined;\n}\n\n/**\n * Enumerates the supported render targets.\n *\n * Lenses may render to different render targets, as designed by the lens creator. In CameraKit, it's possible to choose\n * which render target to render, and the result for each target is available as a separate `<canvas>` element.\n *\n * @category Rendering\n * @category Lenses\n */\nexport type RenderTarget = \"live\" | \"capture\";\n\n/**\n * A CameraKitSession represents a single rendering pipeline connecting an input media source to output `<canvas>`\n * elements. When a Lens is applied to the session, CameraKit uses the Lens to transform the input media into rendered\n * output.\n *\n * CameraKitSession is the primary object that applications interact with when integrating the CameraKit SDK.\n *\n * A CameraKitSession instance is obtained by calling {@link CameraKit.createSession}.\n *\n * @example\n * ```ts\n * const cameraKit = await bootstrapCameraKit(config)\n * const session = await cameraKit.createSession()\n * ```\n *\n * @category Rendering\n * @category Lenses\n */\nexport class CameraKitSession {\n    /**\n     * CameraKitSession renders video output to a `<canvas>` element. In fact, each session contains two canvas outputs\n     * corresponding to the RenderTargets used by Lens creators, when using LensStudio to create a Lens.\n     *\n     * The `live` output renders content suitable for the Lens user (e.g. it may contain additional UI elements\n     * applicable only to the person applying the lens). The `capture` output renders content suitable for sharing with\n     * other users (e.g. sent to the other members of a video call, or saved to disk for sharing later).\n     *\n     * For many lenses, these outputs are identical – but each lens is free to render differently, based on its own\n     * use-case.\n     */\n    readonly output: {\n        live: HTMLCanvasElement;\n        capture: HTMLCanvasElement;\n    };\n\n    /**\n     * Indicates whether or not the session is currently rendering. If `false`, rendering is stopped. Otherwise the\n     * value indicates which output is being rendered.\n     */\n    playing: false | RenderTarget;\n\n    /**\n     * Add event listeners here to handle events which occur during the CameraKitSession.\n     *\n     * **Note:** Applications may want to handle the `error` event, and check the contained error type -- if the type\n     * is {@link LensExecutionError}, this means the current lens was unable to render and CameraKit will automatically\n     * remove the lens.\n     *\n     * @example\n     * ```ts\n     * cameraKitSession.events.addEventListener('error', ({ detail }) => {\n     *   if (detail.error.name === 'LensExecutionError') {\n     *     console.log(`Lens ${detail.lens.name} encountered an error and was removed. Please pick a different lens.`)\n     *   }\n     * })\n     * ```\n     */\n    readonly events = new TypedEventTarget<CameraKitSessionEvents>();\n\n    /**\n     * Use this to measure current lens performance.\n     */\n    readonly metrics: LensPerformanceMetrics;\n\n    private readonly removePageVisibilityHandlers: () => void;\n    private source?: CameraKitSource;\n    private subscriptions: Subscription[];\n\n    /**\n     * @internal\n     */\n    constructor(\n        /**\n         * Use this to interact with lenses which require text input.\n         */\n        public readonly keyboard: Keyboard,\n\n        private readonly lensCore: LensCore,\n        private readonly sessionState: SessionState,\n        private readonly lensState: LensState,\n        logEntries: Observable<LogEntry>,\n        pageVisibility: PageVisibility\n    ) {\n        const outputs = this.lensCore.getOutputCanvases();\n        this.output = {\n            live: outputs[this.lensCore.CanvasType.Preview.value],\n            capture: outputs[this.lensCore.CanvasType.Capture.value],\n        };\n        this.playing = false;\n\n        this.metrics = new LensPerformanceMetrics(this.lensCore);\n\n        const removeOnHidden = pageVisibility.onPageHidden(() => this.sessionState.dispatch(\"suspend\", this));\n        const removeOnVisible = pageVisibility.onPageVisible(() => this.sessionState.dispatch(\"resume\", this));\n        this.removePageVisibilityHandlers = () => {\n            removeOnHidden();\n            removeOnVisible();\n        };\n\n        const sessionErrors = logEntries.pipe(\n            filter((entry) => entry.level === \"error\"),\n            map((entry) => entry.messages.find((e) => e instanceof Error)),\n            filter(isSessionError)\n        );\n\n        this.subscriptions = [\n            // In case of an abort error, the only option is to destroy the current session,\n            // as it becomes inoperable.\n            sessionErrors.pipe(filter((error) => error.name === \"LensAbortError\")).subscribe(() => this.destroy()),\n\n            // In case of LensCore lens execution error, we must remove the lens from rendering\n            // NOTE: LensCore doesn't differentiate recoverable vs non-recoverable errors and\n            // it is recommened to always remove the lens.\n            sessionErrors\n                .pipe(filter((error) => error.name === \"LensExecutionError\"))\n                .subscribe(() => this.removeLens()),\n\n            // Report public session errors to apps\n            sessionErrors.pipe(filter(isPublicLensError)).subscribe((error) => {\n                const state = lensState.getState();\n                if (!isState(state, \"noLensApplied\")) {\n                    this.events.dispatchEvent(new TypedCustomEvent(\"error\", { error, lens: state.data }));\n                } else {\n                    // NOTE: at this point the error is already reported, so we can just log a warning\n                    logger.warn(\n                        new Error(\"Lens error occurred even though there is no active lens.\", {\n                            cause: error,\n                        })\n                    );\n                }\n            }),\n        ];\n    }\n\n    /**\n     * Apply a Lens to this session.\n     *\n     * This method will download (and cache) the Lens executable, and then use that Lens for rendering. If the session\n     * is currently playing, this will immediately update the rendered output. Otherwise, the new Lens will be used\n     * when session playback in resumed.\n     *\n     * Calling `applyLens` replaces any prior Lens – only one Lens is allowed at a time (per session).\n     *\n     * **NOTE**: Errors may occur after the Lens is applied. If the Lens encounters errors while rendering,\n     * Camera Kit will automatically remove the Lens from the session and emit a {@link LensExecutionError} event.\n     * Applications may want to listen for this error and, for example,\n     * prevent the Lens from being selected again by the user.\n     *\n     * ```ts\n     * session.events.addEventListener(\"error\", ({ detail }) => {\n     *   if (detail.error.name === \"LensExecutionError\") {\n     *     preventFutureLensSelection(detail.lens);\n     *     showMessage(\"We're sorry, but the Lens you selected encountered an error. Please choose a different Lens.\");\n     *   }\n     * });\n     * ```\n     *\n     * @param lens The Lens to apply to this session.\n     * @param launchParams: This can optionally be provided to pass some initial data to the lens – only certain lenses\n     * expect launch data.\n     * @returns A promise which can have the following results:\n     * 1. Resolved with `true`: the lens has been applied.\n     * 2. Resolved with `false`: the lens has not been applied, but no error occurred – this can happen if a\n     * subsequent call to `applyLens` interrupted the lens application.\n     * 3. Rejected: the lens has not been applied because an error occurred. This can happen if:\n     *   - The lens ID cannot be found in the LensRepository (use LensRepository to load the lens before calling this\n     *     method)\n     *   - Lens content download fails, or the download of any required lens assets fails.\n     *   - An internal failure occurs in the Lens rendering engine when attempting to apply the lens.\n     */\n    @validate\n    @log\n    async applyLens(@guard(isLens) lens: Lens, launchParams?: LensLaunchParams): Promise<boolean> {\n        const action = this.lensState.actions.applyLens({ lens, launchParams });\n        return firstValueFrom(\n            of(action).pipe(\n                dispatch(this.lensState),\n\n                // If another applyLens occurs while we're waiting, resolve this applyLens promise early – we're no\n                // longer waiting for the requested lens to be applied.\n                takeUntil(\n                    this.lensState.events.pipe(\n                        forActions(\"applyLens\"),\n                        filter(([a]) => a !== action)\n                    )\n                ),\n\n                // If lens application failed, convert this into a rejected promise by throwing the error.\n                tap(([a]) => {\n                    if (isAction(a, \"applyLensFailed\") && a.data.lens.id === lens.id) throw a.data.error;\n                }),\n\n                inStates(\"lensApplied\"),\n\n                map(() => true)\n            ),\n            // The default value is used if `takeUntil` completes the Observable early – i.e. the lens was not\n            // applied (application was interrupted by a new call to `applyLens`), so we'll resolve with `false`.\n            { defaultValue: false }\n        );\n    }\n\n    /**\n     * Remove a Lens from this session.\n     *\n     * When a Lens is removed, rendering continues if the session is playing. It will just render the session input\n     * directly to the outputs without any image processing.\n     *\n     * @returns A promise which can have the following results:\n     * 1. Resolved with `true`: the session's rendered output has no lens applied.\n     * 2. Resolved with `false`: the current lens has been removed, but a subsequent call to `applyLens` means that the\n     * session's rendered output will still have a (new) lens applied.\n     * 3. Rejected: the lens has failed to be removed. This can happen if an internal failure occurs in the Lens\n     * rendering engine when attempting to remove the lens.\n     */\n    @log\n    async removeLens(): Promise<boolean> {\n        if (isState(this.lensState.getState(), \"noLensApplied\")) return true;\n        return firstValueFrom(\n            of(this.lensState.actions.removeLens()).pipe(\n                dispatch(this.lensState),\n                // If lens removal failed, convert this into a rejected promise by throwing the error.\n                tap(([a]) => {\n                    if (isAction(a, \"removeLensFailed\")) throw a.data;\n                }),\n                inStates(\"noLensApplied\"),\n\n                // If applyLens is called while we're waiting for removal, complete immediately – applying the next lens\n                // will replace the current one.\n                takeUntil(this.lensState.events.pipe(forActions(\"applyLens\"))),\n                map(() => true)\n            ),\n            // The default value is used if `takeUntil` completes the Observable early (otherwise firstValueFrom will\n            // return a rejected Promise).\n            { defaultValue: false }\n        );\n    }\n\n    /**\n     * Start/resume session playback – LensCore will begin rendering frames to the output.\n     *\n     * If no source has been set for the session, calling `play()` will update the playing state, but no actual image\n     * processing will occur until `setSource()` is called.\n     *\n     * @example\n     * ```ts\n     * const cameraKitSession = await cameraKit.createSession()\n     * await cameraKitSession.setSource(mySource)\n     * await cameraKitSession.play()\n     *\n     * // If you call `play` before `setSource`, the call to `play` will resolve but playback will only begin once a\n     * // media source has been set.\n     * ```\n     *\n     * @param target Specify the {@link RenderTarget} to render. Defaults to the `live` RenderTarget.\n     * @returns Promise resolves when playback state has been updated. If no source has been set, this means `play` will\n     * resolve before any frames are processed -- but once a source is set, frames will immediately begin processing.\n     */\n    @validate\n    @log\n    async play(@guard(isOptionalRenderTarget) target: RenderTarget = \"live\"): Promise<void> {\n        if (this.playing) return;\n        this.playing = target;\n\n        const type = this.renderTargetToCanvasType(target);\n        return this.lensCore.playCanvas({ type }).catch((error) => {\n            this.playing = false;\n            throw error;\n        });\n    }\n\n    /**\n     * Pause session playback – LensCore will stop rendering frames to the output.\n     *\n     * @param target Specify the RenderTarget to pause playback. May be either `'live'` or `'capture'`.\n     * Default is `'live'`.\n     * @returns Promise resolves when playback has stopped.\n     */\n    @validate\n    @log\n    async pause(@guard(isOptionalRenderTarget) target: RenderTarget = \"live\"): Promise<void> {\n        if (!this.playing) return;\n        const priorPlayingState = this.playing;\n        this.playing = false;\n\n        const type = this.renderTargetToCanvasType(target);\n        return this.lensCore.pauseCanvas({ type }).catch((error) => {\n            this.playing = priorPlayingState;\n            throw error;\n        });\n    }\n\n    /**\n     * Mute all sounds (default SDK state is unmuted).\n     *\n     * @param fade Do we want audio to fade out?\n     */\n    @log\n    mute(fade: boolean = false): void {\n        this.lensCore.setAllSoundsMuted({\n            muted: true,\n            fade,\n        });\n    }\n\n    /**\n     * Unmute all sounds.\n     *\n     * @param fade Do we want audio to fade in?\n     */\n    @log\n    unmute(fade: boolean = false): void {\n        this.lensCore.setAllSoundsMuted({\n            muted: false,\n            fade,\n        });\n    }\n\n    /**\n     * Set the media source for this session.\n     *\n     * Sessions may only have one source at a time - if `setSource` is called multiple times, subsequent calls replace\n     * the prior source. Setting the source does not trigger rendering (that’s done by `session.play()`). If the session\n     * is already playing, setting the source will immediately begin rendering the new source.\n     *\n     * The CameraKit SDK provides implementations for various common sources, which applications can create using the\n     * following functions:\n     * - {@link createMediaStreamSource}\n     * - {@link createVideoSource}\n     * - {@link createImageSource}\n     *\n     * @param source A CameraKitSource object representing input media (e.g. a webcam stream, video, or some other\n     * source of image data), which CameraKit will supply to Lenses in order for them to render effects on top of that\n     * source.\n     * @returns Promise is resolved when the source has successfully be set. If the session was already in the playing\n     * state, the Promise resolves when the first frame from the new source has been rendered. The resolved value is\n     * the {@link CameraKitSource} object attached to the session.\n     */\n    async setSource(source: CameraKitSource): Promise<CameraKitSource>;\n    /** Deprecated: Support for CameraKitDeviceInfo will be removed in future releases.\n     * Please use CameraKitDeviceOptions instead which accepts the \"environment\" and \"user\" cameraType\n     * @deprecated\n     */\n    async setSource(\n        source: MediaStream | HTMLVideoElement,\n        options?: Partial<CameraKitDeviceInfo>\n    ): Promise<CameraKitSource>;\n    async setSource(\n        source: MediaStream | HTMLVideoElement,\n        options?: Partial<CameraKitDeviceOptions>\n    ): Promise<CameraKitSource>;\n    @validate\n    @log\n    async setSource(\n        source: CameraKitSource | MediaStream | HTMLVideoElement,\n        options: Partial<CameraKitDeviceInfo | CameraKitDeviceOptions> = {}\n    ): Promise<CameraKitSource> {\n        await this.safelyDetachSource();\n\n        // For convenience, we allow callers to pass in native objects (e.g. MediaStream) as well as CameraKitSource.\n        // Native objects are wrapped in corresponding CameraKitSource classes with default options.\n        const cameraKitSource =\n            source instanceof MediaStream\n                ? createMediaStreamSource(source, options)\n                : source instanceof HTMLVideoElement\n                ? createVideoSource(source, options)\n                : source;\n\n        const priorPlayingState = this.playing;\n        this.playing = false;\n\n        // The source will provide its data to LensCore, and use other LensCore APIs (e.g. setRenderSize,\n        // setInputTransform) to render the source correctly.\n        await cameraKitSource.attach(this.lensCore, (error) => {\n            logger.error(cameraKitSourceError(\"Error occurred during source attachment.\", error));\n        });\n\n        // If attachment is successful, we'll update our source so that we can detach it later.\n        this.source = cameraKitSource;\n\n        // Finally we'll resume playback, if appropriate.\n        if (priorPlayingState) {\n            await this.play(priorPlayingState);\n        }\n\n        return cameraKitSource;\n    }\n\n    /**\n     * Set an FPS limit.\n     *\n     * This may be useful to reduce CPU/GPU resource usage by CameraKit if, for example, the input\n     * media source has a low FPS – CameraKit would then not try to render more frequently than the source produces\n     * new frames.\n     *\n     * This may also be useful to gracefully degrade performance in situations where lowering FPS is preferable over\n     * alternatives.\n     *\n     * @param fpsLimit A maximum FPS, rendering will not exceed this limit\n     * @returns Promise is resolved when the limit is successfully set.\n     */\n    @log\n    async setFPSLimit(fpsLimit: number): Promise<void> {\n        // LensCore uses 0 to remove the limit.\n        const fps = fpsLimit < Number.POSITIVE_INFINITY ? fpsLimit : 0;\n        return this.lensCore.setFPSLimit({ fps });\n    }\n\n    /**\n     * Destroy the session.\n     *\n     * The session will become inoperable. Frame processing stops, and any session-scoped graphical resources are freed.\n     */\n    @log\n    async destroy(): Promise<void> {\n        try {\n            await this.lensCore.clearAllLenses();\n            await this.lensCore.teardown();\n        } catch (error) {\n            // If a LensCore is in an aborted state, the above lines may throw an error.\n            // In such cases, we should continue with the cleanup process.\n            // We are also not interested in reporting these errors to our backend.\n            logger.warn(\"An error occurred in LensCore during the session termination process.\", error);\n        }\n        this.subscriptions.forEach((sub) => sub.unsubscribe());\n        await this.safelyDetachSource();\n        this.removePageVisibilityHandlers();\n        this.sessionState.dispatch(\"destroy\", undefined);\n    }\n\n    private renderTargetToCanvasType(target: RenderTarget): CanvasType {\n        return target === \"capture\" ? this.lensCore.CanvasType.Capture : this.lensCore.CanvasType.Preview;\n    }\n\n    private async safelyDetachSource(): Promise<void> {\n        if (this.source) {\n            try {\n                await this.source.detach((error) => {\n                    logger.error(cameraKitSourceError(\"Error occurred during source detachment.\", error));\n                });\n                // If there's a failure to detach, we will report the error and proceed. Failure to detach may lead to a\n                // memory leak, but it shouldn't prevent us from switching to the new source.\n            } catch (error) {\n                logger.error(\n                    cameraKitSourceError(`Detaching prior source of type ${getTypeName(this.source)} failed.`, error)\n                );\n            }\n        }\n    }\n}\n\n/**\n * @internal\n */\nexport const cameraKitSessionFactory = Injectable(\n    \"CameraKitSession\",\n    [\n        lensCoreFactory.token,\n        logEntriesFactory.token,\n        lensKeyboardFactory.token,\n        sessionStateFactory.token,\n        lensStateFactory.token,\n        pageVisibilityFactory.token,\n    ] as const,\n    (\n        lensCore: LensCore,\n        logEntries: Observable<LogEntry>,\n        keyboard: LensKeyboard,\n        sessionState: SessionState,\n        lensState: LensState,\n        pageVisibility: PageVisibility\n    ) => new CameraKitSession(keyboard, lensCore, sessionState, lensState, logEntries, pageVisibility)\n);\n", "import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { lensAssetError } from \"../../namedErrors\";\nimport { lensCoreFactory, LensCore } from \"../../lens-core-module\";\nimport { getLogger } from \"../../logger/logger\";\nimport { MakeTaggedBusinessEvent } from \"../../metrics/businessEventsReporter\";\nimport { toPublicLens } from \"../Lens\";\nimport { LensRepository, lensRepositoryFactory } from \"../LensRepository\";\nimport { LensState, lensStateFactory } from \"../../session/lensState\";\nimport { LensAssetRepository, lensAssetRepositoryFactory } from \"./LensAssetRepository\";\n\nconst logger = getLogger(\"LensAssetProvider\");\nconst maxConsecutiveErrors = 3;\n\n/**\n * The AssetValidationFailed metric reports every time we handle an asset checksum validation failure.\n */\nexport type AssetValidationFailed = MakeTaggedBusinessEvent<\"assetValidationFailed\">;\n\n/**\n * Registers a remote asset provider function with a given instance of LensCore.\n *\n * *Note:* LensCoreModule.initialize must be called on the desired LensCoreModule instance **prior** to passing it\n * to the LensAssetsProvider constructor. If this class is instantiated with a LensCoreModule that has not been\n * initialized, the registry of the asset provider function will fail silently and no remote assets will be loaded.\n * @internal\n */\nexport const registerLensAssetsProvider = Injectable(\n    \"registerLensAssetsProvider\",\n    [\n        lensCoreFactory.token,\n        lensRepositoryFactory.token,\n        lensAssetRepositoryFactory.token,\n        lensStateFactory.token,\n    ] as const,\n    (\n        lensCore: LensCore,\n        lensRepository: LensRepository,\n        lensAssetRepository: LensAssetRepository,\n        lensState: LensState\n    ) => {\n        const consecutiveErrorsPerAsset = new Map<string, number>();\n\n        lensCore.setRemoteAssetsProvider(async (assetDescriptor) => {\n            // Fetch an asset and provide it to LensCore. If fetching the asset fails we give LensCore\n            // an empty response (which it may handle in a variety of ways, e.g. retry, gracefully\n            // degrade lens behavior, throw error) and then reject.\n            const { assetId, assetType, effectId } = assetDescriptor;\n\n            try {\n                if ((consecutiveErrorsPerAsset.get(assetId) ?? 0) > maxConsecutiveErrors) {\n                    throw new Error(`Maximum consecutive asset load errors reached for asset ${assetId}`);\n                }\n                const lensId = effectId ?? lensState.getState().data?.id;\n                const lens = lensId ? lensRepository.getLensMetadata(lensId) : undefined;\n\n                await lensAssetRepository.loadAsset(\n                    assetDescriptor,\n                    lens && toPublicLens(lens),\n                    lens?.content?.assetManifest\n                );\n                consecutiveErrorsPerAsset.set(assetId, 0);\n            } catch (error) {\n                // if an error occurs, LensCore handles things in different ways\n                // depending on the active lens. It might: 1) retry, 2) gracefully degrade lens behavior,\n                // 3) lens JS might throw, which will be passed to the exceptionHandler we register with LensCore.\n                lensCore.provideRemoteAssetsResponse({\n                    assetId,\n                    assetType,\n                });\n\n                const consecutiveErrors = (consecutiveErrorsPerAsset.get(assetId) ?? 0) + 1;\n                consecutiveErrorsPerAsset.set(assetId, consecutiveErrors);\n\n                // We've already reported `maxConsecutiveErrors` number of errors for this asset, so we can skip\n                // logging additional errors.\n                if (consecutiveErrors <= maxConsecutiveErrors) {\n                    logger.error(lensAssetError(`Error occurred while handling lens asset ${assetId} request.`, error));\n                } else {\n                    logger.warn(`Maximum consecutive asset load errors reached for asset ${assetId}`);\n                }\n            }\n        });\n    }\n);\n", "import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport enum HttpRequestMethod {\n    HTTP_METHOD_UNSET = \"HTTP_METHOD_UNSET\",\n    HTTP_METHOD_GET = \"HTTP_METHOD_GET\",\n    HTTP_METHOD_POST = \"HTTP_METHOD_POST\",\n    HTTP_METHOD_PUT = \"HTTP_METHOD_PUT\",\n    HTTP_METHOD_DELETE = \"HTTP_METHOD_DELETE\",\n    HTTP_METHOD_PATCH = \"HTTP_METHOD_PATCH\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function httpRequestMethodFromJSON(object: any): HttpRequestMethod {\n    switch (object) {\n        case 0:\n        case \"HTTP_METHOD_UNSET\":\n            return HttpRequestMethod.HTTP_METHOD_UNSET;\n        case 1:\n        case \"HTTP_METHOD_GET\":\n            return HttpRequestMethod.HTTP_METHOD_GET;\n        case 2:\n        case \"HTTP_METHOD_POST\":\n            return HttpRequestMethod.HTTP_METHOD_POST;\n        case 3:\n        case \"HTTP_METHOD_PUT\":\n            return HttpRequestMethod.HTTP_METHOD_PUT;\n        case 4:\n        case \"HTTP_METHOD_DELETE\":\n            return HttpRequestMethod.HTTP_METHOD_DELETE;\n        case 5:\n        case \"HTTP_METHOD_PATCH\":\n            return HttpRequestMethod.HTTP_METHOD_PATCH;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HttpRequestMethod.UNRECOGNIZED;\n    }\n}\nexport function httpRequestMethodToNumber(object: HttpRequestMethod): number {\n    switch (object) {\n        case HttpRequestMethod.HTTP_METHOD_UNSET:\n            return 0;\n        case HttpRequestMethod.HTTP_METHOD_GET:\n            return 1;\n        case HttpRequestMethod.HTTP_METHOD_POST:\n            return 2;\n        case HttpRequestMethod.HTTP_METHOD_PUT:\n            return 3;\n        case HttpRequestMethod.HTTP_METHOD_DELETE:\n            return 4;\n        case HttpRequestMethod.HTTP_METHOD_PATCH:\n            return 5;\n        default:\n            return 0;\n    }\n}\nexport enum ResponseCode {\n    RESPONSE_CODE_UNSET = \"RESPONSE_CODE_UNSET\",\n    SUCCESS = \"SUCCESS\",\n    REDIRECTED = \"REDIRECTED\",\n    BAD_REQUEST = \"BAD_REQUEST\",\n    ACCESS_DENIED = \"ACCESS_DENIED\",\n    NOT_FOUND = \"NOT_FOUND\",\n    TIMEOUT = \"TIMEOUT\",\n    REQUEST_TOO_LARGE = \"REQUEST_TOO_LARGE\",\n    SERVER_ERROR = \"SERVER_ERROR\",\n    CANCELLED = \"CANCELLED\",\n    PROXY_ERROR = \"PROXY_ERROR\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function responseCodeFromJSON(object: any): ResponseCode {\n    switch (object) {\n        case 0:\n        case \"RESPONSE_CODE_UNSET\":\n            return ResponseCode.RESPONSE_CODE_UNSET;\n        case 1:\n        case \"SUCCESS\":\n            return ResponseCode.SUCCESS;\n        case 2:\n        case \"REDIRECTED\":\n            return ResponseCode.REDIRECTED;\n        case 3:\n        case \"BAD_REQUEST\":\n            return ResponseCode.BAD_REQUEST;\n        case 4:\n        case \"ACCESS_DENIED\":\n            return ResponseCode.ACCESS_DENIED;\n        case 5:\n        case \"NOT_FOUND\":\n            return ResponseCode.NOT_FOUND;\n        case 6:\n        case \"TIMEOUT\":\n            return ResponseCode.TIMEOUT;\n        case 7:\n        case \"REQUEST_TOO_LARGE\":\n            return ResponseCode.REQUEST_TOO_LARGE;\n        case 8:\n        case \"SERVER_ERROR\":\n            return ResponseCode.SERVER_ERROR;\n        case 9:\n        case \"CANCELLED\":\n            return ResponseCode.CANCELLED;\n        case 10:\n        case \"PROXY_ERROR\":\n            return ResponseCode.PROXY_ERROR;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseCode.UNRECOGNIZED;\n    }\n}\nexport function responseCodeToNumber(object: ResponseCode): number {\n    switch (object) {\n        case ResponseCode.RESPONSE_CODE_UNSET:\n            return 0;\n        case ResponseCode.SUCCESS:\n            return 1;\n        case ResponseCode.REDIRECTED:\n            return 2;\n        case ResponseCode.BAD_REQUEST:\n            return 3;\n        case ResponseCode.ACCESS_DENIED:\n            return 4;\n        case ResponseCode.NOT_FOUND:\n            return 5;\n        case ResponseCode.TIMEOUT:\n            return 6;\n        case ResponseCode.REQUEST_TOO_LARGE:\n            return 7;\n        case ResponseCode.SERVER_ERROR:\n            return 8;\n        case ResponseCode.CANCELLED:\n            return 9;\n        case ResponseCode.PROXY_ERROR:\n            return 10;\n        default:\n            return 0;\n    }\n}\nexport interface PerformHttpCallRequest {\n    url: string;\n    method: HttpRequestMethod;\n    headers: {\n        [key: string]: string;\n    };\n    body: Uint8Array;\n    apiSpecId: string;\n    isStudioDev: boolean;\n}\nexport interface PerformHttpCallRequest_HeadersEntry {\n    key: string;\n    value: string;\n}\nexport interface PerformHttpCallResponse {\n    code: number;\n    headers: {\n        [key: string]: string;\n    };\n    body: Uint8Array;\n}\nexport interface PerformHttpCallResponse_HeadersEntry {\n    key: string;\n    value: string;\n}\nexport interface GetOAuth2InfoRequest {\n    apiSpecId: string;\n}\nexport interface GetOAuth2InfoResponse {\n    clientId: string;\n    grantType: GetOAuth2InfoResponse_GrantType;\n    authorizationUrl: string;\n    scope: string;\n}\nexport enum GetOAuth2InfoResponse_GrantType {\n    GRANT_TYPE_UNSET = \"GRANT_TYPE_UNSET\",\n    AUTHORIZATION_CODE = \"AUTHORIZATION_CODE\",\n    AUTHORIZATION_CODE_WITH_PKCE = \"AUTHORIZATION_CODE_WITH_PKCE\",\n    IMPLICIT = \"IMPLICIT\",\n    CLIENT_CREDENTIALS = \"CLIENT_CREDENTIALS\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function getOAuth2InfoResponse_GrantTypeFromJSON(object: any): GetOAuth2InfoResponse_GrantType {\n    switch (object) {\n        case 0:\n        case \"GRANT_TYPE_UNSET\":\n            return GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET;\n        case 1:\n        case \"AUTHORIZATION_CODE\":\n            return GetOAuth2InfoResponse_GrantType.AUTHORIZATION_CODE;\n        case 2:\n        case \"AUTHORIZATION_CODE_WITH_PKCE\":\n            return GetOAuth2InfoResponse_GrantType.AUTHORIZATION_CODE_WITH_PKCE;\n        case 3:\n        case \"IMPLICIT\":\n            return GetOAuth2InfoResponse_GrantType.IMPLICIT;\n        case 4:\n        case \"CLIENT_CREDENTIALS\":\n            return GetOAuth2InfoResponse_GrantType.CLIENT_CREDENTIALS;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return GetOAuth2InfoResponse_GrantType.UNRECOGNIZED;\n    }\n}\nexport function getOAuth2InfoResponse_GrantTypeToNumber(object: GetOAuth2InfoResponse_GrantType): number {\n    switch (object) {\n        case GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET:\n            return 0;\n        case GetOAuth2InfoResponse_GrantType.AUTHORIZATION_CODE:\n            return 1;\n        case GetOAuth2InfoResponse_GrantType.AUTHORIZATION_CODE_WITH_PKCE:\n            return 2;\n        case GetOAuth2InfoResponse_GrantType.IMPLICIT:\n            return 3;\n        case GetOAuth2InfoResponse_GrantType.CLIENT_CREDENTIALS:\n            return 4;\n        default:\n            return 0;\n    }\n}\nexport interface TokenExchangeError {\n    error: TokenExchangeError_TokenExchangeErrorType;\n    errorDescription: string;\n}\nexport enum TokenExchangeError_TokenExchangeErrorType {\n    ERROR_TYPE_UNSET = \"ERROR_TYPE_UNSET\",\n    INVALID_REQUEST = \"INVALID_REQUEST\",\n    INVALID_CLIENT = \"INVALID_CLIENT\",\n    INVALID_GRANT = \"INVALID_GRANT\",\n    UNAUTHORIZED_CLIENT = \"UNAUTHORIZED_CLIENT\",\n    UNSUPPORTED_GRANT_TYPE = \"UNSUPPORTED_GRANT_TYPE\",\n    INVALID_SCOPE = \"INVALID_SCOPE\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function tokenExchangeError_TokenExchangeErrorTypeFromJSON(object: any): TokenExchangeError_TokenExchangeErrorType {\n    switch (object) {\n        case 0:\n        case \"ERROR_TYPE_UNSET\":\n            return TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET;\n        case 1:\n        case \"INVALID_REQUEST\":\n            return TokenExchangeError_TokenExchangeErrorType.INVALID_REQUEST;\n        case 2:\n        case \"INVALID_CLIENT\":\n            return TokenExchangeError_TokenExchangeErrorType.INVALID_CLIENT;\n        case 3:\n        case \"INVALID_GRANT\":\n            return TokenExchangeError_TokenExchangeErrorType.INVALID_GRANT;\n        case 4:\n        case \"UNAUTHORIZED_CLIENT\":\n            return TokenExchangeError_TokenExchangeErrorType.UNAUTHORIZED_CLIENT;\n        case 5:\n        case \"UNSUPPORTED_GRANT_TYPE\":\n            return TokenExchangeError_TokenExchangeErrorType.UNSUPPORTED_GRANT_TYPE;\n        case 6:\n        case \"INVALID_SCOPE\":\n            return TokenExchangeError_TokenExchangeErrorType.INVALID_SCOPE;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return TokenExchangeError_TokenExchangeErrorType.UNRECOGNIZED;\n    }\n}\nexport function tokenExchangeError_TokenExchangeErrorTypeToNumber(object: TokenExchangeError_TokenExchangeErrorType): number {\n    switch (object) {\n        case TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET:\n            return 0;\n        case TokenExchangeError_TokenExchangeErrorType.INVALID_REQUEST:\n            return 1;\n        case TokenExchangeError_TokenExchangeErrorType.INVALID_CLIENT:\n            return 2;\n        case TokenExchangeError_TokenExchangeErrorType.INVALID_GRANT:\n            return 3;\n        case TokenExchangeError_TokenExchangeErrorType.UNAUTHORIZED_CLIENT:\n            return 4;\n        case TokenExchangeError_TokenExchangeErrorType.UNSUPPORTED_GRANT_TYPE:\n            return 5;\n        case TokenExchangeError_TokenExchangeErrorType.INVALID_SCOPE:\n            return 6;\n        default:\n            return 0;\n    }\n}\nexport interface TokenDetails {\n    accessToken: string;\n    tokenType: string;\n    expiresInSeconds: number;\n    refreshToken: string;\n    scope: string;\n}\nexport interface PerformTokenExchangeRequest {\n    apiSpecId: string;\n    authorizationCode: string;\n    codeVerifier: string;\n}\nexport interface PerformTokenExchangeResponse {\n    response?: {\n        $case: \"tokenDetails\";\n        tokenDetails: TokenDetails;\n    } | {\n        $case: \"error\";\n        error: TokenExchangeError;\n    };\n}\nexport interface RefreshTokenRequest {\n    apiSpecId: string;\n    refreshToken: string;\n}\nexport interface RefreshTokenResponse {\n    response?: {\n        $case: \"tokenDetails\";\n        tokenDetails: TokenDetails;\n    } | {\n        $case: \"error\";\n        error: TokenExchangeError;\n    };\n}\nexport interface PerformApiCallRequest {\n    apiSpecSetId: string;\n    endpointRefId: string;\n    parameters: {\n        [key: string]: string;\n    };\n    body: Uint8Array;\n    lensId: string;\n    isStudioDev: boolean;\n    cacheTtlSec: number;\n    linkedResources: LinkedResource[];\n}\nexport interface PerformApiCallRequest_ParametersEntry {\n    key: string;\n    value: string;\n}\nexport interface PerformApiCallResponse {\n    responseCode: ResponseCode;\n    metadata: {\n        [key: string]: string;\n    };\n    body: Uint8Array;\n    userLocationUsed: boolean;\n    linkedResources: LinkedResource[];\n}\nexport interface PerformApiCallResponse_MetadataEntry {\n    key: string;\n    value: string;\n}\nexport interface LinkedResource {\n    url: string;\n    encryptionKey: Uint8Array;\n}\nfunction createBasePerformHttpCallRequest(): PerformHttpCallRequest {\n    return {\n        url: \"\",\n        method: HttpRequestMethod.HTTP_METHOD_UNSET,\n        headers: {},\n        body: new Uint8Array(),\n        apiSpecId: \"\",\n        isStudioDev: false,\n    };\n}\nexport const PerformHttpCallRequest = {\n    encode(message: PerformHttpCallRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.url !== \"\") {\n            writer.uint32(10).string(message.url);\n        }\n        if (message.method !== HttpRequestMethod.HTTP_METHOD_UNSET) {\n            writer.uint32(16).int32(httpRequestMethodToNumber(message.method));\n        }\n        Object.entries(message.headers).forEach(([key, value]) => {\n            PerformHttpCallRequest_HeadersEntry.encode({ key: key as any, value }, writer.uint32(26).fork()).ldelim();\n        });\n        if (message.body.length !== 0) {\n            writer.uint32(34).bytes(message.body);\n        }\n        if (message.apiSpecId !== \"\") {\n            writer.uint32(42).string(message.apiSpecId);\n        }\n        if (message.isStudioDev === true) {\n            writer.uint32(48).bool(message.isStudioDev);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformHttpCallRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformHttpCallRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.url = reader.string();\n                    break;\n                case 2:\n                    message.method = httpRequestMethodFromJSON(reader.int32());\n                    break;\n                case 3:\n                    const entry3 = PerformHttpCallRequest_HeadersEntry.decode(reader, reader.uint32());\n                    if (entry3.value !== undefined) {\n                        message.headers[entry3.key] = entry3.value;\n                    }\n                    break;\n                case 4:\n                    message.body = reader.bytes();\n                    break;\n                case 5:\n                    message.apiSpecId = reader.string();\n                    break;\n                case 6:\n                    message.isStudioDev = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformHttpCallRequest>, I>>(object: I): PerformHttpCallRequest {\n        const message = createBasePerformHttpCallRequest();\n        message.url = object.url ?? \"\";\n        message.method = object.method ?? HttpRequestMethod.HTTP_METHOD_UNSET;\n        message.headers = Object.entries(object.headers ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.body = object.body ?? new Uint8Array();\n        message.apiSpecId = object.apiSpecId ?? \"\";\n        message.isStudioDev = object.isStudioDev ?? false;\n        return message;\n    },\n};\nfunction createBasePerformHttpCallRequest_HeadersEntry(): PerformHttpCallRequest_HeadersEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PerformHttpCallRequest_HeadersEntry = {\n    encode(message: PerformHttpCallRequest_HeadersEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformHttpCallRequest_HeadersEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformHttpCallRequest_HeadersEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformHttpCallRequest_HeadersEntry>, I>>(object: I): PerformHttpCallRequest_HeadersEntry {\n        const message = createBasePerformHttpCallRequest_HeadersEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBasePerformHttpCallResponse(): PerformHttpCallResponse {\n    return { code: 0, headers: {}, body: new Uint8Array() };\n}\nexport const PerformHttpCallResponse = {\n    encode(message: PerformHttpCallResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.code !== 0) {\n            writer.uint32(8).int32(message.code);\n        }\n        Object.entries(message.headers).forEach(([key, value]) => {\n            PerformHttpCallResponse_HeadersEntry.encode({ key: key as any, value }, writer.uint32(18).fork()).ldelim();\n        });\n        if (message.body.length !== 0) {\n            writer.uint32(26).bytes(message.body);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformHttpCallResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformHttpCallResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.int32();\n                    break;\n                case 2:\n                    const entry2 = PerformHttpCallResponse_HeadersEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.headers[entry2.key] = entry2.value;\n                    }\n                    break;\n                case 3:\n                    message.body = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformHttpCallResponse>, I>>(object: I): PerformHttpCallResponse {\n        const message = createBasePerformHttpCallResponse();\n        message.code = object.code ?? 0;\n        message.headers = Object.entries(object.headers ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.body = object.body ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBasePerformHttpCallResponse_HeadersEntry(): PerformHttpCallResponse_HeadersEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PerformHttpCallResponse_HeadersEntry = {\n    encode(message: PerformHttpCallResponse_HeadersEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformHttpCallResponse_HeadersEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformHttpCallResponse_HeadersEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformHttpCallResponse_HeadersEntry>, I>>(object: I): PerformHttpCallResponse_HeadersEntry {\n        const message = createBasePerformHttpCallResponse_HeadersEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetOAuth2InfoRequest(): GetOAuth2InfoRequest {\n    return { apiSpecId: \"\" };\n}\nexport const GetOAuth2InfoRequest = {\n    encode(message: GetOAuth2InfoRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.apiSpecId !== \"\") {\n            writer.uint32(10).string(message.apiSpecId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetOAuth2InfoRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetOAuth2InfoRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetOAuth2InfoRequest>, I>>(object: I): GetOAuth2InfoRequest {\n        const message = createBaseGetOAuth2InfoRequest();\n        message.apiSpecId = object.apiSpecId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetOAuth2InfoResponse(): GetOAuth2InfoResponse {\n    return { clientId: \"\", grantType: GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET, authorizationUrl: \"\", scope: \"\" };\n}\nexport const GetOAuth2InfoResponse = {\n    encode(message: GetOAuth2InfoResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.grantType !== GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET) {\n            writer.uint32(16).int32(getOAuth2InfoResponse_GrantTypeToNumber(message.grantType));\n        }\n        if (message.authorizationUrl !== \"\") {\n            writer.uint32(26).string(message.authorizationUrl);\n        }\n        if (message.scope !== \"\") {\n            writer.uint32(34).string(message.scope);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetOAuth2InfoResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetOAuth2InfoResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.grantType = getOAuth2InfoResponse_GrantTypeFromJSON(reader.int32());\n                    break;\n                case 3:\n                    message.authorizationUrl = reader.string();\n                    break;\n                case 4:\n                    message.scope = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetOAuth2InfoResponse>, I>>(object: I): GetOAuth2InfoResponse {\n        const message = createBaseGetOAuth2InfoResponse();\n        message.clientId = object.clientId ?? \"\";\n        message.grantType = object.grantType ?? GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET;\n        message.authorizationUrl = object.authorizationUrl ?? \"\";\n        message.scope = object.scope ?? \"\";\n        return message;\n    },\n};\nfunction createBaseTokenExchangeError(): TokenExchangeError {\n    return { error: TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET, errorDescription: \"\" };\n}\nexport const TokenExchangeError = {\n    encode(message: TokenExchangeError, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.error !== TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET) {\n            writer.uint32(8).int32(tokenExchangeError_TokenExchangeErrorTypeToNumber(message.error));\n        }\n        if (message.errorDescription !== \"\") {\n            writer.uint32(18).string(message.errorDescription);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): TokenExchangeError {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTokenExchangeError();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = tokenExchangeError_TokenExchangeErrorTypeFromJSON(reader.int32());\n                    break;\n                case 2:\n                    message.errorDescription = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<TokenExchangeError>, I>>(object: I): TokenExchangeError {\n        const message = createBaseTokenExchangeError();\n        message.error = object.error ?? TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET;\n        message.errorDescription = object.errorDescription ?? \"\";\n        return message;\n    },\n};\nfunction createBaseTokenDetails(): TokenDetails {\n    return { accessToken: \"\", tokenType: \"\", expiresInSeconds: 0, refreshToken: \"\", scope: \"\" };\n}\nexport const TokenDetails = {\n    encode(message: TokenDetails, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.accessToken !== \"\") {\n            writer.uint32(10).string(message.accessToken);\n        }\n        if (message.tokenType !== \"\") {\n            writer.uint32(18).string(message.tokenType);\n        }\n        if (message.expiresInSeconds !== 0) {\n            writer.uint32(24).int64(message.expiresInSeconds);\n        }\n        if (message.refreshToken !== \"\") {\n            writer.uint32(34).string(message.refreshToken);\n        }\n        if (message.scope !== \"\") {\n            writer.uint32(42).string(message.scope);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): TokenDetails {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTokenDetails();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accessToken = reader.string();\n                    break;\n                case 2:\n                    message.tokenType = reader.string();\n                    break;\n                case 3:\n                    message.expiresInSeconds = longToNumber(reader.int64() as Long);\n                    break;\n                case 4:\n                    message.refreshToken = reader.string();\n                    break;\n                case 5:\n                    message.scope = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<TokenDetails>, I>>(object: I): TokenDetails {\n        const message = createBaseTokenDetails();\n        message.accessToken = object.accessToken ?? \"\";\n        message.tokenType = object.tokenType ?? \"\";\n        message.expiresInSeconds = object.expiresInSeconds ?? 0;\n        message.refreshToken = object.refreshToken ?? \"\";\n        message.scope = object.scope ?? \"\";\n        return message;\n    },\n};\nfunction createBasePerformTokenExchangeRequest(): PerformTokenExchangeRequest {\n    return { apiSpecId: \"\", authorizationCode: \"\", codeVerifier: \"\" };\n}\nexport const PerformTokenExchangeRequest = {\n    encode(message: PerformTokenExchangeRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.apiSpecId !== \"\") {\n            writer.uint32(10).string(message.apiSpecId);\n        }\n        if (message.authorizationCode !== \"\") {\n            writer.uint32(18).string(message.authorizationCode);\n        }\n        if (message.codeVerifier !== \"\") {\n            writer.uint32(26).string(message.codeVerifier);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformTokenExchangeRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformTokenExchangeRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecId = reader.string();\n                    break;\n                case 2:\n                    message.authorizationCode = reader.string();\n                    break;\n                case 3:\n                    message.codeVerifier = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformTokenExchangeRequest>, I>>(object: I): PerformTokenExchangeRequest {\n        const message = createBasePerformTokenExchangeRequest();\n        message.apiSpecId = object.apiSpecId ?? \"\";\n        message.authorizationCode = object.authorizationCode ?? \"\";\n        message.codeVerifier = object.codeVerifier ?? \"\";\n        return message;\n    },\n};\nfunction createBasePerformTokenExchangeResponse(): PerformTokenExchangeResponse {\n    return { response: undefined };\n}\nexport const PerformTokenExchangeResponse = {\n    encode(message: PerformTokenExchangeResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.response?.$case === \"tokenDetails\") {\n            TokenDetails.encode(message.response.tokenDetails, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.response?.$case === \"error\") {\n            TokenExchangeError.encode(message.response.error, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformTokenExchangeResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformTokenExchangeResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.response = { $case: \"tokenDetails\", tokenDetails: TokenDetails.decode(reader, reader.uint32()) };\n                    break;\n                case 2:\n                    message.response = { $case: \"error\", error: TokenExchangeError.decode(reader, reader.uint32()) };\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformTokenExchangeResponse>, I>>(object: I): PerformTokenExchangeResponse {\n        const message = createBasePerformTokenExchangeResponse();\n        if (object.response?.$case === \"tokenDetails\" &&\n            object.response?.tokenDetails !== undefined &&\n            object.response?.tokenDetails !== null) {\n            message.response = {\n                $case: \"tokenDetails\",\n                tokenDetails: TokenDetails.fromPartial(object.response.tokenDetails),\n            };\n        }\n        if (object.response?.$case === \"error\" && object.response?.error !== undefined && object.response?.error !== null) {\n            message.response = { $case: \"error\", error: TokenExchangeError.fromPartial(object.response.error) };\n        }\n        return message;\n    },\n};\nfunction createBaseRefreshTokenRequest(): RefreshTokenRequest {\n    return { apiSpecId: \"\", refreshToken: \"\" };\n}\nexport const RefreshTokenRequest = {\n    encode(message: RefreshTokenRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.apiSpecId !== \"\") {\n            writer.uint32(10).string(message.apiSpecId);\n        }\n        if (message.refreshToken !== \"\") {\n            writer.uint32(18).string(message.refreshToken);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): RefreshTokenRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRefreshTokenRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecId = reader.string();\n                    break;\n                case 2:\n                    message.refreshToken = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<RefreshTokenRequest>, I>>(object: I): RefreshTokenRequest {\n        const message = createBaseRefreshTokenRequest();\n        message.apiSpecId = object.apiSpecId ?? \"\";\n        message.refreshToken = object.refreshToken ?? \"\";\n        return message;\n    },\n};\nfunction createBaseRefreshTokenResponse(): RefreshTokenResponse {\n    return { response: undefined };\n}\nexport const RefreshTokenResponse = {\n    encode(message: RefreshTokenResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.response?.$case === \"tokenDetails\") {\n            TokenDetails.encode(message.response.tokenDetails, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.response?.$case === \"error\") {\n            TokenExchangeError.encode(message.response.error, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): RefreshTokenResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRefreshTokenResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.response = { $case: \"tokenDetails\", tokenDetails: TokenDetails.decode(reader, reader.uint32()) };\n                    break;\n                case 2:\n                    message.response = { $case: \"error\", error: TokenExchangeError.decode(reader, reader.uint32()) };\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<RefreshTokenResponse>, I>>(object: I): RefreshTokenResponse {\n        const message = createBaseRefreshTokenResponse();\n        if (object.response?.$case === \"tokenDetails\" &&\n            object.response?.tokenDetails !== undefined &&\n            object.response?.tokenDetails !== null) {\n            message.response = {\n                $case: \"tokenDetails\",\n                tokenDetails: TokenDetails.fromPartial(object.response.tokenDetails),\n            };\n        }\n        if (object.response?.$case === \"error\" && object.response?.error !== undefined && object.response?.error !== null) {\n            message.response = { $case: \"error\", error: TokenExchangeError.fromPartial(object.response.error) };\n        }\n        return message;\n    },\n};\nfunction createBasePerformApiCallRequest(): PerformApiCallRequest {\n    return {\n        apiSpecSetId: \"\",\n        endpointRefId: \"\",\n        parameters: {},\n        body: new Uint8Array(),\n        lensId: \"\",\n        isStudioDev: false,\n        cacheTtlSec: 0,\n        linkedResources: [],\n    };\n}\nexport const PerformApiCallRequest = {\n    encode(message: PerformApiCallRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.apiSpecSetId !== \"\") {\n            writer.uint32(10).string(message.apiSpecSetId);\n        }\n        if (message.endpointRefId !== \"\") {\n            writer.uint32(18).string(message.endpointRefId);\n        }\n        Object.entries(message.parameters).forEach(([key, value]) => {\n            PerformApiCallRequest_ParametersEntry.encode({ key: key as any, value }, writer.uint32(26).fork()).ldelim();\n        });\n        if (message.body.length !== 0) {\n            writer.uint32(34).bytes(message.body);\n        }\n        if (message.lensId !== \"\") {\n            writer.uint32(42).string(message.lensId);\n        }\n        if (message.isStudioDev === true) {\n            writer.uint32(48).bool(message.isStudioDev);\n        }\n        if (message.cacheTtlSec !== 0) {\n            writer.uint32(56).int32(message.cacheTtlSec);\n        }\n        for (const v of message.linkedResources) {\n            LinkedResource.encode(v!, writer.uint32(66).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformApiCallRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformApiCallRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecSetId = reader.string();\n                    break;\n                case 2:\n                    message.endpointRefId = reader.string();\n                    break;\n                case 3:\n                    const entry3 = PerformApiCallRequest_ParametersEntry.decode(reader, reader.uint32());\n                    if (entry3.value !== undefined) {\n                        message.parameters[entry3.key] = entry3.value;\n                    }\n                    break;\n                case 4:\n                    message.body = reader.bytes();\n                    break;\n                case 5:\n                    message.lensId = reader.string();\n                    break;\n                case 6:\n                    message.isStudioDev = reader.bool();\n                    break;\n                case 7:\n                    message.cacheTtlSec = reader.int32();\n                    break;\n                case 8:\n                    message.linkedResources.push(LinkedResource.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformApiCallRequest>, I>>(object: I): PerformApiCallRequest {\n        const message = createBasePerformApiCallRequest();\n        message.apiSpecSetId = object.apiSpecSetId ?? \"\";\n        message.endpointRefId = object.endpointRefId ?? \"\";\n        message.parameters = Object.entries(object.parameters ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.body = object.body ?? new Uint8Array();\n        message.lensId = object.lensId ?? \"\";\n        message.isStudioDev = object.isStudioDev ?? false;\n        message.cacheTtlSec = object.cacheTtlSec ?? 0;\n        message.linkedResources = object.linkedResources?.map((e) => LinkedResource.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBasePerformApiCallRequest_ParametersEntry(): PerformApiCallRequest_ParametersEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PerformApiCallRequest_ParametersEntry = {\n    encode(message: PerformApiCallRequest_ParametersEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformApiCallRequest_ParametersEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformApiCallRequest_ParametersEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformApiCallRequest_ParametersEntry>, I>>(object: I): PerformApiCallRequest_ParametersEntry {\n        const message = createBasePerformApiCallRequest_ParametersEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBasePerformApiCallResponse(): PerformApiCallResponse {\n    return {\n        responseCode: ResponseCode.RESPONSE_CODE_UNSET,\n        metadata: {},\n        body: new Uint8Array(),\n        userLocationUsed: false,\n        linkedResources: [],\n    };\n}\nexport const PerformApiCallResponse = {\n    encode(message: PerformApiCallResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.responseCode !== ResponseCode.RESPONSE_CODE_UNSET) {\n            writer.uint32(8).int32(responseCodeToNumber(message.responseCode));\n        }\n        Object.entries(message.metadata).forEach(([key, value]) => {\n            PerformApiCallResponse_MetadataEntry.encode({ key: key as any, value }, writer.uint32(18).fork()).ldelim();\n        });\n        if (message.body.length !== 0) {\n            writer.uint32(26).bytes(message.body);\n        }\n        if (message.userLocationUsed === true) {\n            writer.uint32(32).bool(message.userLocationUsed);\n        }\n        for (const v of message.linkedResources) {\n            LinkedResource.encode(v!, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformApiCallResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformApiCallResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.responseCode = responseCodeFromJSON(reader.int32());\n                    break;\n                case 2:\n                    const entry2 = PerformApiCallResponse_MetadataEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.metadata[entry2.key] = entry2.value;\n                    }\n                    break;\n                case 3:\n                    message.body = reader.bytes();\n                    break;\n                case 4:\n                    message.userLocationUsed = reader.bool();\n                    break;\n                case 5:\n                    message.linkedResources.push(LinkedResource.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformApiCallResponse>, I>>(object: I): PerformApiCallResponse {\n        const message = createBasePerformApiCallResponse();\n        message.responseCode = object.responseCode ?? ResponseCode.RESPONSE_CODE_UNSET;\n        message.metadata = Object.entries(object.metadata ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.body = object.body ?? new Uint8Array();\n        message.userLocationUsed = object.userLocationUsed ?? false;\n        message.linkedResources = object.linkedResources?.map((e) => LinkedResource.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBasePerformApiCallResponse_MetadataEntry(): PerformApiCallResponse_MetadataEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PerformApiCallResponse_MetadataEntry = {\n    encode(message: PerformApiCallResponse_MetadataEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformApiCallResponse_MetadataEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformApiCallResponse_MetadataEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformApiCallResponse_MetadataEntry>, I>>(object: I): PerformApiCallResponse_MetadataEntry {\n        const message = createBasePerformApiCallResponse_MetadataEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseLinkedResource(): LinkedResource {\n    return { url: \"\", encryptionKey: new Uint8Array() };\n}\nexport const LinkedResource = {\n    encode(message: LinkedResource, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.url !== \"\") {\n            writer.uint32(10).string(message.url);\n        }\n        if (message.encryptionKey.length !== 0) {\n            writer.uint32(18).bytes(message.encryptionKey);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LinkedResource {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLinkedResource();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.url = reader.string();\n                    break;\n                case 2:\n                    message.encryptionKey = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<LinkedResource>, I>>(object: I): LinkedResource {\n        const message = createBaseLinkedResource();\n        message.url = object.url ?? \"\";\n        message.encryptionKey = object.encryptionKey ?? new Uint8Array();\n        return message;\n    },\n};\nexport interface RemoteApiService {\n    PerformHttpCall(request: PerformHttpCallRequest): Promise<PerformHttpCallResponse>;\n    GetOAuth2Info(request: GetOAuth2InfoRequest): Promise<GetOAuth2InfoResponse>;\n    PerformTokenExchange(request: PerformTokenExchangeRequest): Promise<PerformTokenExchangeResponse>;\n    RefreshToken(request: RefreshTokenRequest): Promise<RefreshTokenResponse>;\n    PerformApiCall(request: PerformApiCallRequest): Promise<PerformApiCallResponse>;\n}\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n", "import {\n    isArrayBuffer,\n    isArrayOfType,\n    isFunction,\n    isNumber,\n    isRecord,\n    isString,\n    isTypedArray,\n    isUndefined,\n    predicateRecordValues,\n} from \"../common/typeguards\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { Uri, UriCancelRequest, UriRequest, UriResponse } from \"../lens-core-module/generated-types\";\nimport { Lens } from \"../lens/Lens\";\n\nconst SEPARATOR = \"://\";\n\nexport function extractSchemeAndRoute(uri: Uri) {\n    const separatorIndex = uri.indexOf(SEPARATOR);\n    const scheme = uri.slice(0, separatorIndex);\n    const route = uri.slice(separatorIndex + SEPARATOR.length);\n    return { scheme, route };\n}\n\nfunction isUri(value: unknown): value is Uri {\n    return isString(value) && value.includes(SEPARATOR);\n}\n\nfunction isUriHandler(value: unknown): value is UriHandler {\n    return (\n        isRecord(value) &&\n        (isUri(value.uri) || isArrayOfType(isUri, value.uri)) &&\n        isFunction(value.handleRequest) &&\n        (isUndefined(value.cancelRequest) || isFunction(value.cancelRequest))\n    );\n}\n\nexport function isUriHandlers(value: unknown): value is UriHandlers {\n    return isArrayOfType(isUriHandler, value);\n}\n\nexport function isUriResponse(value: unknown): value is UriResponse {\n    return (\n        isRecord(value) &&\n        isNumber(value.code) &&\n        isString(value.description) &&\n        isString(value.contentType) &&\n        (isArrayBuffer(value.data) || isTypedArray(value.data)) &&\n        (isUndefined(value.metadata) || predicateRecordValues(isString)(value.metadata))\n    );\n}\n\n/**\n * Provides a way for a lens to call into external services that work under HTTP-like protocol.\n * @internal\n */\nexport interface UriHandler {\n    /**\n     * [scheme]://[route] pattern that this handler processes or an array of patterns.\n     */\n    uri: Uri | Uri[];\n\n    /**\n     * Called to process the provided request.\n     * @param request Lens request.\n     * @param reply A callback function to send response back.\n     * The function can be called none or multiple number of times.\n     * @param lens Lens the request is coming from.\n     */\n    handleRequest(request: UriRequest, reply: (response: UriResponse) => void, lens: Lens): void;\n\n    /**\n     * Called to indicated that URI request initated earlier is cancelled.\n     * @param request Lens request.\n     * @param lens Lens the request is coming from.\n     */\n    cancelRequest?(request: UriCancelRequest, lens: Lens): void;\n}\n\n/**\n * Array of {@link UriHandler} objects.\n * @internal\n */\nexport type UriHandlers = UriHandler[];\n\n/**\n * An extension point for client URI handlers.\n * @internal\n */\nexport const uriHandlersFactory = Injectable(\"UriHandlers\", () => {\n    const uriHandlers: UriHandlers = [];\n    return uriHandlers;\n});\n\nexport { Uri, UriCancelRequest, UriRequest, UriResponse } from \"../lens-core-module/generated-types\";\n", "import { Subject, catchError, filter, map, merge, retry, takeUntil, tap } from \"rxjs\";\nimport { forActions } from \"@snap/state-management\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { RemoteApiInfo } from \"../generated-proto/pb_schema/camera_kit/v3/features/remote_api_info\";\nimport { ResponseCode, responseCodeToNumber } from \"../generated-proto/pb_schema/lenses/remote_api/remote_api_service\";\nimport { LensRepository } from \"../lens\";\nimport { Lens } from \"../lens/Lens\";\nimport { LensState } from \"../session/lensState\";\nimport { SessionState } from \"../session/sessionState\";\nimport { getLogger } from \"../logger/logger\";\nimport { knownAnyTypes } from \"../common/any\";\nimport { CamelToSnakeCase, SnakeToCamelCase } from \"../common/types\";\nimport { OperationalMetricsReporter } from \"../metrics/operational/operationalMetricsReporter\";\nimport { UriCancelRequest, UriHandler, UriRequest, UriResponse, extractSchemeAndRoute } from \"./UriHandlers\";\n\n// NOTE: There's potential for overloads when reporting metrics if reporting is triggered on each frame,\n// (i.e., when the lens sends Remote API requests every frame).\n// As of now, this isn't a concern because src/metrics/operational/operationalMetricsReporter.ts aggregates\n// \"count\" metrics into a single metric within a batch, and the Remote API service currently\n// reports only \"count\" metrics. For instance, if 30 metrics with the same name are generated per second,\n// given the current bundle size of 100 operational metrics, there will be one metrics report approximately\n// every 3.3 seconds.\n// In the future, if we opt to report \"histogram\" or other metric types, they must be approached with caution:\n// either the operationalMetricsReporter should be enhanced to aggregate such metrics,\n// or the Remote API service should manage it directly.\n// Mobiles ticket: https://jira.sc-corp.net/browse/CAMKIT-3092\n\nconst logger = getLogger(\"RemoteApiServices\");\n\nconst uriResponseOkCode = 200;\nconst apiResponseStatusHeader = \":sc_lens_api_status\";\nconst apiBinaryContentType = \"application/octet-stream\";\n\nconst statusToResponseCodeMap = {\n    success: ResponseCode.SUCCESS,\n    redirected: ResponseCode.REDIRECTED,\n    badRequest: ResponseCode.BAD_REQUEST,\n    accessDenied: ResponseCode.ACCESS_DENIED,\n    notFound: ResponseCode.NOT_FOUND,\n    timeout: ResponseCode.TIMEOUT,\n    requestTooLarge: ResponseCode.REQUEST_TOO_LARGE,\n    serverError: ResponseCode.SERVER_ERROR,\n    cancelled: ResponseCode.CANCELLED,\n    proxyError: ResponseCode.PROXY_ERROR,\n} satisfies { [Status in RemoteApiStatusInternal]: Uppercase<CamelToSnakeCase<Status>> };\n\ntype RemoteApiStatusInternal = SnakeToCamelCase<\n    Lowercase<Exclude<keyof typeof ResponseCode, \"RESPONSE_CODE_UNSET\" | \"UNRECOGNIZED\">>\n>;\n\ntype LensId = string;\ntype RequestId = string;\n\ntype UriRequestEvent = {\n    request: UriRequest;\n    reply: (response: UriResponse) => void;\n    lens: Lens;\n};\n\ntype UriCancelRequestEvent = {\n    request: UriCancelRequest;\n    lens: Lens;\n};\n\ninterface LensRequestState {\n    cancellationHandlers: Map<RequestId, RemoteApiCancelRequestHandler>;\n    supportedSpecIds: Set<string>;\n}\n\n/**\n * Invokes the cancellation handler associated with the provided key and removes it from the collection of handlers.\n */\nfunction callCancellationHandler(\n    cancellationHandlers: Map<RequestId, RemoteApiCancelRequestHandler>,\n    ...keys: RequestId[]\n) {\n    for (const key of keys) {\n        cancellationHandlers.get(key)?.();\n        cancellationHandlers.delete(key);\n    }\n}\n\n/**\n * Removes the specified lenses' metadata from the cache and invokes their cancellation callbacks.\n *\n * @param lensRequestState The state representing the lens cache.\n * @param lensIds An array of lens IDs to be removed from the cache\n * and for which the cancellation callbacks will be invoked.\n */\nfunction handleLensApplicationEnd(lensRequestState: Map<LensId, LensRequestState>, ...lensIds: LensId[]) {\n    for (const lensId of lensIds) {\n        const state = lensRequestState.get(lensId);\n        if (state) {\n            callCancellationHandler(state.cancellationHandlers, ...state.cancellationHandlers.keys());\n            lensRequestState.delete(lensId);\n        }\n    }\n}\n\n/**\n * Status of a Remote API response.\n */\nexport type RemoteApiStatus = keyof typeof statusToResponseCodeMap;\n\n/**\n * Remote API request sent by a lens.\n */\nexport interface RemoteApiRequest {\n    /**\n     * Unique id of the remote API service specification.\n     */\n    apiSpecId: string;\n    /**\n     * Unique id of the remote API service endpoint requested by this request.\n     */\n    endpointId: string;\n    /**\n     * A map of named parameters associated with the request.\n     */\n    parameters: Record<string, string>;\n    /**\n     * Additional binary request payload.\n     */\n    body: ArrayBuffer;\n}\n\n/**\n * Remote API response to a request sent by a lens.\n */\nexport interface RemoteApiResponse {\n    /**\n     * Status of the response\n     */\n    status: RemoteApiStatus;\n    /**\n     * A map of named metadata associated with the response.\n     */\n    metadata: Record<string, string>;\n    /**\n     * Additional binary request payload.\n     */\n    body: ArrayBuffer;\n}\n\n/**\n * Represents a Remote API request cancellation handler function.\n */\nexport type RemoteApiCancelRequestHandler = () => void;\n\n/**\n * Represents a Remote API request handler function.\n * It is provided with a reply callback that must be invoked to send a response back to the lens.\n * The reply callback can be invoked multiple times if needed.\n * Additionally, the handler can return a cancellation callback, which is triggered when the lens cancels the request.\n */\nexport type RemoteApiRequestHandler = (\n    reply: (response: RemoteApiResponse) => void\n) => RemoteApiCancelRequestHandler | void;\n\n/**\n * Service to handle a lens Remote API request.\n */\nexport interface RemoteApiService {\n    /**\n     * Remote API spec ID(s).\n     */\n    apiSpecId: string;\n\n    /**\n     * This method is called by Camera Kit when a lens triggers a Remote API request with a corresponding spec ID.\n     * If the service can handle the request, the method returns a request handler; otherwise, it returns nothing.\n     * @param request Remote API request object.\n     * @param lens Lens that trigges the request.\n     * @returns A request handler if applicable.\n     */\n    getRequestHandler(request: RemoteApiRequest, lens: Lens): RemoteApiRequestHandler | undefined;\n}\n\nexport type RemoteApiServices = RemoteApiService[];\n\nexport const remoteApiServicesFactory = Injectable(\"remoteApiServices\", () => {\n    const remoteApiServices: RemoteApiServices = [];\n    return remoteApiServices;\n});\n\n/**\n * Provides a URI handler that searches for a match within the provided services to handle Remote API requests,\n * i.e., those whose URI starts with 'app://remote-api/performApiRequest'.\n */\nexport function getRemoteApiUriHandler(\n    registeredServices: RemoteApiService[],\n    sessionState: SessionState,\n    lensState: LensState,\n    lensRepository: LensRepository,\n    reporter: OperationalMetricsReporter\n): UriHandler {\n    // Groups services by spec ID for faster lookups.\n    const registeredServiceMap = new Map<string, RemoteApiService[]>();\n    for (const service of registeredServices) {\n        const existingServices = registeredServiceMap.get(service.apiSpecId) || [];\n        registeredServiceMap.set(service.apiSpecId, [...existingServices, service]);\n    }\n\n    const uriRequests = new Subject<UriRequestEvent>();\n    const uriCancelRequests = new Subject<UriCancelRequestEvent>();\n    const lensRequestState = new Map<LensId, LensRequestState>();\n\n    const lensTurnOffEvents = lensState.events.pipe(\n        forActions(\"turnedOff\"),\n\n        tap(([action]) => handleLensApplicationEnd(lensRequestState, action.data.id))\n    );\n\n    const uriRequestEvents = uriRequests.pipe(\n        map((uriRequest) => {\n            const lensId = uriRequest.lens.id;\n\n            if (!lensRequestState.has(lensId)) {\n                lensRequestState.set(lensId, {\n                    // Prepares a collection to store cancellation handlers.\n                    // A specific handler will be invoked when a cancellation request is issued by the lens.\n                    // All handlers will be invoked when the lens is replaced with another one or the session\n                    // is destroyed.\n                    cancellationHandlers: new Map(),\n                    // Parse lens metadata to obtain supported Remote API specs.\n                    supportedSpecIds: new Set(\n                        (lensRepository.getLensMetadata(lensId)?.featureMetadata ?? [])\n                            .filter((feature) => feature.typeUrl === knownAnyTypes.remoteApiInfo)\n                            .flatMap((any) => RemoteApiInfo.decode(any.value).apiSpecIds)\n                    ),\n                });\n            }\n            const requestState = lensRequestState.get(lensId)!;\n\n            // Extracts the spec ID and endpoint ID from the provided Remote API request URI.\n            // The given URI is expected to conform to the following specification:\n            // eslint-disable-next-line max-len\n            // https://docs.google.com/document/d/18fbGYDhD2N_aMTe4ZLY4QKeCSoMeJuklG28TutDzLZc/edit#bookmark=id.p2y39gwgbm4g\n            const { route } = extractSchemeAndRoute(uriRequest.request.uri);\n            const [specId, endpointIdWithQuery] = route.split(\"/\").slice(2);\n            const [endpointId] = endpointIdWithQuery.split(\"?\");\n\n            return { uriRequest, specId, endpointId, requestState };\n        }),\n\n        // only handle requests for API spec ID that current lens supports\n        filter(({ specId, requestState }) => requestState.supportedSpecIds.has(specId)),\n\n        // only handle requests if we have a registered service for it\n        filter(({ specId }) => registeredServiceMap.has(specId)),\n\n        map(({ uriRequest, specId, endpointId, requestState }) => {\n            const dimensions = new Map([[\"specId\", specId]]);\n            reporter.count(\"lens_remote-api_requests\", 1, dimensions);\n\n            const remoteApiRequest: RemoteApiRequest = {\n                apiSpecId: specId,\n                body: uriRequest.request.data,\n                endpointId,\n                parameters: uriRequest.request.metadata,\n            };\n\n            // Looks for the first Remote API request handler.\n            for (const service of registeredServiceMap.get(specId) ?? []) {\n                let requestHandler: RemoteApiRequestHandler | undefined = undefined;\n                try {\n                    requestHandler = service.getRequestHandler(remoteApiRequest, uriRequest.lens);\n                } catch {\n                    logger.warn(\"Client's Remote API request handler factory threw an error.\");\n                }\n\n                if (requestHandler) {\n                    reporter.count(\"lens_remote-api_handled-requests\", 1, dimensions);\n\n                    let cancellationHandler: RemoteApiCancelRequestHandler | void = undefined;\n                    try {\n                        // Calls client's Remote API handler to process the request.\n                        cancellationHandler = requestHandler((response) => {\n                            reporter.count(\"lens_remote-api_responses\", 1, dimensions);\n\n                            const responseCode = statusToResponseCodeMap[response.status] ?? ResponseCode.UNRECOGNIZED;\n                            const uriResponse: UriResponse = {\n                                code: uriResponseOkCode,\n                                description: \"\",\n                                contentType: apiBinaryContentType,\n                                data: response.body,\n                                metadata: {\n                                    ...response.metadata,\n                                    [apiResponseStatusHeader]: responseCodeToNumber(responseCode).toString(),\n                                },\n                            };\n                            uriRequest.reply(uriResponse);\n                        });\n                    } catch (error) {\n                        logger.warn(\"Client's Remote API request handler threw an error.\");\n                    }\n\n                    if (typeof cancellationHandler === \"function\") {\n                        requestState.cancellationHandlers.set(uriRequest.request.identifier, () => {\n                            try {\n                                cancellationHandler!();\n                            } catch {\n                                logger.warn(\"Client's Remote API request cancellation handler threw an error.\");\n                            }\n                        });\n                    }\n\n                    break;\n                }\n            }\n        })\n    );\n\n    const uriCancelRequestEvents = uriCancelRequests.pipe(\n        tap((uriRequest) => {\n            const cancellationHandlers = lensRequestState.get(uriRequest.lens.id)?.cancellationHandlers;\n            if (cancellationHandlers) {\n                callCancellationHandler(cancellationHandlers, uriRequest.request.requestId);\n            }\n        })\n    );\n\n    merge(lensTurnOffEvents, uriRequestEvents, uriCancelRequestEvents)\n        .pipe(\n            catchError((error, sourcePipe) => {\n                // The expectation is that if an error occurs, it happens in our own implementation,\n                // because app callbacks are wrapped with try..catch blocks.\n                // Therefore, we would like to report this error.\n                logger.error(error);\n                reporter.count(\"lens_remote-api_errors\", 1);\n                // Return the source pipe so that we can retry the pipe instead of just completing it.\n                return sourcePipe;\n            }),\n            // When the pipe completes due to an error,\n            // we want to resubscribe to the original pipe to keep it alive.\n            retry(),\n            takeUntil(sessionState.events.pipe(forActions(\"destroy\")))\n        )\n        .subscribe({\n            complete: () => handleLensApplicationEnd(lensRequestState, ...lensRequestState.keys()),\n        });\n\n    return {\n        uri: \"app://remote-api/performApiRequest\",\n\n        handleRequest(request, reply, lens) {\n            uriRequests.next({ request, reply, lens });\n        },\n\n        cancelRequest(request, lens) {\n            uriCancelRequests.next({ request, lens });\n        },\n    };\n}\n", "import { isState } from \"@snap/state-management\";\n\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { LensKeyboard, lensKeyboardFactory } from \"../session/LensKeyboard\";\nimport { LensState, lensStateFactory } from \"../session/lensState\";\nimport { LensRepository, lensRepositoryFactory } from \"../lens\";\nimport { SessionState, sessionStateFactory } from \"../session/sessionState\";\nimport { LensCore, UriResponse, lensCoreFactory } from \"../lens-core-module\";\nimport { getLogger } from \"../logger/logger\";\nimport {\n    OperationalMetricsReporter,\n    operationalMetricReporterFactory,\n} from \"../metrics/operational/operationalMetricsReporter\";\nimport { RemoteApiServices, getRemoteApiUriHandler, remoteApiServicesFactory } from \"./RemoteApiServices\";\nimport { UriHandlers, extractSchemeAndRoute, isUriHandlers, isUriResponse, uriHandlersFactory } from \"./UriHandlers\";\n\nconst logger = getLogger(\"uriHandlersRegister\");\n\n/**\n * Registers URI handlers within LensCore.\n * @internal\n */\nexport const registerUriHandlers = Injectable(\n    \"registerUriHandlers\",\n    [\n        lensCoreFactory.token,\n        lensStateFactory.token,\n        uriHandlersFactory.token,\n        lensKeyboardFactory.token,\n        remoteApiServicesFactory.token,\n        lensRepositoryFactory.token,\n        sessionStateFactory.token,\n        operationalMetricReporterFactory.token,\n    ] as const,\n    (\n        lensCore: LensCore,\n        lensState: LensState,\n        userHandlers: UriHandlers,\n        lensKeyboard: LensKeyboard,\n        remoteApiServices: RemoteApiServices,\n        lensRepository: LensRepository,\n        sessionState: SessionState,\n        operationalMetricsReporter: OperationalMetricsReporter\n    ): void => {\n        if (!isUriHandlers(userHandlers)) {\n            throw new Error(\"Expected an array of UriHandler objects\");\n        }\n\n        // Users may define UriHandlers using the uriHandlersFactory.token, but we need to add some internally-defined\n        // handlers (lens keyboard and Remote API) before registering handlers with LensCore.\n        const allHandlers = userHandlers.concat(\n            lensKeyboard.uriHandler,\n            getRemoteApiUriHandler(\n                remoteApiServices,\n                sessionState,\n                lensState,\n                lensRepository,\n                operationalMetricsReporter\n            )\n        );\n\n        for (const { uri, handleRequest, cancelRequest } of allHandlers) {\n            const uris = Array.isArray(uri) ? uri : [uri];\n            for (const { scheme, route } of uris.map(extractSchemeAndRoute)) {\n                lensCore.registerUriListener(scheme, route, {\n                    handleRequest: (request) => {\n                        const reply = (response: UriResponse) => {\n                            if (!isUriResponse(response)) {\n                                throw new Error(\"Expected UriResponse object\");\n                            }\n                            lensCore.provideUriResponse(request.identifier, response);\n                        };\n\n                        // Since lenses are the only things that make URI requests, we expect to always be in the\n                        // \"lensApplied\" state – we'll sanity check, though, and log a warning if we're not.\n                        const state = lensState.getState();\n                        if (isState(state, \"noLensApplied\")) {\n                            logger.warn(\n                                `Got a URI request for ${request.uri}, but there is no active lens. The ` +\n                                    `request will not be processed.`\n                            );\n                            return;\n                        }\n\n                        // NOTE: we do not handle any error thrown on an extension side when handleRequest() is called.\n                        // That responsibility is delegated to the extension by design and that is exactly what Android\n                        // and iOS SDKs do.\n                        handleRequest(request, reply, state.data);\n                    },\n                    cancelRequest: (request) => {\n                        if (cancelRequest) {\n                            const state = lensState.getState();\n                            if (isState(state, \"noLensApplied\")) {\n                                logger.warn(\n                                    `Got a URI cancel request for ${request.uri}, but there is no active ` +\n                                        `lens. The cancel request will not be processed.`\n                                );\n                                return;\n                            }\n                            cancelRequest(request, state.data);\n                        }\n                    },\n                });\n            }\n        }\n    }\n);\n", "import { isState } from \"@snap/state-management\";\nimport { filter, map, Observable, scan, Subject, takeUntil } from \"rxjs\";\nimport { entries } from \"../../common/entries\";\nimport { stringifyError } from \"../../common/errorHelpers\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { logEntriesFactory } from \"../../logger/logEntries\";\nimport { LogEntry, logLevelMap } from \"../../logger/logger\";\nimport { LensState } from \"../../session/lensState\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\n\nconst logMethods = entries(logLevelMap).map(([level]) => level);\n\n// How many log entries to include as the error context\nconst maxBufferedEntries = 15;\nconst contextSeparator = \"\\n\\n----------------- Context -----------------\\n\\n\";\nconst methodLength = logMethods.reduce((max, method) => Math.max(max, method.length), 0);\n\ninterface RepeatableLogEntry {\n    entry: LogEntry;\n    count: number;\n    lastTime: Date;\n}\n\ninterface EntriesBuffer {\n    /**\n     * LogEntries grouped by their message.\n     */\n    entries: RepeatableLogEntry[];\n    /**\n     * The recent log entry.\n     */\n    recent: LogEntry;\n}\n\nfunction getContextString(logEntries: RepeatableLogEntry[]) {\n    const result = [];\n    for (const { entry, count, lastTime } of logEntries) {\n        const time = entry.time.toISOString();\n        const method = entry.level.padStart(methodLength);\n        // TODO: improve pretty printing\n        const messages = entry.messages.map((m) => m + \"\").join(\" \");\n        let dupSuffix =\n            count > 1 ? ` (Repeated ${count} times with the last occurrence at ${lastTime.toISOString()})` : \"\";\n\n        result.push(`${time} [${entry.module}] ${method}: ${messages}${dupSuffix}`);\n    }\n    return result.join(\"\\n\");\n}\n\nexport function reportExceptionToBlizzard(\n    logEntries: Observable<LogEntry>,\n    metricsEventTarget: MetricsEventTarget,\n    reporter: OperationalMetricsReporter,\n    lensState?: LensState\n) {\n    logEntries\n        .pipe(\n            scan<LogEntry, EntriesBuffer>(\n                ({ entries }, newEntry) => {\n                    const lastEntry = entries[entries.length - 1];\n                    const isNewEntryRepeated =\n                        lastEntry &&\n                        lastEntry.entry.messages.join() === newEntry.messages.join() &&\n                        lastEntry.entry.level === newEntry.level;\n                    if (isNewEntryRepeated) {\n                        lastEntry.count += 1;\n                        lastEntry.lastTime = newEntry.time;\n                    } else {\n                        entries.push({\n                            entry: newEntry,\n                            count: 1,\n                            lastTime: newEntry.time,\n                        });\n                    }\n                    return {\n                        entries: entries.slice(-maxBufferedEntries),\n                        recent: newEntry,\n                    };\n                },\n                // Start with a dummy recent entry -- it gets overridden each time we handle a log entry.\n                { entries: [], recent: { time: new Date(), module: \"any\", level: \"debug\", messages: [] } }\n            ),\n            filter(({ recent }) => recent.level === \"error\"),\n            map(({ entries, recent }) => ({\n                context: entries,\n                error: recent.messages.find((e) => e instanceof Error) as Error,\n            })),\n            filter(({ error }) => !!error)\n        )\n        .subscribe(({ error, context }) => {\n            const currentLensState = lensState?.getState();\n            const lensId =\n                currentLensState && !isState(currentLensState, \"noLensApplied\") ? currentLensState.data.id : \"none\";\n            metricsEventTarget.dispatchEvent(\n                new TypedCustomEvent(\"exception\", {\n                    name: \"exception\",\n                    lensId,\n                    type: error.name,\n                    reason: `${stringifyError(error)}${contextSeparator}${getContextString(context)}`,\n                })\n            );\n\n            reporter.count(\"handled_exception\", 1, new Map([[\"type\", error.name]]));\n        });\n}\n\nexport interface GlobalExceptionReporter {\n    attachLensContext: (lensState: LensState) => void;\n}\n\n/**\n * Reports log entries to Blizzard when there is no CameraKit session yet.\n *\n * @internal\n */\nexport const reportGlobalException = Injectable(\n    \"reportGlobalException\",\n    [logEntriesFactory.token, metricsEventTargetFactory.token, operationalMetricReporterFactory.token] as const,\n    (\n        logEntries: Observable<LogEntry>,\n        metricsEventTarget: MetricsEventTarget,\n        reporter: OperationalMetricsReporter\n    ): GlobalExceptionReporter => {\n        // Initially we log exceptions without any lens context\n        const cancellationSubject = new Subject<void>();\n        reportExceptionToBlizzard(logEntries.pipe(takeUntil(cancellationSubject)), metricsEventTarget, reporter);\n\n        // Later session scope reporter triggers cancellation of the global one\n        // and initiates exception reporting with a lens context\n        return {\n            attachLensContext: (lensState: LensState) => {\n                cancellationSubject.next();\n                reportExceptionToBlizzard(logEntries, metricsEventTarget, reporter, lensState);\n            },\n        };\n    }\n);\n", "import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { LensState, lensStateFactory } from \"../../session/lensState\";\nimport { GlobalExceptionReporter, reportGlobalException } from \"./reportGlobalException\";\n\n/**\n * Reports log entries to Blizzard during a CameraKit session.\n *\n * @internal\n */\nexport const reportSessionException = Injectable(\n    \"reportSessionException\",\n    [reportGlobalException.token, lensStateFactory.token] as const,\n    (globalExceptionReporter: GlobalExceptionReporter, lensState: LensState) => {\n        globalExceptionReporter.attachLensContext(lensState);\n    }\n);\n", "import { CameraKitConfiguration, configurationToken } from \"../../configuration\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\n\n// Allowlist the benchmarks we wish to report.\nconst reportableBenchmarks = [\"gflops\"];\n\nexport type BenchmarkComplete = MakeTaggedBusinessEvent<\"benchmarkComplete\">;\n\nexport const reportBenchmarks = Injectable(\n    \"reportBenchmarks\",\n    [metricsEventTargetFactory.token, operationalMetricReporterFactory.token, configurationToken] as const,\n    async (\n        metricsEventTarget: MetricsEventTarget,\n        reporter: OperationalMetricsReporter,\n        config: CameraKitConfiguration\n    ) => {\n        if (config.lensPerformance === undefined) return;\n        // Safety: config.lensPerformance cannot reject – all Promises contained in CameraKitConfiguration have\n        // catch blocks which return a default value.\n        const lensPerformance = await config.lensPerformance;\n        const baseBenchmark: Pick<BenchmarkComplete, \"name\" | \"performanceCluster\" | \"webglRendererInfo\"> = {\n            name: \"benchmarkComplete\",\n            performanceCluster: lensPerformance.cluster,\n            webglRendererInfo: lensPerformance.webglRendererInfo,\n        };\n        const dimensions = new Map([[\"performance_cluster\", lensPerformance.cluster.toString()]]);\n        for (const benchmark of lensPerformance.benchmarks) {\n            if (!reportableBenchmarks.includes(benchmark.name)) continue;\n            const benchmarkComplete: BenchmarkComplete = {\n                ...baseBenchmark,\n                benchmarkName: benchmark.name,\n                benchmarkValue: benchmark.value,\n            };\n            metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"benchmarkComplete\", benchmarkComplete));\n            reporter.histogram(`benchmark.${benchmark.name}`, benchmark.value, dimensions);\n        }\n    }\n);\n", "import { EventOfType, TypedCustomEvent } from \"./TypedCustomEvent\";\nimport { EventsFromTarget, TypedEventTarget } from \"./TypedEventTarget\";\n\n/**\n * Each time an event is emitted, call a given accumulator function with two arguments: some state of type S and the\n * event. The accumulator returns a new state. `scan` returns a new event emitter which emits an event each time a new\n * state is produced by the accumulator.\n *\n * This can be used to implement a Redux-style state management architecture.\n *\n * @param seedState Some initial state, passed to the accumulator when the first event is emitted.\n * @returns A function which takes a source {@link TypedEventTarget}, a list of event types emitted by that target to\n * which to listen, and the accumulator function. The accumulator is called each time an event of the given type(s) is\n * emitted on the source. It is passed the current state and the event, and must return a new state.\n */\nexport const scan =\n    <S>(seedState: S) =>\n    <Target extends TypedEventTarget, Events extends EventsFromTarget<Target>, EventType extends Events[\"type\"]>(\n        source: Target,\n        eventTypes: EventType[],\n        accumulator: (state: S, event: EventOfType<EventType, Events>) => S\n    ): TypedEventTarget<TypedCustomEvent<\"state\", S>> => {\n        let state = seedState;\n        const sink = new TypedEventTarget<TypedCustomEvent<\"state\", S>>();\n        const listener = (event: TypedCustomEvent) => {\n            state = accumulator(state, event as EventOfType<EventType, Events>);\n            sink.dispatchEvent(new TypedCustomEvent(\"state\", state));\n        };\n\n        // We'll use Proxies to make sure that event listeners are added/removed at the appropriate time.\n        // Callers can then control when to clean up the listeners we add here in a transparent way –\n        // by just removing the listener on the returned event target.\n        //\n        // We also prevent multiple listeners on the sink, as a simplification.\n        let hasListener = false;\n        sink.addEventListener = new Proxy(sink.addEventListener, {\n            apply: (target, thisArg, args: Parameters<(typeof sink)[\"addEventListener\"]>) => {\n                if (hasListener)\n                    throw new Error(\n                        \"Cannot add another event listener. The TypedEventTarget returned by scan only \" +\n                            \"supports a single listener, and one has already been added.\"\n                    );\n                hasListener = true;\n                eventTypes.forEach((eventType) => source.addEventListener(eventType, listener));\n                target.apply(thisArg, args);\n            },\n        });\n        sink.removeEventListener = new Proxy(sink.removeEventListener, {\n            apply: (target, thisArg, args: Parameters<(typeof sink)[\"removeEventListener\"]>) => {\n                eventTypes.forEach((eventType) => source.removeEventListener(eventType, listener));\n                target.apply(thisArg, args);\n            },\n        });\n\n        return sink;\n    };\n", "import { assertUnreachable } from \"../../common/assertions\";\nimport { stringifyError } from \"../../common/errorHelpers\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { scan } from \"../../events/scan\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport {\n    Dimensions,\n    RequestStateEventTarget,\n    requestStateEventTargetFactory,\n} from \"../../handlers/requestStateEmittingHandler\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { CameraKitMetricEvents, MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\n\ntype InProgressMap = Map<number, { startTimeMs: number }>;\ninterface InProgress {\n    name: \"inProgress\";\n    inProgress: InProgressMap;\n}\ninterface Completed {\n    name: \"completed\";\n    inProgress: InProgressMap;\n    event: CameraKitMetricEvents;\n}\ntype RequestState = InProgress | Completed;\n\nconst relevantRequestTypes = [\"lens_content\", \"asset\"] as const;\nexport const isLensOrAssetRequest = (value: Dimensions): value is LensDownloadDimensions | AssetDownloadDimensions => {\n    const requestType = value[\"requestType\"];\n    // Safety: the cast makes the type less specific so we can check if any string is present in the tuple.\n    return typeof requestType === \"string\" && (relevantRequestTypes as readonly string[]).includes(requestType);\n};\n\n/**\n * The LensDownload metric is triggered by any download of lens content.\n *\n * It contains download stats, which lens was requested, and whether prefetch was used.\n *\n * It corresponds to the internal CameraKitLensDownload event, described here:\n * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/edit#heading=h.stqom49qs91t\n */\nexport type LensDownload = MakeTaggedBusinessEvent<\"lensDownload\">;\nexport type LensDownloadDimensions = { requestType: \"lens_content\"; lensId: string };\n\n/**\n * The AssetDownload metric is triggered by any type of asset download.\n *\n * It contains download stats, which asset was requested, and whether prefetch was used.\n *\n * It corresponds to the internal CameraKitAssetDownload event, described here:\n * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/edit#heading=h.vlormd1724fp\n */\nexport type AssetDownload = MakeTaggedBusinessEvent<\"assetDownload\">;\nexport type AssetDownloadDimensions = { requestType: \"asset\"; assetType: string; assetId: string; lensId: string };\n\nexport const reportLensAndAssetDownload = Injectable(\n    \"reportLensAndAssetDownload\",\n    [\n        metricsEventTargetFactory.token,\n        operationalMetricReporterFactory.token,\n        requestStateEventTargetFactory.token,\n    ] as const,\n    (\n        metricsEventTarget: MetricsEventTarget,\n        reporter: OperationalMetricsReporter,\n        requestStateEventTarget: RequestStateEventTarget\n    ) => {\n        scan<RequestState>({ name: \"inProgress\", inProgress: new Map() })(\n            requestStateEventTarget,\n            [\"started\", \"completed\", \"errored\"],\n            (state, event) => {\n                const { inProgress } = state;\n                const { dimensions, requestId, timeMs } = event.detail;\n\n                if (!isLensOrAssetRequest(dimensions)) return state;\n\n                switch (event.type) {\n                    case \"started\":\n                        inProgress.set(requestId, { startTimeMs: timeMs });\n                        return { name: \"inProgress\", inProgress };\n                    case \"completed\":\n                        const completedRequest = inProgress.get(requestId);\n                        if (!completedRequest) return state;\n                        inProgress.delete(requestId);\n\n                        const downloadTimeSec = (timeMs - completedRequest.startTimeMs) / 1000;\n                        const { sizeByte } = event.detail;\n\n                        switch (dimensions.requestType) {\n                            case \"lens_content\":\n                                return {\n                                    name: \"completed\",\n                                    inProgress,\n                                    event: new TypedCustomEvent(\"lensDownload\", {\n                                        name: \"lensDownload\",\n                                        lensId: dimensions.lensId,\n                                        automaticDownload: false,\n                                        sizeByte,\n                                        downloadTimeSec,\n                                    }),\n                                };\n                            case \"asset\":\n                                return {\n                                    name: \"completed\",\n                                    inProgress,\n                                    event: new TypedCustomEvent(\"assetDownload\", {\n                                        name: \"assetDownload\",\n                                        assetId: dimensions.assetId,\n                                        automaticDownload: false,\n                                        sizeByte,\n                                        downloadTimeSec,\n                                    }),\n                                };\n                            default:\n                                assertUnreachable(dimensions);\n                        }\n                    case \"errored\":\n                        const erroredRequest = inProgress.get(requestId);\n                        if (!erroredRequest) return state;\n                        inProgress.delete(requestId);\n                        const error = event.detail.error;\n                        return {\n                            name: \"completed\",\n                            inProgress,\n                            event: new TypedCustomEvent(\"exception\", {\n                                name: \"exception\",\n                                lensId: dimensions.lensId,\n                                type: dimensions.requestType === \"lens_content\" ? \"lens\" : \"asset\",\n                                reason: stringifyError(error),\n                            }),\n                        };\n                    default:\n                        assertUnreachable(event);\n                }\n            }\n        ).addEventListener(\"state\", ({ detail: state }) => {\n            if (state.name !== \"completed\") return;\n            metricsEventTarget.dispatchEvent(state.event);\n            if (state.event.detail.name === \"exception\") {\n                reporter.count(\"handled_exception\", 1, new Map([[\"type\", state.event.detail.type]]));\n            }\n        });\n    }\n);\n", "import { assertUnreachable } from \"../../common/assertions\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { scan } from \"../../events/scan\";\nimport { CofDimensions, COF_REQUEST_TYPE } from \"../../remote-configuration/cofHandler\";\nimport {\n    Dimensions,\n    RequestStateEventTarget,\n    RequestStateEvents,\n    requestStateEventTargetFactory,\n} from \"../../handlers/requestStateEmittingHandler\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\nimport { getPlatformInfo } from \"../../platform/platformInfo\";\nimport { AssetDownloadDimensions, isLensOrAssetRequest, LensDownloadDimensions } from \"./reportLensAndAssetDownload\";\n\ntype InProgressMap = Map<number, { startTimeMs: number }>;\ninterface InProgress {\n    name: \"inProgress\";\n    inProgress: InProgressMap;\n}\ninterface Completed {\n    name: \"completed\";\n    inProgress: InProgressMap;\n    dimensions: Map<string, string>;\n    downloadTimeMs: number;\n    downloadSizeKb: number;\n}\ntype RequestState = InProgress | Completed;\n\nconst getContentType = (dimensions: LensDownloadDimensions | AssetDownloadDimensions | CofDimensions): string => {\n    switch (dimensions.requestType) {\n        case \"lens_content\":\n            return \"lens_content\";\n        case \"asset\":\n            return dimensions.assetType;\n        case COF_REQUEST_TYPE:\n            return COF_REQUEST_TYPE;\n        default:\n            assertUnreachable(dimensions);\n    }\n};\n\nconst getSizeKb = (event: RequestStateEvents): number => {\n    switch (event.type) {\n        case \"started\":\n        case \"errored\":\n            return 0;\n        case \"completed\":\n            return event.detail.sizeByte / 1024;\n        default:\n            assertUnreachable(event);\n    }\n};\n\nconst getStatus = (event: RequestStateEvents): string => {\n    switch (event.type) {\n        case \"started\":\n        case \"errored\":\n            // We'll use status 0 to indicate that an exception occurred during the request. This is somewhat in keeping\n            // with browsers that set the response status to 0 if the request was not able to be made (e.g. CORs\n            // preflight failed, or the user canceled the request).\n            return \"0\";\n        case \"completed\":\n            return event.detail.status.toString();\n        default:\n            assertUnreachable(event);\n    }\n};\n\nexport const isRelevantRequest = (\n    value: Dimensions\n): value is LensDownloadDimensions | AssetDownloadDimensions | CofDimensions => {\n    return isLensOrAssetRequest(value) || value[\"requestType\"] === COF_REQUEST_TYPE;\n};\n\nexport const reportHttpMetrics = Injectable(\n    \"reportHttpMetrics\",\n    [operationalMetricReporterFactory.token, requestStateEventTargetFactory.token] as const,\n    (reporter: OperationalMetricsReporter, requestStateEventTarget: RequestStateEventTarget) => {\n        scan<RequestState>({ name: \"inProgress\", inProgress: new Map() })(\n            requestStateEventTarget,\n            [\"started\", \"completed\", \"errored\"],\n            (state, event) => {\n                const { inProgress } = state;\n                const { dimensions, requestId, timeMs } = event.detail;\n\n                if (!isRelevantRequest(dimensions)) return state;\n\n                switch (event.type) {\n                    case \"started\":\n                        inProgress.set(requestId, { startTimeMs: timeMs });\n                        return { name: \"inProgress\", inProgress };\n                    case \"completed\":\n                    case \"errored\":\n                        const completedRequest = inProgress.get(requestId);\n                        if (!completedRequest) return state;\n                        inProgress.delete(requestId);\n\n                        const downloadTimeMs = timeMs - completedRequest.startTimeMs;\n                        const downloadSizeKb = getSizeKb(event);\n                        const status = getStatus(event);\n                        const operationalDimensions = new Map<string, string>([\n                            [\"content_type\", getContentType(dimensions)],\n                            [\"network_type\", getPlatformInfo().connectionType ?? \"unknown\"],\n                            [\"status\", status],\n                        ]);\n\n                        return {\n                            name: \"completed\",\n                            inProgress: state.inProgress,\n                            dimensions: operationalDimensions,\n                            downloadSizeKb,\n                            downloadTimeMs,\n                        };\n                    default:\n                        assertUnreachable(event);\n                }\n            }\n        ).addEventListener(\"state\", ({ detail: state }) => {\n            if (state.name !== \"completed\") return;\n\n            const { dimensions, downloadTimeMs, downloadSizeKb } = state;\n\n            reporter.count(\"download_finished\", 1, dimensions);\n            reporter.timer(\"download_latency\", downloadTimeMs, dimensions);\n            reporter.histogram(\"download_size_kb\", downloadSizeKb, dimensions);\n        });\n    }\n);\n", "export const ServerEvent = {\n    fromPartial<I extends Exact<DeepPartial<ServerEvent>, I>>(object: I): ServerEvent {\n        const message = createBaseServerEvent();\n        message.eventName = object.eventName ?? \"\";\n        message.serverTs = object.serverTs ?? 0;\n        message.userId = object.userId ?? \"\";\n        message.userAgent = object.userAgent ?? \"\";\n        message.country = object.country ?? \"\";\n        message.city = object.city ?? \"\";\n        message.region = object.region ?? \"\";\n        message.eventId = object.eventId ?? \"\";\n        message.instanceId = object.instanceId ?? \"\";\n        message.sequenceId = object.sequenceId ?? 0;\n        message.osType = object.osType ?? \"\";\n        message.osVersion = object.osVersion ?? \"\";\n        message.appVersion = object.appVersion ?? \"\";\n        message.appBuild = object.appBuild ?? \"\";\n        message.serverUploadTs = object.serverUploadTs ?? 0;\n        message.eventTime = object.eventTime ?? 0;\n        message.serverReceiptTime = object.serverReceiptTime ?? 0;\n        message.maxSequenceIdOnInstance = object.maxSequenceIdOnInstance ?? 0;\n        message.userGuid = object.userGuid ?? \"\";\n        message.collection = object.collection ?? 0;\n        message.serviceId = object.serviceId ?? \"\";\n        message.appType = object.appType ?? 0;\n        message.spectrumInstanceId = object.spectrumInstanceId ?? \"\";\n        message.spectrumSequenceId = object.spectrumSequenceId ?? 0;\n        message.eventData =\n            object.eventData !== undefined && object.eventData !== null\n                ? ServerEventData.fromPartial(object.eventData)\n                : undefined;\n        return message;\n    },\n};\n\nexport const ServerEventData = {\n    fromPartial<I extends Exact<DeepPartial<ServerEventData>, I>>(object: I): ServerEventData {\n        const message = createBaseServerEventData();\n        message.cameraKitException =\n            object.cameraKitException !== undefined && object.cameraKitException !== null\n                ? CameraKitException.fromPartial(object.cameraKitException)\n                : undefined;\n        message.cameraKitLensSpin =\n            object.cameraKitLensSpin !== undefined && object.cameraKitLensSpin !== null\n                ? CameraKitLensSpin.fromPartial(object.cameraKitLensSpin)\n                : undefined;\n        message.cameraKitAssetDownload =\n            object.cameraKitAssetDownload !== undefined && object.cameraKitAssetDownload !== null\n                ? CameraKitAssetDownload.fromPartial(object.cameraKitAssetDownload)\n                : undefined;\n        message.cameraKitLensContentValidationFailed =\n            object.cameraKitLensContentValidationFailed !== undefined && object.cameraKitLensContentValidationFailed !== null\n                ? CameraKitLensContentValidationFailed.fromPartial(object.cameraKitLensContentValidationFailed)\n                : undefined;\n        message.cameraKitLensDownload =\n            object.cameraKitLensDownload !== undefined && object.cameraKitLensDownload !== null\n                ? CameraKitLensDownload.fromPartial(object.cameraKitLensDownload)\n                : undefined;\n        message.cameraKitAssetValidationFailed =\n            object.cameraKitAssetValidationFailed !== undefined && object.cameraKitAssetValidationFailed !== null\n                ? CameraKitAssetValidationFailed.fromPartial(object.cameraKitAssetValidationFailed)\n                : undefined;\n        message.cameraKitSession =\n            object.cameraKitSession !== undefined && object.cameraKitSession !== null\n                ? CameraKitSession.fromPartial(object.cameraKitSession)\n                : undefined;\n        message.cameraKitWebLensSwipe =\n            object.cameraKitWebLensSwipe !== undefined && object.cameraKitWebLensSwipe !== null\n                ? CameraKitWebLensSwipe.fromPartial(object.cameraKitWebLensSwipe)\n                : undefined;\n        message.cameraKitWebBenchmarkComplete =\n            object.cameraKitWebBenchmarkComplete !== undefined && object.cameraKitWebBenchmarkComplete !== null\n                ? CameraKitWebBenchmarkComplete.fromPartial(object.cameraKitWebBenchmarkComplete)\n                : undefined;\n        message.cameraKitLegalPrompt =\n            object.cameraKitLegalPrompt !== undefined && object.cameraKitLegalPrompt !== null\n                ? CameraKitLegalPrompt.fromPartial(object.cameraKitLegalPrompt)\n                : undefined;\n        return message;\n    },\n};\n\nfunction createBaseServerEventData(): ServerEventData {\n    return {\n        cameraKitException: undefined,\n        cameraKitLensSpin: undefined,\n        cameraKitAssetDownload: undefined,\n        cameraKitLensContentValidationFailed: undefined,\n        cameraKitLensDownload: undefined,\n        cameraKitAssetValidationFailed: undefined,\n        cameraKitSession: undefined,\n        cameraKitWebLensSwipe: undefined,\n        cameraKitWebBenchmarkComplete: undefined,\n        cameraKitLegalPrompt: undefined,\n    };\n}\n\nfunction createBaseServerEvent(): ServerEvent {\n    return {\n        eventName: \"\",\n        serverTs: 0,\n        userId: \"\",\n        userAgent: \"\",\n        country: \"\",\n        city: \"\",\n        region: \"\",\n        eventId: \"\",\n        instanceId: \"\",\n        sequenceId: 0,\n        osType: \"\",\n        osVersion: \"\",\n        appVersion: \"\",\n        appBuild: \"\",\n        serverUploadTs: 0,\n        eventTime: 0,\n        serverReceiptTime: 0,\n        maxSequenceIdOnInstance: 0,\n        userGuid: \"\",\n        collection: 0,\n        serviceId: \"\",\n        appType: 0,\n        spectrumInstanceId: \"\",\n        spectrumSequenceId: 0,\n        eventData: undefined,\n    };\n}\n\nexport interface ServerEvent {\n    eventName: string;\n    serverTs: number;\n    userId: string;\n    userAgent: string;\n    country: string;\n    city: string;\n    region: string;\n    eventId: string;\n    instanceId: string;\n    sequenceId: number;\n    osType: string;\n    osVersion: string;\n    appVersion: string;\n    appBuild: string;\n    serverUploadTs: number;\n    eventTime: number;\n    serverReceiptTime: number;\n    maxSequenceIdOnInstance: number;\n    userGuid: string;\n    collection: Collection;\n    serviceId: string;\n    appType: AppType;\n    spectrumInstanceId: string;\n    spectrumSequenceId: number;\n    eventData: ServerEventData | undefined;\n}\n\nexport interface ServerEventData {\n    cameraKitException: CameraKitException | undefined;\n    cameraKitLensSpin: CameraKitLensSpin | undefined;\n    cameraKitAssetDownload: CameraKitAssetDownload | undefined;\n    cameraKitLensContentValidationFailed: CameraKitLensContentValidationFailed | undefined;\n    cameraKitLensDownload: CameraKitLensDownload | undefined;\n    cameraKitAssetValidationFailed: CameraKitAssetValidationFailed | undefined;\n    cameraKitSession: CameraKitSession | undefined;\n    cameraKitWebLensSwipe: CameraKitWebLensSwipe | undefined;\n    cameraKitWebBenchmarkComplete: CameraKitWebBenchmarkComplete | undefined;\n    cameraKitLegalPrompt: CameraKitLegalPrompt | undefined;\n}\n\nexport enum AppType {\n    IOS_NATIVE = 0,\n    IOS_WEB_DESKTOP = 1,\n    IOS_WEB_MOBILE = 2,\n    ANDROID_NATIVE = 3,\n    ANDROID_WEB_DESKTOP = 4,\n    ANDROID_WEB_MOBILE = 5,\n    OSX_WEB_DESKTOP = 6,\n    OSX_WEB_MOBILE = 7,\n    WINDOWS_WEB_DESKTOP = 8,\n    WINDOWS_WEB_MOBILE = 9,\n    LINUX_WEB_DESKTOP = 10,\n    LINUX_WEB_MOBILE = 11,\n    LENSSTUDIO = 12,\n    SNAPCAMERA = 13,\n    WEB_DESKTOP = 14,\n    WEB_MOBILE = 15,\n    LENSSTUDIO_REMAKE = 16,\n    UNRECOGNIZED = -1\n}\n\nexport enum Collection {\n    COLLECTION_UNUSED = 0,\n    GAE = 1,\n    GCE_M = 2,\n    GCE_S = 3,\n    GCE_T = 4,\n    GKE_M = 5,\n    GKE_S = 6,\n    GKE_T = 7,\n    LOCAL = 8,\n    GCE_ST = 9,\n    GKE_ST = 10,\n    GCE_C = 11,\n    GCE_SC = 12,\n    GCE_TC = 13,\n    GCE_TSC = 14,\n    GKE_C = 15,\n    GKE_SC = 16,\n    GKE_TC = 17,\n    GKE_TSC = 18,\n    GKE_W = 19,\n    GKE_WT = 20,\n    GKE_WC = 21,\n    GKE_WSC = 22,\n    UNRECOGNIZED = -1\n}\n\nexport const CameraKitLensSpin = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitLensSpin>, I>>(object: I): CameraKitLensSpin {\n        const message = createBaseCameraKitLensSpin();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.lensId = object.lensId ?? \"\";\n        message.viewTimeSec = object.viewTimeSec ?? 0;\n        message.lensGroupId = object.lensGroupId ?? \"\";\n        return message;\n    },\n};\n\nfunction createBaseCameraKitLensSpin(): CameraKitLensSpin {\n    return { cameraKitEventBase: undefined, lensId: \"\", viewTimeSec: 0, lensGroupId: \"\" };\n}\n\nexport interface CameraKitLensSpin {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    lensId: string;\n    viewTimeSec: number;\n    lensGroupId: string;\n}\n\nexport const CameraKitWebLensSwipe = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitWebLensSwipe>, I>>(object: I): CameraKitWebLensSwipe {\n        const message = createBaseCameraKitWebLensSwipe();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.performanceCluster = object.performanceCluster ?? 0;\n        message.webglRendererInfo = object.webglRendererInfo ?? \"\";\n        message.lensId = object.lensId ?? \"\";\n        message.lensFrameProcessingTimeMsAvg = object.lensFrameProcessingTimeMsAvg ?? 0;\n        message.lensFrameProcessingTimeMsStd = object.lensFrameProcessingTimeMsStd ?? 0;\n        message.viewTimeSec = object.viewTimeSec ?? 0;\n        message.recordingTimeSec = object.recordingTimeSec ?? 0;\n        message.applyDelaySec = object.applyDelaySec ?? 0;\n        message.avgFps = object.avgFps ?? 0;\n        message.isLensFirstWithinDay = object.isLensFirstWithinDay ?? false;\n        message.isLensFirstWithinMonth = object.isLensFirstWithinMonth ?? false;\n        message.lensGroupId = object.lensGroupId ?? \"\";\n        return message;\n    },\n};\n\nfunction createBaseCameraKitWebLensSwipe(): CameraKitWebLensSwipe {\n    return {\n        cameraKitEventBase: undefined,\n        performanceCluster: 0,\n        webglRendererInfo: \"\",\n        lensId: \"\",\n        lensFrameProcessingTimeMsAvg: 0,\n        lensFrameProcessingTimeMsStd: 0,\n        viewTimeSec: 0,\n        recordingTimeSec: 0,\n        applyDelaySec: 0,\n        avgFps: 0,\n        isLensFirstWithinDay: false,\n        isLensFirstWithinMonth: false,\n        lensGroupId: \"\",\n    };\n}\n\nexport interface CameraKitWebLensSwipe {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    performanceCluster: number;\n    webglRendererInfo: string;\n    lensId: string;\n    lensFrameProcessingTimeMsAvg: number;\n    lensFrameProcessingTimeMsStd: number;\n    viewTimeSec: number;\n    recordingTimeSec: number;\n    applyDelaySec: number;\n    avgFps: number;\n    isLensFirstWithinDay: boolean;\n    isLensFirstWithinMonth: boolean;\n    lensGroupId: string;\n}\n\nexport const CameraKitLensDownload = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitLensDownload>, I>>(object: I): CameraKitLensDownload {\n        const message = createBaseCameraKitLensDownload();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.lensId = object.lensId ?? \"\";\n        message.automaticDownload = object.automaticDownload ?? false;\n        message.downloadTimeSec = object.downloadTimeSec ?? 0;\n        message.sizeByte = object.sizeByte ?? 0;\n        return message;\n    },\n};\n\nfunction createBaseCameraKitLensDownload(): CameraKitLensDownload {\n    return { cameraKitEventBase: undefined, lensId: \"\", automaticDownload: false, downloadTimeSec: 0, sizeByte: 0 };\n}\n\nexport interface CameraKitLensDownload {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    lensId: string;\n    automaticDownload: boolean;\n    downloadTimeSec: number;\n    sizeByte: number;\n}\n\nexport const CameraKitAssetDownload = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitAssetDownload>, I>>(object: I): CameraKitAssetDownload {\n        const message = createBaseCameraKitAssetDownload();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.automaticDownload = object.automaticDownload ?? false;\n        message.downloadTimeSec = object.downloadTimeSec ?? 0;\n        message.sizeByte = object.sizeByte ?? 0;\n        message.assetId = object.assetId ?? \"\";\n        return message;\n    },\n};\n\nfunction createBaseCameraKitAssetDownload(): CameraKitAssetDownload {\n    return { cameraKitEventBase: undefined, automaticDownload: false, downloadTimeSec: 0, sizeByte: 0, assetId: \"\" };\n}\n\nexport interface CameraKitAssetDownload {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    automaticDownload: boolean;\n    downloadTimeSec: number;\n    sizeByte: number;\n    assetId: string;\n}\n\nexport const CameraKitException = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitException>, I>>(object: I): CameraKitException {\n        const message = createBaseCameraKitException();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.lensId = object.lensId ?? \"\";\n        message.type = object.type ?? \"\";\n        message.reason = object.reason ?? \"\";\n        return message;\n    },\n};\n\nfunction createBaseCameraKitException(): CameraKitException {\n    return { cameraKitEventBase: undefined, lensId: \"\", type: \"\", reason: \"\" };\n}\n\nexport interface CameraKitException {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    lensId: string;\n    type: string;\n    reason: string;\n}\n\nexport const CameraKitSession = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitSession>, I>>(object: I): CameraKitSession {\n        const message = createBaseCameraKitSession();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.dailySessionBucket = object.dailySessionBucket ?? 0;\n        message.isFirstWithinMonth = object.isFirstWithinMonth ?? false;\n        message.day = object.day ?? 0;\n        message.month = object.month ?? 0;\n        message.year = object.year ?? 0;\n        return message;\n    },\n};\n\nfunction createBaseCameraKitSession(): CameraKitSession {\n    return { cameraKitEventBase: undefined, dailySessionBucket: 0, isFirstWithinMonth: false, day: 0, month: 0, year: 0 };\n}\n\nexport interface CameraKitSession {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    dailySessionBucket: DailySessionBucket;\n    isFirstWithinMonth: boolean;\n    day: number;\n    month: number;\n    year: number;\n}\n\nexport enum DailySessionBucket {\n    NO_SESSION_BUCKET = 0,\n    ONE_SESSION = 1,\n    TWO_SESSION = 2,\n    THREE_SESSION = 3,\n    FOUR_SESSION = 4,\n    FIVE_SESSION = 5,\n    SIX_SESSION = 6,\n    SEVEN_SESSION = 7,\n    EIGHT_SESSION = 8,\n    NINE_SESSION = 9,\n    TEN_OR_MORE_SESSION = 10,\n    UNRECOGNIZED = -1\n}\n\nexport const CameraKitLensContentValidationFailed = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitLensContentValidationFailed>, I>>(object: I): CameraKitLensContentValidationFailed {\n        const message = createBaseCameraKitLensContentValidationFailed();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.lensId = object.lensId ?? \"\";\n        return message;\n    },\n};\n\nfunction createBaseCameraKitLensContentValidationFailed(): CameraKitLensContentValidationFailed {\n    return { cameraKitEventBase: undefined, lensId: \"\" };\n}\n\nexport interface CameraKitLensContentValidationFailed {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    lensId: string;\n}\n\nexport const CameraKitAssetValidationFailed = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitAssetValidationFailed>, I>>(object: I): CameraKitAssetValidationFailed {\n        const message = createBaseCameraKitAssetValidationFailed();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.assetId = object.assetId ?? \"\";\n        return message;\n    },\n};\n\nfunction createBaseCameraKitAssetValidationFailed(): CameraKitAssetValidationFailed {\n    return { cameraKitEventBase: undefined, assetId: \"\" };\n}\n\nexport interface CameraKitAssetValidationFailed {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    assetId: string;\n}\n\nexport const CameraKitWebBenchmarkComplete = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitWebBenchmarkComplete>, I>>(object: I): CameraKitWebBenchmarkComplete {\n        const message = createBaseCameraKitWebBenchmarkComplete();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.benchmarkName = object.benchmarkName ?? \"\";\n        message.benchmarkValue = object.benchmarkValue ?? 0;\n        message.performanceCluster = object.performanceCluster ?? 0;\n        message.webglRendererInfo = object.webglRendererInfo ?? \"\";\n        return message;\n    },\n};\n\nfunction createBaseCameraKitWebBenchmarkComplete(): CameraKitWebBenchmarkComplete {\n    return {\n        cameraKitEventBase: undefined,\n        benchmarkName: \"\",\n        benchmarkValue: 0,\n        performanceCluster: 0,\n        webglRendererInfo: \"\",\n    };\n}\n\nexport interface CameraKitWebBenchmarkComplete {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    benchmarkName: string;\n    benchmarkValue: number;\n    performanceCluster: number;\n    webglRendererInfo: string;\n}\n\nexport const CameraKitLegalPrompt = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitLegalPrompt>, I>>(object: I): CameraKitLegalPrompt {\n        const message = createBaseCameraKitLegalPrompt();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.legalPromptId = object.legalPromptId ?? \"\";\n        message.legalPromptResult = object.legalPromptResult ?? 0;\n        return message;\n    },\n};\n\nexport const CameraKitEventBase = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitEventBase>, I>>(object: I): CameraKitEventBase {\n        const message = createBaseCameraKitEventBase();\n        message.kitEventBase =\n            object.kitEventBase !== undefined && object.kitEventBase !== null\n                ? KitEventBase.fromPartial(object.kitEventBase)\n                : undefined;\n        message.deviceCluster = object.deviceCluster ?? 0;\n        message.cameraKitVersion = object.cameraKitVersion ?? \"\";\n        message.lensCoreVersion = object.lensCoreVersion ?? \"\";\n        message.deviceModel = object.deviceModel ?? \"\";\n        message.cameraKitVariant = object.cameraKitVariant ?? 0;\n        message.cameraKitFlavor = object.cameraKitFlavor ?? 0;\n        message.appId = object.appId ?? \"\";\n        message.deviceConnectivity = object.deviceConnectivity ?? 0;\n        message.sessionId = object.sessionId ?? \"\";\n        message.appVendorUuid = object.appVendorUuid ?? \"\";\n        message.rankingRequestId = object.rankingRequestId ?? \"\";\n        message.cameraKitEnvironment = object.cameraKitEnvironment ?? 0;\n        message.partnerUuid = object.partnerUuid ?? \"\";\n        return message;\n    },\n};\n\nexport const KitEventBase = {\n    fromPartial<I extends Exact<DeepPartial<KitEventBase>, I>>(object: I): KitEventBase {\n        const message = createBaseKitEventBase();\n        message.oauthClientId = object.oauthClientId ?? \"\";\n        message.locale = object.locale ?? \"\";\n        message.kitUserAgent = object.kitUserAgent ?? \"\";\n        message.ipAddress = object.ipAddress ?? \"\";\n        message.osMinorVersion = object.osMinorVersion ?? \"\";\n        message.kitVariant = object.kitVariant ?? 0;\n        message.kitVariantVersion = object.kitVariantVersion ?? \"\";\n        message.kitClientTimestampMillis = object.kitClientTimestampMillis ?? 0;\n        message.clientSequenceId = object.clientSequenceId ?? 0;\n        message.maxClientSequenceIdOnInstance = object.maxClientSequenceIdOnInstance ?? 0;\n        message.targetArchitecture = object.targetArchitecture ?? \"\";\n        message.runningWithDebuggerAttached = object.runningWithDebuggerAttached ?? false;\n        message.runningInTests = object.runningInTests ?? false;\n        message.runningInSimulator = object.runningInSimulator ?? false;\n        message.isAppPrerelease = object.isAppPrerelease ?? false;\n        message.kitAppId = object.kitAppId ?? \"\";\n        message.kitSessionId = object.kitSessionId ?? \"\";\n        message.kitPluginType = object.kitPluginType ?? 0;\n        message.isFromReactNativePlugin = object.isFromReactNativePlugin ?? false;\n        return message;\n    },\n};\n\nfunction createBaseKitEventBase(): KitEventBase {\n    return {\n        oauthClientId: \"\",\n        locale: \"\",\n        kitUserAgent: \"\",\n        ipAddress: \"\",\n        osMinorVersion: \"\",\n        kitVariant: 0,\n        kitVariantVersion: \"\",\n        kitClientTimestampMillis: 0,\n        clientSequenceId: 0,\n        maxClientSequenceIdOnInstance: 0,\n        targetArchitecture: \"\",\n        runningWithDebuggerAttached: false,\n        runningInTests: false,\n        runningInSimulator: false,\n        isAppPrerelease: false,\n        kitAppId: \"\",\n        kitSessionId: \"\",\n        kitPluginType: 0,\n        isFromReactNativePlugin: false,\n    };\n}\n\nfunction createBaseCameraKitEventBase(): CameraKitEventBase {\n    return {\n        kitEventBase: undefined,\n        deviceCluster: 0,\n        cameraKitVersion: \"\",\n        lensCoreVersion: \"\",\n        deviceModel: \"\",\n        cameraKitVariant: 0,\n        cameraKitFlavor: 0,\n        appId: \"\",\n        deviceConnectivity: 0,\n        sessionId: \"\",\n        appVendorUuid: \"\",\n        rankingRequestId: \"\",\n        cameraKitEnvironment: 0,\n        partnerUuid: \"\",\n    };\n}\n\nfunction createBaseCameraKitLegalPrompt(): CameraKitLegalPrompt {\n    return { cameraKitEventBase: undefined, legalPromptId: \"\", legalPromptResult: 0 };\n}\n\nexport interface CameraKitLegalPrompt {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    legalPromptId: string;\n    legalPromptResult: CameraKitLegalPromptResult;\n}\n\nexport enum CameraKitLegalPromptResult {\n    CAMERA_KIT_LEGAL_PROMPT_MISSING = 0,\n    CAMERA_KIT_LEGAL_PROMPT_ACCEPTED = 1,\n    CAMERA_KIT_LEGAL_PROMPT_DISMISSED = 2,\n    UNRECOGNIZED = -1\n}\n\nexport interface CameraKitEventBase {\n    kitEventBase: KitEventBase | undefined;\n    deviceCluster: number;\n    cameraKitVersion: string;\n    lensCoreVersion: string;\n    deviceModel: string;\n    cameraKitVariant: CameraKitVariant;\n    cameraKitFlavor: CameraKitFlavor;\n    appId: string;\n    deviceConnectivity: CameraKitConnectivityType;\n    sessionId: string;\n    appVendorUuid: string;\n    rankingRequestId: string;\n    cameraKitEnvironment: CameraKitEnvironment;\n    partnerUuid: string;\n}\n\nexport enum CameraKitEnvironment {\n    CAMERA_KIT_ENVIRONMENT_UNKNOWN = 0,\n    CAMERA_KIT_ENVIRONMENT_STAGING = 1,\n    CAMERA_KIT_ENVIRONMENT_PRODUCTION = 2,\n    UNRECOGNIZED = -1\n}\n\nexport enum CameraKitConnectivityType {\n    CAMERA_KIT_CONNECTIVITY_TYPE_UNKNOWN = 0,\n    CAMERA_KIT_CONNECTIVITY_TYPE_WIFI = 1,\n    CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE = 2,\n    CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE = 3,\n    CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH = 4,\n    UNRECOGNIZED = -1\n}\n\nexport enum CameraKitFlavor {\n    CAMERA_KIT_FLAVOR_UNKNOWN = 0,\n    CAMERA_KIT_FLAVOR_DEBUG = 1,\n    CAMERA_KIT_FLAVOR_RELEASE = 2,\n    UNRECOGNIZED = -1\n}\n\nexport enum CameraKitVariant {\n    CAMERA_KIT_VARIANT_UNKNOWN = 0,\n    CAMERA_KIT_VARIANT_PARTNER = 1,\n    CAMERA_KIT_VARIANT_PUBLIC = 2,\n    UNRECOGNIZED = -1\n}\n\nexport interface KitEventBase {\n    oauthClientId: string;\n    locale: string;\n    kitUserAgent: string;\n    ipAddress: string;\n    osMinorVersion: string;\n    kitVariant: KitType;\n    kitVariantVersion: string;\n    kitClientTimestampMillis: number;\n    clientSequenceId: number;\n    maxClientSequenceIdOnInstance: number;\n    targetArchitecture: string;\n    runningWithDebuggerAttached: boolean;\n    runningInTests: boolean;\n    runningInSimulator: boolean;\n    isAppPrerelease: boolean;\n    kitAppId: string;\n    kitSessionId: string;\n    kitPluginType: KitPluginType;\n    isFromReactNativePlugin: boolean;\n}\n\nexport enum KitPluginType {\n    NO_PLUGIN = 0,\n    UNITY = 1,\n    UNRECOGNIZED = -1\n}\n\nexport enum KitType {\n    UNKNOWN_KIT_TYPE = 0,\n    BITMOJI_KIT = 1,\n    CREATIVE_KIT = 2,\n    LOGIN_KIT = 3,\n    STORY_KIT = 4,\n    CAMERA_KIT = 5,\n    SHOP_KIT = 6,\n    EULA_KIT = 7,\n    PAYMENTS_KIT = 8,\n    INVITE_KIT = 9,\n    CAMERA_KIT_WEB = 10,\n    UNRECOGNIZED = -1\n}\n\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\n\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n", "import { forActions } from \"@snap/state-management\";\nimport { map } from \"rxjs\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { CameraKitLegalPromptResult } from \"../../generated-proto/blizzard/cameraKitEvents\";\nimport { LegalState, legalStateFactory } from \"../../legal/legalState\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\n\n/**\n * The LegalPrompt metric reports each time a BIPA legal prompt is shown.\n */\nexport type LegalPrompt = MakeTaggedBusinessEvent<\"legalPrompt\">;\n\n/**\n * @internal\n */\nexport const reportLegalState = Injectable(\n    \"reportLegalState\",\n    [legalStateFactory.token, metricsEventTargetFactory.token, operationalMetricReporterFactory.token] as const,\n    (\n        legalState: LegalState,\n        metricsEventTarget: MetricsEventTarget,\n        operationalMetricsReporter: OperationalMetricsReporter\n    ) => {\n        legalState.events\n            .pipe(\n                forActions(\"accept\", \"reject\"),\n                map(([{ data, name }]) => ({\n                    name: \"legalPrompt\" as const,\n                    legalPromptId: data,\n                    legalPromptResult:\n                        name === \"accept\"\n                            ? CameraKitLegalPromptResult.CAMERA_KIT_LEGAL_PROMPT_ACCEPTED\n                            : CameraKitLegalPromptResult.CAMERA_KIT_LEGAL_PROMPT_DISMISSED,\n                }))\n            )\n            .subscribe({\n                next: (legalPromptEvent) => {\n                    metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"legalPrompt\", legalPromptEvent));\n                    operationalMetricsReporter.count(\n                        \"legal_prompt_interaction\",\n                        1,\n                        new Map([\n                            [\n                                \"accepted\",\n                                (\n                                    legalPromptEvent.legalPromptResult ===\n                                    CameraKitLegalPromptResult.CAMERA_KIT_LEGAL_PROMPT_ACCEPTED\n                                ).toString(),\n                            ],\n                        ])\n                    );\n                },\n            });\n    }\n);\n", "import { forActions } from \"@snap/state-management\";\nimport { filter } from \"rxjs\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { lensStateFactory, LensState } from \"../../session/lensState\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\n\n/**\n * The LensContentValidationFailed metric reports every time we handle an lens checksum validation failure.\n */\nexport type LensContentValidationFailed = MakeTaggedBusinessEvent<\"lensContentValidationFailed\">;\n\n/**\n * @internal\n */\nexport const reportLensValidationFailed = Injectable(\n    \"reportLensValidationFailed\",\n    [lensStateFactory.token, metricsEventTargetFactory.token] as const,\n    (lensState: LensState, metricsEventTarget: MetricsEventTarget) => {\n        lensState.events\n            .pipe(\n                forActions(\"applyLensFailed\"),\n                filter(([a]) => a.data.error.name === \"LensContentValidationError\")\n            )\n            .subscribe({\n                next: ([{ data }]) => {\n                    const { lens } = data;\n                    const lensContentValidationFailed: LensContentValidationFailed = {\n                        name: \"lensContentValidationFailed\",\n                        lensId: lens.id,\n                    };\n                    metricsEventTarget.dispatchEvent(\n                        new TypedCustomEvent(\"lensContentValidationFailed\", lensContentValidationFailed)\n                    );\n                },\n            });\n    }\n);\n", "import { OperationalMetric } from \"../../generated-proto/pb_schema/camera_kit/v3/operational_metrics\";\nimport { Metric, MetricDimensions, serializeMetricDimensions } from \"./Metric\";\n\n/** @internal */\nexport type HistogramMetric = OperationalMetric & {\n    metric: Extract<OperationalMetric[\"metric\"], { $case: \"histogram\" }>;\n};\n\n/** @internal */\nexport class Histogram extends Metric {\n    static level(name: string, level: number, dimsensions: MetricDimensions = {}): Histogram {\n        const histogram = new Histogram(name, dimsensions);\n        histogram.add(level);\n        return histogram;\n    }\n\n    private readonly levels: number[] = [];\n\n    constructor(readonly name: string, dimensions: MetricDimensions = {}) {\n        super(name, dimensions);\n    }\n\n    add(level: number): void {\n        this.levels.push(level);\n    }\n\n    toOperationalMetric(): HistogramMetric[] {\n        const timestamp = new Date();\n        const name = `${this.name}${serializeMetricDimensions(this.dimensions)}`;\n        return this.levels.map((level) => ({ name, timestamp, metric: { $case: \"histogram\", histogram: level } }));\n    }\n}\n", "export const DEFAULT_TIMEZONE = \"America/Los_Angeles\";\n\nexport const dayFormatter = new Intl.DateTimeFormat(\"en-US\", {\n    timeZone: DEFAULT_TIMEZONE,\n    year: \"numeric\",\n    month: \"numeric\",\n    day: \"numeric\",\n});\n\nexport const monthFormatter = new Intl.DateTimeFormat(\"en-US\", {\n    timeZone: DEFAULT_TIMEZONE,\n    year: \"numeric\",\n    month: \"numeric\",\n});\n", "import { combineLatestWith, filter, from, map, merge, mergeMap, of, raceWith, switchMap, take, takeUntil } from \"rxjs\";\nimport { forActions, inStates, isState } from \"@snap/state-management\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport { CameraKitSession, cameraKitSessionFactory } from \"../../session/CameraKitSession\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { getTimeMs } from \"../../common/time\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\nimport { CameraKitConfiguration, configurationToken } from \"../../configuration\";\nimport { lensStateFactory, LensState } from \"../../session/lensState\";\nimport { SessionState, sessionStateFactory } from \"../../session/sessionState\";\nimport { Histogram } from \"../operational/Histogram\";\nimport { IndexedDBPersistence } from \"../../persistence/IndexedDBPersistence\";\nimport { ExpiringPersistence } from \"../../persistence/ExpiringPersistence\";\nimport { dayFormatter, monthFormatter } from \"../../common/date\";\n\n// We ignore short-duration lens views.\n//\n// The value is documented here:\n// https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/edit#heading=h.q5liip76r9lt\nconst viewTimeThresholdSec = 0.1;\n\nasync function isFirstTimeWithinPeriods(lensId: string, persistence: ExpiringPersistence<Date>) {\n    let isLensFirstWithinDay = false;\n    let isLensFirstWithinMonth = false;\n\n    try {\n        const lensLastViewDate = await persistence.retrieve(lensId);\n        const currentDate = new Date();\n\n        if (!lensLastViewDate) {\n            isLensFirstWithinDay = true;\n            isLensFirstWithinMonth = true;\n        } else {\n            isLensFirstWithinDay = dayFormatter.format(lensLastViewDate) !== dayFormatter.format(currentDate);\n            isLensFirstWithinMonth = monthFormatter.format(lensLastViewDate) !== monthFormatter.format(currentDate);\n        }\n\n        await persistence.store(lensId, currentDate);\n    } catch (error) {\n        console.error(`Error handling persistence for lensId ${lensId}: ${error}`);\n        isLensFirstWithinDay = false;\n        isLensFirstWithinMonth = false;\n    }\n\n    return { isLensFirstWithinDay, isLensFirstWithinMonth };\n}\n\n/**\n * The LensView metric is emitted after a lens has been viewed (for longer than 100ms), when the lens is turned off.\n *\n * It contains information about rendering performance.\n *\n * Notes:\n *   - If the page is hidden (e.g. user switches to a different tab, or application, or closes the tab, or closes the\n *     browser, navigates to a new page, refreshes, etc.) this metric will be emitted at that time. This is to ensure\n *     we don't lose the metric if the page is closed.\n *   - If the page is hidden and then made visible again later (e.g. user switches to a different tab, then back), we\n *     will begin measuring a new LensView. That is, we will not capture the time when the page is hidden even if the\n *     lens is still rendering in the background.\n *\n * @category Lenses\n * @category Metrics\n */\n// This type corresponds to the internal CameraKitLensSwipe event, described here:\n// https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY#heading=h.q5liip76r9lt\nexport type LensView = MakeTaggedBusinessEvent<\"lensView\">;\n\n/**\n * @internal\n */\nexport const reportLensView = Injectable(\n    \"reportLensView\",\n    [\n        cameraKitSessionFactory.token,\n        lensStateFactory.token,\n        sessionStateFactory.token,\n        metricsEventTargetFactory.token,\n        operationalMetricReporterFactory.token,\n        configurationToken,\n    ] as const,\n    async (\n        session: CameraKitSession,\n        lensState: LensState,\n        sessionState: SessionState,\n        metricsEventTarget: MetricsEventTarget,\n        operationalMetricsReporter: OperationalMetricsReporter,\n        configuration: CameraKitConfiguration\n    ): Promise<void> => {\n        // We need to do this await up front so that it won't interrupt reporting the metric when the session is\n        // suspended -- suspension could happen because the tab is closing, in which case we cannot perform await a\n        // Promise, because in the case of a tab close the browser will not schedule any work for future turns of the\n        // event loop.\n        const { cluster: performanceCluster, webglRendererInfo } = (await configuration.lensPerformance) ?? {\n            cluster: 0,\n            webglRendererInfo: \"unknown\",\n        };\n\n        const lensViewPersistence = new ExpiringPersistence<Date>(\n            // 60 days expiration\n            () => 60 * 24 * 60 * 60,\n            new IndexedDBPersistence({ databaseName: \"recentLensViews\" })\n        );\n\n        merge(\n            // Begin measuring LensCore apply time once the lens has finished downloading and we actually add the lens\n            // to LensCore (LensWait measures the full download + LensCore apply time i.e. perceived UX latency).\n            lensState.events.pipe(\n                forActions(\"downloadComplete\"),\n                map(([a]) => a.data)\n            ),\n\n            // If the session is resumed (e.g. user returns to this tab while a lens is on), we count this as a new\n            // LensView (and applyDelaySec will be 0).\n            lensState.events.pipe(\n                inStates(\"lensApplied\"),\n                switchMap(([, s]) =>\n                    sessionState.events.pipe(\n                        forActions(\"resume\"),\n                        takeUntil(lensState.events.pipe(forActions(\"removeLens\"))),\n                        map(() => s.data)\n                    )\n                )\n            )\n        )\n            .pipe(\n                map((lens): [number, string, string] => [getTimeMs(), lens.id, lens.groupId]),\n                mergeMap(([applyLensStartTime, lensId, lensGroupId]) => {\n                    const alreadyOn = isState(lensState.getState(), \"lensApplied\");\n\n                    const applyDelay = alreadyOn\n                        ? of(0)\n                        : lensState.events.pipe(\n                              forActions(\"resourcesLoaded\"),\n                              filter(([a]) => a.data.id === lensId),\n                              // Applying a new lens may happen before removing the old one, so if we kept taking events\n                              // we would get the lensResourcesLoaded for the next lens, too.\n                              take(1),\n                              map(() => (getTimeMs() - applyLensStartTime) / 1000)\n                          );\n\n                    const viewMetrics = (\n                        alreadyOn\n                            ? of([getTimeMs(), session.metrics.beginMeasurement()] as const)\n                            : lensState.events.pipe(\n                                  forActions(\"turnedOn\"),\n                                  filter(([a]) => a.data.id === lensId),\n                                  map(() => [getTimeMs(), session.metrics.beginMeasurement()] as const)\n                              )\n                    ).pipe(\n                        take(1),\n                        mergeMap(([lensTurnedOnTime, metricsMeasurement]) =>\n                            lensState.events.pipe(\n                                forActions(\"turnedOff\"),\n                                // Applying a new lens may happen before removing the old one, so we'll get a\n                                // lensTurnedOff for the prior lens (if one was applied), which we must filter out.\n                                filter(([a]) => a.data.id === lensId),\n                                // If the session is suspended, we'll count that as the lens turning off.\n                                raceWith(sessionState.events.pipe(forActions(\"suspend\"))),\n                                map(() => {\n                                    metricsMeasurement.end();\n                                    return {\n                                        viewTimeSec: (getTimeMs() - lensTurnedOnTime) / 1000,\n                                        ...metricsMeasurement.measure(),\n                                    };\n                                })\n                            )\n                        )\n                    );\n\n                    return applyDelay.pipe(\n                        combineLatestWith(viewMetrics, from(isFirstTimeWithinPeriods(lensId, lensViewPersistence))),\n                        // This lens should always receive the lensTurnedOff action *before* the next lens is\n                        // turned on. But just in case that assumption is violated, we'll clean up\n                        // (and not report) if another lens turns on before our lens is turned off.\n                        takeUntil(\n                            lensState.events.pipe(\n                                forActions(\"turnedOn\"),\n                                filter(([a]) => a.data.id !== lensId)\n                            )\n                        ),\n                        take(1),\n                        map(([applyDelaySec, viewMetrics, isFirstTimeResults]) => ({\n                            applyDelaySec,\n                            lensId,\n                            lensGroupId,\n                            ...viewMetrics,\n                            ...isFirstTimeResults,\n                        }))\n                    );\n                })\n            )\n            .subscribe({\n                next: async ({\n                    applyDelaySec,\n                    lensId,\n                    lensGroupId,\n                    viewTimeSec,\n                    avgFps,\n                    lensFrameProcessingTimeMsAvg,\n                    lensFrameProcessingTimeMsStd,\n                    lensFrameProcessingTimeMsMedian,\n                    lensFrameProcessingN,\n                    isLensFirstWithinDay,\n                    isLensFirstWithinMonth,\n                }) => {\n                    if (viewTimeSec < viewTimeThresholdSec) return;\n\n                    const lensView: LensView = {\n                        name: \"lensView\",\n                        applyDelaySec,\n                        avgFps,\n                        lensId,\n                        lensGroupId,\n                        lensFrameProcessingTimeMsAvg,\n                        lensFrameProcessingTimeMsStd,\n                        // We don't support recording video, but applications may do this without our knowledge.\n                        recordingTimeSec: 0,\n                        viewTimeSec,\n                        isLensFirstWithinDay,\n                        isLensFirstWithinMonth,\n                        performanceCluster,\n                        webglRendererInfo,\n                    };\n\n                    metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"lensView\", lensView));\n                    operationalMetricsReporter.report(Histogram.level(\"lens_view\", viewTimeSec * 1000));\n\n                    // The first few frames will typically take much longer to process (as they might involve requesting\n                    // remote assets to be downloaded, or other high-latency initialization steps) -- so we'll skip\n                    // reporting views with a very small number of frames.\n                    if (lensFrameProcessingN >= 30) {\n                        operationalMetricsReporter.report(\n                            Histogram.level(\"lens_view_frame-processing-time\", lensFrameProcessingTimeMsMedian, {\n                                performance_cluster: performanceCluster.toString(),\n                            })\n                        );\n                    }\n                },\n            });\n    }\n);\n", "import { forActions } from \"@snap/state-management\";\nimport { map, mergeMap, take } from \"rxjs\";\nimport { getTimeMs } from \"../../common/time\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { lensStateFactory, LensState } from \"../../session/lensState\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\n\n// We ignore short-duration lens waits.\n//\n// The value is documented here:\n// https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/edit#heading=h.q5liip76r9lt\nconst viewTimeThresholdSec = 0.1;\n\n/**\n * The LensWait metric measures the time spent downloading the lens content and required assets. It gives an indication\n * of the real UX impact of download latency. If lens content and assets are pre-loaded, the latency measured here\n * should decrease – we measure between the request to apply a lens and when the lens is ready to render.\n *\n * @category Lenses\n * @category Metrics\n */\n// This type corresponds to the internal CameraKitLensSpin event, described here:\n// https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY#heading=h.q5liip76r9lt\nexport type LensWait = MakeTaggedBusinessEvent<\"lensWait\">;\n\n/**\n * Each time a lens is applied, we measure the duration until the lens is fully loaded by LensCore. This\n * includes any time spent downloading the lens content and required assets from the lens manifest.\n *\n * The intention of this event is to measure the experienced UX latency between a user requesting a lens and\n * the lens rendering. Of course, the application may call `applyLens` at any time, and may hide/show the\n * rendered result at any time – but this should give us a good baseline for how much UX latency could be seen.\n *\n * @internal\n */\nexport const reportLensWait = Injectable(\n    \"reportLensWait\",\n    [lensStateFactory.token, metricsEventTargetFactory.token, operationalMetricReporterFactory.token] as const,\n    (lensState: LensState, metricsEventTarget: MetricsEventTarget, reporter: OperationalMetricsReporter) => {\n        lensState.events\n            .pipe(\n                forActions(\"applyLens\"),\n                mergeMap(([a]) => {\n                    const lensId = a.data.lens.id;\n                    const lensGroupId = a.data.lens.groupId;\n                    const applyLensStartTime = getTimeMs();\n                    return lensState.events.pipe(\n                        // We'll measure the time until either the requested lens was rendered, or a new applyLens\n                        // request was made (in both cases, we're done waiting for this lens).\n                        //\n                        // This does have the side-effect that if a user rapidly switches between lenses, we'll record\n                        // many low-duration lensWait events that are measuring user behavior instead of system latency.\n                        // But this is a good trade-off so that we can capture those long-duration lensWaits that are\n                        // terminated by the user trying a different lens.\n                        //\n                        // (This effect can be mitigated by increasing the viewtimeThresholdSec to ignore low-duration\n                        // waits that are likely caused by user behavior).\n                        forActions(\"firstFrameProcessed\", \"applyLens\"),\n                        take(1),\n                        map((): [number, string, string] => [\n                            (getTimeMs() - applyLensStartTime) / 1000,\n                            lensId,\n                            lensGroupId,\n                        ])\n                    );\n                })\n            )\n            .subscribe({\n                next: ([viewTimeSec, lensId, lensGroupId]) => {\n                    if (viewTimeSec < viewTimeThresholdSec) return;\n\n                    const lensWait: LensWait = {\n                        name: \"lensWait\",\n                        lensId,\n                        viewTimeSec,\n                        lensGroupId,\n                    };\n                    metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"lensWait\", lensWait));\n                    reporter.timer(\"lens.apply_lens_latency\", viewTimeSec * 1000);\n                },\n            });\n    }\n);\n", "import { dayFormatter, monthFormatter } from \"../../common/date\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { DailySessionBucket } from \"../../generated-proto/blizzard/cameraKitEvents\";\nimport { IndexedDBPersistence } from \"../../persistence/IndexedDBPersistence\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\n\ninterface UserSessionInfo {\n    mostRecentSessionStartDate: Date;\n    dailySessionBucket: DailySessionBucket;\n}\n\n/**\n * The Session metric reports each user session.\n */\nexport type Session = MakeTaggedBusinessEvent<\"session\">;\n\n/**\n * @internal\n */\nexport const reportUserSession = Injectable(\n    \"reportUserSession\",\n    [metricsEventTargetFactory.token] as const,\n    async (metricsEventTarget: MetricsEventTarget): Promise<void> => {\n        const userSessionKey = \"userSessionInfo\";\n        const db = new IndexedDBPersistence<UserSessionInfo>({ databaseName: \"SessionHistory\" });\n        // We standardize all user dates to PST as per our documentation:\n        // https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/\n        const date = new Date();\n        const formattedDate = dayFormatter.format(date);\n        const formattedDateParts = dayFormatter.formatToParts(date);\n        const { day, month, year } = formattedDateParts.reduce(\n            (acc: Record<string, number>, { type, value }) => ({\n                ...acc,\n                [type]: parseInt(value),\n            }),\n            {}\n        );\n\n        const userSessionInfo = await db.retrieve(userSessionKey);\n        const mostRecentSessionStartDate = userSessionInfo?.mostRecentSessionStartDate;\n        const formattedMostRecentSessionStartDate = mostRecentSessionStartDate\n            ? dayFormatter.format(mostRecentSessionStartDate)\n            : null;\n\n        const dailySessionBucketMap = new Map<number, DailySessionBucket>([\n            [1, DailySessionBucket.ONE_SESSION],\n            [2, DailySessionBucket.TWO_SESSION],\n            [3, DailySessionBucket.THREE_SESSION],\n            [4, DailySessionBucket.FOUR_SESSION],\n            [5, DailySessionBucket.FIVE_SESSION],\n            [6, DailySessionBucket.SIX_SESSION],\n            [7, DailySessionBucket.SEVEN_SESSION],\n            [8, DailySessionBucket.EIGHT_SESSION],\n            [9, DailySessionBucket.NINE_SESSION],\n        ]);\n        let dailySessionBucket = userSessionInfo?.dailySessionBucket ?? DailySessionBucket.NO_SESSION_BUCKET;\n        let isFirstWithinMonth = false;\n        if (formattedMostRecentSessionStartDate === formattedDate) {\n            dailySessionBucket =\n                dailySessionBucketMap.get(dailySessionBucket + 1) ?? DailySessionBucket.TEN_OR_MORE_SESSION;\n            await db.store(userSessionKey, {\n                mostRecentSessionStartDate: date,\n                dailySessionBucket,\n            });\n        } else {\n            isFirstWithinMonth =\n                !mostRecentSessionStartDate ||\n                monthFormatter.format(mostRecentSessionStartDate) !== monthFormatter.format(date);\n            await db.store(userSessionKey, {\n                mostRecentSessionStartDate: date,\n                dailySessionBucket: (dailySessionBucket = DailySessionBucket.ONE_SESSION),\n            });\n        }\n        const session: Session = {\n            name: \"session\",\n            dailySessionBucket,\n            isFirstWithinMonth,\n            month,\n            day,\n            year,\n        };\n        metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"session\", session));\n    }\n);\n", "import { OperationalMetric } from \"../../generated-proto/pb_schema/camera_kit/v3/operational_metrics\";\nimport { Metric, MetricDimensions, serializeMetricDimensions } from \"./Metric\";\n\n/** @internal */\nexport type CountMetric = OperationalMetric & {\n    metric: Extract<OperationalMetric[\"metric\"], { $case: \"count\" }>;\n};\n\n/** @internal */\nexport class Count extends Metric {\n    static count(name: string, n: number, dimensions: MetricDimensions = {}): Count {\n        const count = new Count(name, dimensions);\n        count.increment(n);\n        return count;\n    }\n\n    private count = 0;\n\n    constructor(readonly name: string, dimensions: MetricDimensions = {}) {\n        super(name, dimensions);\n    }\n\n    increment(count: number): number {\n        this.count += count;\n        return this.count;\n    }\n\n    toOperationalMetric(): CountMetric[] {\n        return [\n            {\n                name: `${this.name}${serializeMetricDimensions(this.dimensions)}`,\n                timestamp: new Date(),\n                metric: { $case: \"count\", count: this.count },\n            },\n        ];\n    }\n}\n", "import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { getPlatformCapabilities } from \"../../platform/platformCapabilities\";\nimport { Count } from \"../operational/Count\";\nimport {\n    OperationalMetricsReporter,\n    operationalMetricReporterFactory,\n} from \"../operational/operationalMetricsReporter\";\n\n/**\n * Report the number of total page loads that have support for various capabilities. By dividing by the total number of\n * data points recorded, we can calculate the percent of page loads with support.\n *\n * @internal\n */\nexport const reportPlatformCapabilities = Injectable(\n    \"reportPlatformCapabilities\",\n    [operationalMetricReporterFactory.token] as const,\n    async (operationalMetricsReporter: OperationalMetricsReporter) => {\n        const { webgl, wasm, webxr } = await getPlatformCapabilities();\n        operationalMetricsReporter.report(Count.count(\"platform_webgl\", webgl.supported ? 1 : 0));\n        operationalMetricsReporter.report(Count.count(\"platform_wasm\", wasm.supported ? 1 : 0));\n        operationalMetricsReporter.report(Count.count(\"platform_webxr\", webxr.supported ? 1 : 0));\n    }\n);\n", "import { PartialContainer } from \"../../dependency-injection/PartialContainer\";\nimport { reportSessionException } from \"./reportSessionException\";\nimport { reportBenchmarks } from \"./reportBenchmarks\";\nimport { reportHttpMetrics } from \"./reportHttpMetrics\";\nimport { reportLegalState } from \"./reportLegalState\";\nimport { reportLensAndAssetDownload } from \"./reportLensAndAssetDownload\";\nimport { reportLensValidationFailed } from \"./reportLensValidationFailed\";\nimport { reportLensView } from \"./reportLensView\";\nimport { reportLensWait } from \"./reportLensWait\";\nimport { reportUserSession } from \"./reportUserSession\";\nimport { reportPlatformCapabilities } from \"./reportPlatformCapabilities\";\n\n/**\n * These metrics reporters must be run once in the top-level DI container. They only depend on globally-available\n * services.\n *\n * The businessEventsReporter is special, it doesn't create any of its own metrics, it simply listens to the global\n * metricsEventTarget and reports metrics emitted there to our backend.\n */\nexport const reportGloballyScopedMetrics = new PartialContainer({})\n    .provides(reportHttpMetrics)\n    .provides(reportBenchmarks)\n    .provides(reportLensAndAssetDownload)\n    .provides(reportLegalState)\n    .provides(reportPlatformCapabilities);\n\n/**\n * These metrics reporters must be run once for each CameraKitSession DI container created. They may depend on services\n * which are only available at the session scope (e.g. the CameraKitSession itself).\n */\nexport const reportSessionScopedMetrics = new PartialContainer({})\n    .provides(reportUserSession)\n    .provides(reportLensView)\n    .provides(reportLensWait)\n    .provides(reportSessionException)\n    .provides(reportLensValidationFailed);\n", "const e=(()=>{if(\"undefined\"==typeof self)return!1;if(\"top\"in self&&self!==top)try{top}catch(e){return!1}else if(\"showOpenFilePicker\"in self)return\"showOpenFilePicker\";return!1})(),t=e?Promise.resolve().then(function(){return l}):Promise.resolve().then(function(){return h});async function n(...e){return(await t).default(...e)}const r=e?Promise.resolve().then(function(){return y}):Promise.resolve().then(function(){return P});async function i(...e){return(await r).default(...e)}const a=e?Promise.resolve().then(function(){return m}):Promise.resolve().then(function(){return k});async function o(...e){return(await a).default(...e)}const s=async e=>{const t=await e.getFile();return t.handle=e,t};var c=async(e=[{}])=>{Array.isArray(e)||(e=[e]);const t=[];e.forEach((e,n)=>{t[n]={description:e.description||\"Files\",accept:{}},e.mimeTypes?e.mimeTypes.map(r=>{t[n].accept[r]=e.extensions||[]}):t[n].accept[\"*/*\"]=e.extensions||[]});const n=await window.showOpenFilePicker({id:e[0].id,startIn:e[0].startIn,types:t,multiple:e[0].multiple||!1,excludeAcceptAllOption:e[0].excludeAcceptAllOption||!1}),r=await Promise.all(n.map(s));return e[0].multiple?r:r[0]},l={__proto__:null,default:c};function u(e){function t(e){if(Object(e)!==e)return Promise.reject(new TypeError(e+\" is not an object.\"));var t=e.done;return Promise.resolve(e.value).then(function(e){return{value:e,done:t}})}return u=function(e){this.s=e,this.n=e.next},u.prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(e){var n=this.s.return;return void 0===n?Promise.resolve({value:e,done:!0}):t(n.apply(this.s,arguments))},throw:function(e){var n=this.s.return;return void 0===n?Promise.reject(e):t(n.apply(this.s,arguments))}},new u(e)}const p=async(e,t,n=e.name,r)=>{const i=[],a=[];var o,s=!1,c=!1;try{for(var l,d=function(e){var t,n,r,i=2;for(\"undefined\"!=typeof Symbol&&(n=Symbol.asyncIterator,r=Symbol.iterator);i--;){if(n&&null!=(t=e[n]))return t.call(e);if(r&&null!=(t=e[r]))return new u(t.call(e));n=\"@@asyncIterator\",r=\"@@iterator\"}throw new TypeError(\"Object is not async iterable\")}(e.values());s=!(l=await d.next()).done;s=!1){const o=l.value,s=`${n}/${o.name}`;\"file\"===o.kind?a.push(o.getFile().then(t=>(t.directoryHandle=e,t.handle=o,Object.defineProperty(t,\"webkitRelativePath\",{configurable:!0,enumerable:!0,get:()=>s})))):\"directory\"!==o.kind||!t||r&&r(o)||i.push(p(o,t,s,r))}}catch(e){c=!0,o=e}finally{try{s&&null!=d.return&&await d.return()}finally{if(c)throw o}}return[...(await Promise.all(i)).flat(),...await Promise.all(a)]};var d=async(e={})=>{e.recursive=e.recursive||!1,e.mode=e.mode||\"read\";const t=await window.showDirectoryPicker({id:e.id,startIn:e.startIn,mode:e.mode});return p(t,e.recursive,void 0,e.skipDirectory)},y={__proto__:null,default:d},f=async(e,t=[{}],n=null,r=!1,i=null)=>{Array.isArray(t)||(t=[t]),t[0].fileName=t[0].fileName||\"Untitled\";const a=[];let o=null;if(e instanceof Blob&&e.type?o=e.type:e.headers&&e.headers.get(\"content-type\")&&(o=e.headers.get(\"content-type\")),t.forEach((e,t)=>{a[t]={description:e.description||\"Files\",accept:{}},e.mimeTypes?(0===t&&o&&e.mimeTypes.push(o),e.mimeTypes.map(n=>{a[t].accept[n]=e.extensions||[]})):o?a[t].accept[o]=e.extensions||[]:a[t].accept[\"*/*\"]=e.extensions||[]}),n)try{await n.getFile()}catch(e){if(n=null,r)throw e}const s=n||await window.showSaveFilePicker({suggestedName:t[0].fileName,id:t[0].id,startIn:t[0].startIn,types:a,excludeAcceptAllOption:t[0].excludeAcceptAllOption||!1});!n&&i&&i(s);const c=await s.createWritable();if(\"stream\"in e){const t=e.stream();return await t.pipeTo(c),s}return\"body\"in e?(await e.body.pipeTo(c),s):(await c.write(await e),await c.close(),s)},m={__proto__:null,default:f},w=async(e=[{}])=>(Array.isArray(e)||(e=[e]),new Promise((t,n)=>{const r=document.createElement(\"input\");r.type=\"file\";const i=[...e.map(e=>e.mimeTypes||[]),...e.map(e=>e.extensions||[])].join();r.multiple=e[0].multiple||!1,r.accept=i||\"\",r.style.display=\"none\",document.body.append(r);const a=e=>{\"function\"==typeof o&&o(),t(e)},o=e[0].legacySetup&&e[0].legacySetup(a,()=>o(n),r),s=()=>{window.removeEventListener(\"focus\",s),r.remove()};r.addEventListener(\"click\",()=>{window.addEventListener(\"focus\",s)}),r.addEventListener(\"change\",()=>{window.removeEventListener(\"focus\",s),r.remove(),a(r.multiple?Array.from(r.files):r.files[0])}),\"showPicker\"in HTMLInputElement.prototype?r.showPicker():r.click()})),h={__proto__:null,default:w},v=async(e=[{}])=>(Array.isArray(e)||(e=[e]),e[0].recursive=e[0].recursive||!1,new Promise((t,n)=>{const r=document.createElement(\"input\");r.type=\"file\",r.webkitdirectory=!0;const i=e=>{\"function\"==typeof a&&a(),t(e)},a=e[0].legacySetup&&e[0].legacySetup(i,()=>a(n),r);r.addEventListener(\"change\",()=>{let t=Array.from(r.files);e[0].recursive?e[0].recursive&&e[0].skipDirectory&&(t=t.filter(t=>t.webkitRelativePath.split(\"/\").every(t=>!e[0].skipDirectory({name:t,kind:\"directory\"})))):t=t.filter(e=>2===e.webkitRelativePath.split(\"/\").length),i(t)}),\"showPicker\"in HTMLInputElement.prototype?r.showPicker():r.click()})),P={__proto__:null,default:v},b=async(e,t={})=>{Array.isArray(t)&&(t=t[0]);const n=document.createElement(\"a\");let r=e;\"body\"in e&&(r=await async function(e,t){const n=e.getReader(),r=new ReadableStream({start:e=>async function t(){return n.read().then(({done:n,value:r})=>{if(!n)return e.enqueue(r),t();e.close()})}()}),i=new Response(r),a=await i.blob();return n.releaseLock(),new Blob([a],{type:t})}(e.body,e.headers.get(\"content-type\"))),n.download=t.fileName||\"Untitled\",n.href=URL.createObjectURL(await r);const i=()=>{\"function\"==typeof a&&a()},a=t.legacySetup&&t.legacySetup(i,()=>a(),n);return n.addEventListener(\"click\",()=>{setTimeout(()=>URL.revokeObjectURL(n.href),3e4),i()}),n.click(),null},k={__proto__:null,default:b};export{i as directoryOpen,v as directoryOpenLegacy,d as directoryOpenModern,n as fileOpen,w as fileOpenLegacy,c as fileOpenModern,o as fileSave,b as fileSaveLegacy,f as fileSaveModern,e as supported};\n", "const JPEG_ID = 0xffd8;\nconst APP1_MARKER = 0xffe1;\nconst EXIF_ID = 0x45786966;\nconst LITTLE_ENDIAN = 0x4949;\nconst ORIENTATION_TAG_OFFSET = 0x0112;\n\n// http://sylvana.net/jpegcrop/exif_orientation.html\nexport const enum Orientation {\n    TopLeft = 1,\n    TopRight = 2,\n    BottomRight = 3,\n    BottomLeft = 4,\n    LeftTop = 5,\n    RightTop = 6,\n    RightBottom = 7,\n    LeftBottom = 8,\n}\n\n/**\n * Parses JPEG EXIF metadata and returns Orientation tag of it, or undefined if not applicable.\n *\n * Adopted from https://stackoverflow.com/a/32490603\n *\n * @internal\n * @param data JPEG binary.\n * @returns Orientation tag value or undefined.\n */\nexport function extractJpegOrientationTag(data: ArrayBuffer): Orientation | undefined {\n    const view = new DataView(data);\n\n    if (view.getUint16(0, false) !== JPEG_ID) return undefined;\n\n    const length = view.byteLength;\n    let offset = 2;\n\n    while (offset < length) {\n        if (view.getUint16(offset + 2, false) <= 8) return undefined;\n        let marker = view.getUint16(offset, false);\n        offset += 2;\n\n        if (marker === APP1_MARKER) {\n            if (view.getUint32((offset += 2), false) !== EXIF_ID) {\n                return undefined;\n            }\n\n            let little = view.getUint16((offset += 6), false) === LITTLE_ENDIAN;\n            offset += view.getUint32(offset + 4, little);\n            let tags = view.getUint16(offset, little);\n            offset += 2;\n            for (let i = 0; i < tags; i++) {\n                if (view.getUint16(offset + i * 12, little) === ORIENTATION_TAG_OFFSET) {\n                    return view.getUint16(offset + i * 12 + 8, little) as Orientation;\n                }\n            }\n        } else if ((marker & 0xff00) !== 0xff00) {\n            break;\n        } else {\n            offset += view.getUint16(offset, false);\n        }\n    }\n    return undefined;\n}\n", "import { fileOpen, FileWithHandle } from \"browser-fs-access\";\nimport { ClientInterfaceData, LensCore } from \"../lens-core-module\";\nimport { getLogger } from \"../logger/logger\";\nimport { extractJpegOrientationTag, Orientation } from \"./exif\";\n\nconst logger = getLogger(\"lensClientInterfaceImagePicker\");\n\n// Common MIME types supported by all browsers as per:\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\nconst mimeTypes = {\n    image: [\n        \"image/avif\",\n        \"image/bmp\",\n        \"image/gif\",\n        \"image/jpeg\",\n        \"image/png\",\n        \"image/svg+xml\",\n        \"image/tiff\",\n        \"image/webp\",\n    ],\n    video: [\n        \"video/3gpp\",\n        \"video/3gpp2\",\n        \"video/mp2t\",\n        \"video/mp4\",\n        \"video/mpeg\",\n        \"video/ogg\",\n        \"video/quicktime\",\n        \"video/webm\",\n        \"video/x-msvideo\",\n    ],\n} as const;\n\nfunction* enumerateSupportedVideoTypes(types: typeof mimeTypes.video) {\n    // test video element to perform MIME types support check\n    const testVideoElement = typeof document !== \"undefined\" ? document.createElement(\"video\") : undefined;\n    for (const type of types) {\n        if (testVideoElement?.canPlayType(type) || false) {\n            yield type;\n        }\n    }\n}\n\nfunction readFileAsArrayBuffer(file: FileWithHandle): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", (event) => {\n            // Safety: target.result is always an ArrayBuffer because we read file using readAsArrayBuffer()\n            resolve(event.target!.result as ArrayBuffer);\n        });\n        reader.addEventListener(\"error\", (event) => {\n            reject(event.target!.error);\n        });\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nfunction getMimeType({ ImageEnabled, VideoEnabled }: ClientInterfaceData) {\n    const types = [];\n    if (ImageEnabled === \"1\") types.push(...mimeTypes.image);\n    if (VideoEnabled === \"1\") types.push(...enumerateSupportedVideoTypes(mimeTypes.video));\n    if (types.length === 0) {\n        throw new Error(\"Unknown media type requested.\");\n    }\n    return types;\n}\n\nfunction getOrientation(data: ArrayBuffer, lensCore: LensCore) {\n    const orientationMap = {\n        [Orientation.TopLeft]: lensCore.ExternalMediaOrientation.CW0,\n        [Orientation.TopRight]: lensCore.ExternalMediaOrientation.CW0,\n        [Orientation.BottomRight]: lensCore.ExternalMediaOrientation.CW180,\n        [Orientation.BottomLeft]: lensCore.ExternalMediaOrientation.CW180,\n        [Orientation.LeftTop]: lensCore.ExternalMediaOrientation.CW90,\n        [Orientation.RightTop]: lensCore.ExternalMediaOrientation.CW90,\n        [Orientation.RightBottom]: lensCore.ExternalMediaOrientation.CW270,\n        [Orientation.LeftBottom]: lensCore.ExternalMediaOrientation.CW270,\n    };\n    try {\n        return orientationMap[extractJpegOrientationTag(data) ?? Orientation.TopLeft];\n    } catch (error) {\n        logger.info(\"Error occured while reading EXIF orientation tag.\", error);\n        return lensCore.ExternalMediaOrientation.CW0;\n    }\n}\n\n/**\n * Shows file open dialog to allow user to select image/video and provides the selection to LensCore.\n *\n * @internal\n */\nexport async function pickClientImage(clientInterfaceData: ClientInterfaceData, lensCore: LensCore) {\n    const mimeTypes = getMimeType(clientInterfaceData);\n    logger.debug(`Opening file dialog for MIME types: ${mimeTypes}`);\n\n    const file = await fileOpen({ mimeTypes });\n    logger.debug(`Selected file MIME type: ${file.type}`);\n\n    const data = await readFileAsArrayBuffer(file);\n    if (file.type.startsWith(\"image/\")) {\n        lensCore.provideExternalImage({\n            data,\n            orientation: getOrientation(data, lensCore),\n            // As per Corvyn: both iOS and Android clients have the ability to pick out individual faces\n            // from an image to apply the effect on, using each of their native face detectors (not using LensCore).\n            // That's what the faceRects is for. For now, we can just apply the effect to the whole image (so face rect\n            // [[0,0][1,1]]). In future, in order to be able to pick out individual faces in the media picker, we could:\n            // - hook up some external web face tracking library\n            // - make LensCore to expose face tracker to external clients\n            faceRects: [\n                {\n                    origin: {\n                        x: 0,\n                        y: 0,\n                    },\n                    size: {\n                        width: 1,\n                        height: 1,\n                    },\n                },\n            ],\n        });\n    } else {\n        lensCore.provideExternalVideo({\n            data,\n            orientation: lensCore.ExternalMediaOrientation.CW0,\n        });\n    }\n}\n", "import { lensImagePickerError } from \"../namedErrors\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { lensCoreFactory, LensCore } from \"../lens-core-module\";\nimport { getLogger } from \"../logger/logger\";\nimport { pickClientImage } from \"./imagePicker\";\n\nconst logger = getLogger(\"lensClientInterface\");\n\n/**\n * Registers client interface handler in LensCore.\n *\n * @internal\n * @param lensCore LensCore instance to register in.\n * @param sessionErrors EventTarget to dispatch errors in.\n */\nexport const registerLensClientInterfaceHandler = Injectable(\n    \"registerLensClientInterfaceHandler\",\n    [lensCoreFactory.token] as const,\n    (lensCore: LensCore) => {\n        // Make sure we are compatible with previous LensCore versions\n        if (!lensCore.setClientInterfaceRequestHandler) {\n            logger.warn(\"Current LensCore version doesn't support lens client interface requests\");\n            return;\n        }\n\n        lensCore.setClientInterfaceRequestHandler(async ({ data, interfaceControl, interfaceAction }) => {\n            if (\n                interfaceControl === lensCore.InterfaceControl.ImagePicker &&\n                interfaceAction === lensCore.InterfaceAction.Show\n            ) {\n                await pickClientImage(data, lensCore).catch((error) => {\n                    logger.error(\n                        lensImagePickerError(\n                            \"Error occurred while attempting to select an image file for the lens request.\",\n                            error\n                        )\n                    );\n                });\n            }\n        });\n    }\n);\n", "import { take } from \"rxjs\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { Namespace } from \"../generated-proto/pb_schema/cdp/cof/namespace\";\nimport { LensCore, LensCoreConfig, SetPreloadedConfigurationInput, lensCoreFactory } from \"../lens-core-module\";\nimport { RemoteConfiguration, remoteConfigurationFactory } from \"./remoteConfiguration\";\n\nexport const setPreloadedConfiguration = Injectable(\n    \"setPreloadedConfiguration\",\n    [lensCoreFactory.token, remoteConfigurationFactory.token] as const,\n    (lensCore: LensCore, remoteConfiguration: RemoteConfiguration) => {\n        remoteConfiguration\n            .getNamespace(Namespace.LENS_CORE_CONFIG)\n            .pipe(take(1))\n            .subscribe((configs) => {\n                const inputs: SetPreloadedConfigurationInput = configs.map(\n                    ({ configId, value }) => ({ configId, value } as LensCoreConfig)\n                );\n\n                lensCore.setPreloadedConfiguration(inputs);\n            });\n    }\n);\n", "import { lensRepositoryFactory, LensRepository } from \"./lens/LensRepository\";\nimport { CONTAINER, Container } from \"./dependency-injection/Container\";\nimport { Injectable } from \"./dependency-injection/Injectable\";\nimport { LensCoreError } from \"./lens-core-module/lensCoreError\";\nimport { LensCore } from \"./lens-core-module/lensCore\";\nimport { CameraKitSession, cameraKitSessionFactory } from \"./session/CameraKitSession\";\nimport { registerLensAssetsProvider } from \"./lens/assets/LensAssetsProvider\";\nimport { lensCoreFactory } from \"./lens-core-module/loader/lensCoreFactory\";\nimport { configurationToken } from \"./configuration\";\nimport { RootServices } from \"./dependency-injection/RootServices\";\nimport { registerUriHandlers } from \"./extensions/uriHandlersRegister\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"./metrics/metricsEventTarget\";\nimport { reportSessionScopedMetrics } from \"./metrics/reporters/reporters\";\nimport { lensStateFactory } from \"./session/lensState\";\nimport { lensKeyboardFactory } from \"./session/LensKeyboard\";\nimport { registerLensClientInterfaceHandler } from \"./lens-client-interface/lensClientInterface\";\nimport { sessionStateFactory } from \"./session/sessionState\";\nimport { lensExecutionError, lensAbortError } from \"./namedErrors\";\nimport { getLogger, resetLogger } from \"./logger/logger\";\nimport { errorLoggingDecorator } from \"./logger/errorLoggingDecorator\";\nimport { TypedEventTarget } from \"./events/TypedEventTarget\";\nimport { TypedCustomEvent } from \"./events/TypedCustomEvent\";\nimport { LensView } from \"./metrics/reporters/reportLensView\";\nimport { LensWait } from \"./metrics/reporters/reportLensWait\";\nimport { PageVisibility, pageVisibilityFactory } from \"./common/pageVisibility\";\nimport { setPreloadedConfiguration } from \"./remote-configuration/preloadConfiguration\";\n\nconst logger = getLogger(\"CameraKit\");\nconst log = errorLoggingDecorator(logger);\n\n/**\n * Metrics event names that are exposed to apps.\n */\nconst publicMetricsEventNames: Array<LensMetricsEvents[\"detail\"][\"name\"]> = [\"lensView\", \"lensWait\"];\n\n/**\n * Lens metrics events.\n *\n * These events are emitted by {@link CameraKit} to report lens usage, performance, apply latency, etc.\n *\n * @category Lenses\n * @category Metrics\n */\nexport type LensMetricsEvents =\n    | TypedCustomEvent<LensView[\"name\"], LensView>\n    | TypedCustomEvent<LensWait[\"name\"], LensWait>;\n\n/**\n * Options available when creating a {@link CameraKitSession}.\n *\n * @category Rendering\n */\nexport interface CreateSessionOptions {\n    /**\n     * Optionally provide an existing canvas element, on which the Live RenderTarget will be rendered.\n     *\n     * If this is not provided, CameraKit will create a new canvas element which can be added to the DOM.\n     */\n    liveRenderTarget?: HTMLCanvasElement;\n\n    /**\n     * Browsers optimize tabs when they are hidden - for example, by pausing the execution of requestAnimationFrame\n     * callbacks.\n     *\n     * If you need the CameraKitSession to continue rendering even when the tab is in the background, set this to true.\n     * There is a small performance penalty, and it's a good practice to only render in the background if absolutely\n     * necessary.\n     */\n    renderWhileTabHidden?: boolean;\n}\n\n/**\n * The entry point to the CameraKit SDK's API. Most of CameraKit's features are accessed via this class.\n *\n * Applications obtain an instance of CameraKit by calling {@link bootstrapCameraKit}.\n *\n * @example\n * ```ts\n * const cameraKit = await bootstrapCameraKit(config)\n * ```\n *\n * Then this class can be used to:\n * - Create a {@link CameraKitSession} instance, which provides the API for setting up media inputs, applying Lenses,\n * and obtaining rendered `<canvas>` outputs.\n * - Query for lenses using {@link LensRepository}.\n * - Listen for lens usage metrics events using {@link MetricsEventTarget}.\n *\n * @category Rendering\n * @category Lenses\n */\nexport class CameraKit {\n    /** @deprecated Use {@link lensRepository} */\n    readonly lenses: { repository: LensRepository };\n\n    /**\n     * Business metrics (e.g. each time a lens is viewed) are emitted here.\n     */\n    readonly metrics: TypedEventTarget<LensMetricsEvents> = new TypedEventTarget();\n\n    private sessions: CameraKitSession[] = [];\n\n    /** @internal */\n    constructor(\n        /**\n         * Used to query for lenses and lens groups.\n         */\n        readonly lensRepository: LensRepository,\n\n        private readonly lensCore: LensCore,\n        private readonly pageVisibility: PageVisibility,\n        private readonly container: Container<RootServices>,\n        allMetrics: MetricsEventTarget\n    ) {\n        this.lenses = { repository: this.lensRepository };\n        // Proxy only a subset of all metrics events to the public-facing emitter -- applications don't need to\n        // know about most events.\n        publicMetricsEventNames.forEach((eventName) => {\n            allMetrics.addEventListener(eventName, (e) => this.metrics.dispatchEvent(e));\n        });\n    }\n\n    /**\n     * Create a CameraKitSession.\n     *\n     * This initializes the rendering engine and returns a {@link CameraKitSession} instance, which provides access\n     * to Lens rendering.\n     *\n     * @example\n     * ```ts\n     * const cameraKit = await bootstrapCameraKit(config)\n     * const session = await cameraKit.createSession()\n     *\n     * const lens = await cameraKit.lensRepository.loadLens(lensId, groupId)\n     * session.applyLens(lens)\n     * ```\n     *\n     * @param options\n     */\n    @log\n    async createSession({\n        liveRenderTarget,\n        renderWhileTabHidden,\n    }: CreateSessionOptions = {}): Promise<CameraKitSession> {\n        // Any error happened during lens rendering can be processed by subscribing to sessionErrors\n        const exceptionHandler = (error: LensCoreError) => {\n            if (error.name === \"LensCoreAbortError\") {\n                logger.error(\n                    lensAbortError(\n                        \"Unrecoverable error occurred during lens execution. \" +\n                            \"The CameraKitSession will be destroyed.\",\n                        error\n                    )\n                );\n            } else {\n                logger.error(\n                    lensExecutionError(\n                        \"Error occurred during lens execution. \" +\n                            \"The lens cannot be rendered and will be removed from the CameraKitSession.\",\n                        error\n                    )\n                );\n            }\n        };\n\n        /**\n         * If/when we add support for multiple concurrent sessions, we'll need to create a copy of the LensCore WASM\n         * module. If we move managing web workers into JS, spawing a new worker thread with its own copy of LensCore\n         * probably becomes a lot more straightforward.\n         *\n         * Currently chromium has a bug preventing rendering while tab is hidden when LensCore is in worker mode.\n         * In order to process tab while it is hidden, the current stopgap is to pass in renderWhileTabHidden as true,\n         * which will initiate session in non worker mode, and set the RenderLoopMode to `SetTimeout`.\n         */\n        await this.lensCore.initialize({\n            canvas: liveRenderTarget,\n            shouldUseWorker: !renderWhileTabHidden && this.container.get(configurationToken).shouldUseWorker,\n            exceptionHandler,\n        });\n\n        await this.lensCore.setRenderLoopMode({\n            mode: renderWhileTabHidden\n                ? this.lensCore.RenderLoopMode.SetTimeout\n                : this.lensCore.RenderLoopMode.RequestAnimationFrame,\n        });\n\n        // Each session gets its own DI Container – some Services provided by this Container may be shared with the\n        // root CameraKit Container, but others may be scoped to the session by passing their token to `copy()`.\n        const sessionContainer = this.container\n            // Right now this is a no-op. If/when we add support for multiple concurrent sessions, we may end up\n            // scoping LensCore to the session.\n            .copy()\n\n            .provides(sessionStateFactory)\n            .provides(lensStateFactory)\n            .provides(lensKeyboardFactory)\n            .provides(cameraKitSessionFactory)\n\n            .run(registerLensAssetsProvider)\n            .run(registerLensClientInterfaceHandler)\n            .run(setPreloadedConfiguration)\n\n            // We'll run a PartialContainer containing reporters for session-scoped metrics. Running this container\n            // allows each metric reporter to initialize itself (e.g. by adding event listeners to detect when certain\n            // actions occur).\n            .run(reportSessionScopedMetrics)\n\n            // UriHandlers may have dependencies on session-scoped services (e.g. LensState, LensKeyboard), so they'll\n            // be registered with LensCore here.\n            .run(registerUriHandlers);\n\n        const session = sessionContainer.get(cameraKitSessionFactory.token);\n        this.sessions.push(session);\n        return session;\n    }\n\n    /**\n     * Destroys all sessions and frees all resources.\n     */\n    @log\n    async destroy() {\n        resetLogger();\n        this.pageVisibility.destroy();\n        await Promise.all(this.sessions.map((session) => session.destroy()));\n        this.sessions = [];\n    }\n}\n\n/** @internal */\nexport const cameraKitFactory = Injectable(\n    \"CameraKit\",\n    [\n        lensRepositoryFactory.token,\n        metricsEventTargetFactory.token,\n        lensCoreFactory.token,\n        pageVisibilityFactory.token,\n        CONTAINER,\n    ] as const,\n    (\n        lensRepository: LensRepository,\n        metrics: MetricsEventTarget,\n        lensCore: LensCore,\n        pageVisibility: PageVisibility,\n        container: Container<RootServices>\n    ) => new CameraKit(lensRepository, lensCore, pageVisibility, container, metrics)\n);\n", "import { getPlatformCapabilities } from \"./platformCapabilities\";\n\n/**\n * Throw if the current platform is not capable of running Camera Kit.\n */\nexport async function assertPlatformSupported(): Promise<void> {\n    const { wasm, webgl } = await getPlatformCapabilities();\n    if (!wasm.supported) throw wasm.error;\n    if (!webgl.supported) throw webgl.error;\n}\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "import { v4 } from \"uuid\";\nimport { Observable, catchError, combineLatestWith, from, fromEvent, map, merge, of, switchMap, take } from \"rxjs\";\nimport { entries } from \"../common/entries\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { EventOfType } from \"../events/TypedCustomEvent\";\nimport { EventsFromTarget } from \"../events/TypedEventTarget\";\nimport { FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { createBatchingHandler } from \"../handlers/batchingHandler\";\nimport { HandlerChainBuilder } from \"../handlers/HandlerChainBuilder\";\nimport { createMappingHandler } from \"../handlers/mappingHandler\";\nimport * as blizzard from \"../generated-proto/blizzard/cameraKitEvents\";\nimport { getLogger } from \"../logger/logger\";\nimport { PageVisibility, pageVisibilityFactory } from \"../common/pageVisibility\";\nimport { CameraKitApiHostname, CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { remoteConfigurationFactory, RemoteConfiguration } from \"../remote-configuration/remoteConfiguration\";\nimport { IndexedDBPersistence } from \"../persistence/IndexedDBPersistence\";\nimport { ExpiringPersistence } from \"../persistence/ExpiringPersistence\";\nimport { convertDaysToSeconds } from \"../common/time\";\nimport { ConnectionType, getPlatformInfo } from \"../platform/platformInfo\";\nimport { metricsHandlerFactory } from \"./metricsHandler\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"./metricsEventTarget\";\n\nconst logger = getLogger(\"BusinessEventsReporter\");\n\ntype Nullables<T> = { [K in keyof T]-?: undefined extends T[K] ? K : never }[keyof T];\ntype UndefinedToOptional<T> = Partial<Pick<T, Nullables<T>>> & Omit<T, Nullables<T>>;\n\ntype CameraKitBusinessEvents = EventsFromTarget<MetricsEventTarget>[\"detail\"];\n\ntype MakeBlizzardEvent<E> = Omit<E, \"name\"> & { cameraKitEventBase: blizzard.CameraKitEventBase };\n\ntype CreateEventData<EventType extends EventsFromTarget<MetricsEventTarget>[\"type\"]> = (\n    event: MakeBlizzardEvent<EventOfType<EventType, EventsFromTarget<MetricsEventTarget>>[\"detail\"]>\n) => [string, UndefinedToOptional<blizzard.ServerEventData>];\n\ntype EventHandlers = {\n    [EventType in EventsFromTarget<MetricsEventTarget>[\"type\"]]: CreateEventData<EventType>;\n};\n\n/**\n * Translate between an external metric name, which is exposed to SDK users, and an internal Blizzard event name,\n * property name, and constructor.\n *\n * It is very important that we do this, since the naming of these internal business events are unintuitive and will\n * not make sense to SDK users.\n *\n * For a full list of business events (using their internal names), see:\n * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/\n */\ntype CameraKitBusinessEventMap = {\n    assetDownload: MakeBusinessEvent<blizzard.CameraKitAssetDownload>;\n    assetValidationFailed: MakeBusinessEvent<blizzard.CameraKitAssetValidationFailed>;\n    benchmarkComplete: MakeBusinessEvent<blizzard.CameraKitWebBenchmarkComplete>;\n    exception: MakeBusinessEvent<blizzard.CameraKitException>;\n    legalPrompt: MakeBusinessEvent<blizzard.CameraKitLegalPrompt>;\n    lensDownload: MakeBusinessEvent<blizzard.CameraKitLensDownload>;\n    lensView: MakeBusinessEvent<blizzard.CameraKitWebLensSwipe>;\n    lensWait: MakeBusinessEvent<blizzard.CameraKitLensSpin>;\n    lensContentValidationFailed: MakeBusinessEvent<blizzard.CameraKitLensContentValidationFailed>;\n    session: MakeBusinessEvent<blizzard.CameraKitSession>;\n};\n\n/**\n * This interface is defined in the CameraKit pb_schema proto definition – but the generated TypeScript does not handle\n * the `Any` type properly. It does not conform to the Proto3 canonical JSON mapping scheme, as defined here:\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * To solve this (since we only need one message from the CameraKit schema), we'll just manually define the correct\n * interface here.\n */\ninterface SetBusinessEventsRequest {\n    batchEvents: {\n        \"@type\": \"com.snapchat.analytics.blizzard.ServerEventBatch\";\n        serverEvents: blizzard.ServerEvent[];\n    };\n}\n\ninterface AppVendorAndPartnerUuid {\n    appVendorUuid: string | undefined;\n    partnerUuid: string | undefined;\n}\n\n// CameraKit's prod metrics endpoint.\n// See: https://github.sc-corp.net/Snapchat/pb_schema/blob/2a966db/proto/camera_kit/v3/service.proto#L133\nconst relativePath = \"/com.snap.camerakit.v3.Metrics/metrics/business_events\";\n\n// It is rather cumbersome to check the actual final size of a batch, but we can easily limit the number of events we\n// include in each batch -- looking at historical data, typical events average ~1.3kb per event. But there are some\n// events (like CAMERA_KIT_EXCEPTION, which includes a stack trace) that can be much larger.\n//\n// To prevent us running over the 64kibibyte limit imposed by browsers on `keep-alive` requests, we'll set quite a low\n// limit to ensure we don't lose events which are larger in size than we expect.\nconst BUSINESS_EVENT_BATCH_MAX_SIZE = 10;\nconst BUSINESS_EVENT_BATCH_MAX_AGE_MS = 5000;\n\nconst connectivityTypeMapping: Partial<Record<ConnectionType, blizzard.CameraKitConnectivityType>> = {\n    cellular: blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE,\n    bluetooth: blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH,\n    wifi: blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_WIFI,\n    unknown: blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNKNOWN,\n    none: blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE,\n};\n\nconst vendorUuidKey = \"vendorUuid\";\nconst vendorUuidExpiry = convertDaysToSeconds(60);\n\n/**\n * Retrieves or generates a vendor UUID (Universally Unique Identifier).\n *\n * @param persistence - The persistence storage interface where UUID is stored.\n * @returns {Promise<string | undefined>} - A Promise that resolves to the vendor UUID or undefined,\n * if any failure occurs or opt-in is not enabled.\n */\nconst getOrGenerateVendorUuid = async (persistence: ExpiringPersistence<string>): Promise<string | undefined> => {\n    try {\n        const storedUuid = await persistence.retrieve(vendorUuidKey);\n        if (storedUuid) {\n            return storedUuid;\n        }\n\n        const newUuid = v4();\n        await persistence.store(vendorUuidKey, newUuid);\n\n        return newUuid;\n    } catch (error) {\n        throw new Error(\"Failed to generate vendor UUID\");\n    }\n};\n\nfunction listenAndReport(\n    metricsEventTarget: MetricsEventTarget,\n    metricsHandler: FetchHandler,\n    pageVisibility: PageVisibility,\n    eventHandlers: EventHandlers,\n    apiHostname: CameraKitApiHostname,\n    appVendorAndPartnerUuid: Observable<AppVendorAndPartnerUuid>\n): void {\n    const sessionId = v4();\n    logger.log(`Session ID: ${sessionId}`);\n\n    // Blizzard convention is to start the sequenceId at 1.\n    let sequenceId = 1;\n\n    const handler = new HandlerChainBuilder(metricsHandler)\n        .map(\n            createMappingHandler((events: blizzard.ServerEvent[]) => {\n                const body: SetBusinessEventsRequest = {\n                    batchEvents: {\n                        \"@type\": \"com.snapchat.analytics.blizzard.ServerEventBatch\",\n                        serverEvents: events,\n                    },\n                };\n\n                return new Request(`https://${apiHostname}${relativePath}`, {\n                    method: \"POST\",\n                    body: JSON.stringify(body),\n                    credentials: \"include\",\n\n                    // When this is true it makes fetch behave like `Navigator.sendBeacon` – that is, the request\n                    // will still be made even if the page terminates.\n                    // https://developer.mozilla.org/en-US/docs/Web/API/fetch\n                    keepalive: pageVisibility.isDuringVisibilityTransition(\"hidden\"),\n                });\n            }, pageVisibility)\n        )\n        .map(\n            createBatchingHandler({\n                batchReduce: (\n                    previousBundle: blizzard.ServerEvent[] | undefined,\n                    businessEvent: blizzard.ServerEvent\n                ) => {\n                    const bundle = previousBundle ?? [];\n                    bundle.push(businessEvent);\n                    return bundle;\n                },\n                isBatchComplete: (bundle) => bundle.length >= BUSINESS_EVENT_BATCH_MAX_SIZE,\n                maxBatchAge: BUSINESS_EVENT_BATCH_MAX_AGE_MS,\n                pageVisibility,\n            })\n        ).handler;\n\n    const makeBlizzardEvent = <E extends CameraKitBusinessEvents>(\n        event: E,\n        appVendorUuid: string | undefined,\n        partnerUuid: string | undefined\n    ): MakeBlizzardEvent<E> => {\n        const { sdkShortVersion, sdkLongVersion, lensCore, locale, origin, deviceModel, connectionType } =\n            getPlatformInfo();\n\n        const deviceConnectivity =\n            connectivityTypeMapping[connectionType!] ??\n            blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNKNOWN;\n\n        return {\n            ...event,\n            cameraKitEventBase: blizzard.CameraKitEventBase.fromPartial({\n                kitEventBase: blizzard.KitEventBase.fromPartial({\n                    locale,\n                    kitVariant: blizzard.KitType.CAMERA_KIT_WEB,\n                    kitVariantVersion: sdkShortVersion,\n                    kitClientTimestampMillis: Date.now(),\n                }),\n                deviceCluster: 0,\n                cameraKitVersion: sdkLongVersion,\n                lensCoreVersion: lensCore.version,\n                deviceModel,\n                cameraKitVariant: blizzard.CameraKitVariant.CAMERA_KIT_VARIANT_PARTNER,\n                cameraKitFlavor: blizzard.CameraKitFlavor.CAMERA_KIT_FLAVOR_DEBUG,\n                // We overload appId, using the origin instead because it's nice and human-readable (our backed adds\n                // the true appId as oauth_client_id before forwarding events to Blizzard).\n                appId: origin,\n                deviceConnectivity,\n                sessionId,\n                appVendorUuid,\n                partnerUuid,\n            }),\n        };\n    };\n\n    const sendServerEvent = (\n        eventName: string,\n        eventData: UndefinedToOptional<blizzard.ServerEventData>\n    ): Promise<void> => {\n        const { osName: osType, osVersion } = getPlatformInfo();\n        return handler(\n            blizzard.ServerEvent.fromPartial({\n                eventName,\n                osType,\n                osVersion,\n                maxSequenceIdOnInstance: 0,\n                sequenceId: sequenceId++,\n                eventData,\n            })\n        );\n    };\n\n    // Add event listeners for each event type and turn those listeners into Observables\n    const metricsEvents = entries(eventHandlers).map(([eventType, createEventData]) =>\n        fromEvent(metricsEventTarget, eventType).pipe(map((event) => ({ event, createEventData })))\n    );\n\n    // Subscribe to all the metrics events and combine them with the app/partner IDs obtained\n    // from remote configuration -- this means we'll queue up any metrics events that occur\n    // before remote config is downloaded, and send them once that config is available.\n    merge(...metricsEvents)\n        .pipe(combineLatestWith(appVendorAndPartnerUuid))\n        .subscribe(([{ event, createEventData }, { appVendorUuid, partnerUuid }]) => {\n            // Safety: When iterating over object keys in a mapped type, we lose the association between the key type\n            // and the value type – at each iteration, the key type is a union of all possible keys and the value type\n            // is a union of all possible values. When the value is a function with an argument, and that argument\n            // depends on the key type (which is a union), the contravariance of the argument type means that the union\n            // becomes an intersection. In our case here, this means the compiler expects each argument to contain all\n            // properties from all event types. The cast is safe because the mapped `EventHandlers` type ensures that\n            // `createEventData` takes an argument of the type corresponding its key's `eventType`'s event detail.\n            const [eventName, eventData] = createEventData(\n                makeBlizzardEvent(event.detail, appVendorUuid, partnerUuid) as any\n            );\n            sendServerEvent(eventName, eventData);\n        });\n}\n\nexport type MakeBusinessEvent<E> = Omit<\n    {\n        [K in keyof E]: Exclude<E[K], undefined> extends Record<keyof any, any>\n            ? MakeBusinessEvent<Exclude<E[K], undefined>>\n            : E[K];\n    },\n    \"cameraKitEventBase\"\n>;\n\nfunction getAppVendorAndPartnerUuid(\n    configuration: CameraKitConfiguration,\n    remoteConfiguration: RemoteConfiguration\n): Observable<AppVendorAndPartnerUuid> {\n    const vendorAnalyticsPersistence = new ExpiringPersistence<string>(\n        () => vendorUuidExpiry,\n        new IndexedDBPersistence({ databaseName: \"SessionHistory\" })\n    );\n\n    return remoteConfiguration.getInitializationConfig().pipe(\n        take(1),\n\n        switchMap(({ appVendorUuidOptIn }) => {\n            const partnerUuid = configuration.analyticsId;\n            if (appVendorUuidOptIn) {\n                return from(getOrGenerateVendorUuid(vendorAnalyticsPersistence)).pipe(\n                    map((appVendorUuid) => ({ appVendorUuid, partnerUuid }))\n                );\n            }\n            return of({ appVendorUuid: undefined, partnerUuid });\n        }),\n\n        catchError((error) => {\n            logger.warn(`Failed to retrieve or generate vendor UUID.`, error);\n            return of({ appVendorUuid: undefined, partnerUuid: configuration.analyticsId });\n        })\n    );\n}\n\nexport type MakeTaggedBusinessEvent<K extends keyof CameraKitBusinessEventMap> = {\n    name: K;\n} & CameraKitBusinessEventMap[K];\n\nexport const businessEventsReporterFactory = Injectable(\n    \"businessEventsReporter\",\n    [\n        metricsEventTargetFactory.token,\n        metricsHandlerFactory.token,\n        pageVisibilityFactory.token,\n        configurationToken,\n        remoteConfigurationFactory.token,\n    ] as const,\n    (\n        metricsEventTarget: MetricsEventTarget,\n        metricsHandler: FetchHandler,\n        pageVisibility: PageVisibility,\n        configuration: CameraKitConfiguration,\n        remoteConfiguration: RemoteConfiguration\n    ) => {\n        const appVendorAndPartnerUuid = getAppVendorAndPartnerUuid(configuration, remoteConfiguration);\n\n        /**\n         * This defines a mapping from a business event's external name (the name we document in public\n         * API docs), to its internal representation as a Blizzard ServerEvent.\n         *\n         * It is important that we do this, since the naming of these internal business events are\n         * unintuitive and will not make sense to SDK users.\n         *\n         * To specify the internal event, we must give the ServerEvent's eventName, the specific property\n         *  name which contains the event data (this is a \"oneof\" property on ServerEvent), and use the\n         * correct event type's `fromPartial` method (this is generated from the ServerEvent protobuf).\n         *\n         * These events are documented here:\n         * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/\n         *\n         * They are defined in code here:\n         * https://github.sc-corp.net/Snapchat/snapchat/tree/master/blizzard/schema/blizzard-schema/\n         *  codeGen/src/main/java/com/snapchat/analytics/schema/events/cameraKit\n         */\n        listenAndReport(\n            metricsEventTarget,\n            metricsHandler,\n            pageVisibility,\n            {\n                assetDownload: (event) => [\n                    \"CAMERA_KIT_ASSET_DOWNLOAD\",\n                    { cameraKitAssetDownload: blizzard.CameraKitAssetDownload.fromPartial(event) },\n                ],\n                assetValidationFailed: (event) => [\n                    \"CAMERA_KIT_ASSET_VALIDATION_FAILED\",\n                    {\n                        cameraKitAssetValidationFailed: blizzard.CameraKitAssetValidationFailed.fromPartial(event),\n                    },\n                ],\n                benchmarkComplete: (event) => [\n                    \"CAMERA_KIT_WEB_BENCHMARK_COMPLETE\",\n                    {\n                        cameraKitWebBenchmarkComplete: blizzard.CameraKitWebBenchmarkComplete.fromPartial(event),\n                    },\n                ],\n                exception: (event) => [\n                    \"CAMERA_KIT_EXCEPTION\",\n                    { cameraKitException: blizzard.CameraKitException.fromPartial(event) },\n                ],\n                legalPrompt: (event) => [\n                    \"CAMERA_KIT_LEGAL_PROMPT\",\n                    { cameraKitLegalPrompt: blizzard.CameraKitLegalPrompt.fromPartial(event) },\n                ],\n                lensDownload: (event) => [\n                    \"CAMERA_KIT_LENS_DOWNLOAD\",\n                    { cameraKitLensDownload: blizzard.CameraKitLensDownload.fromPartial(event) },\n                ],\n                lensView: (event) => [\n                    \"CAMERA_KIT_WEB_LENS_SWIPE\",\n                    { cameraKitWebLensSwipe: blizzard.CameraKitWebLensSwipe.fromPartial(event) },\n                ],\n                lensWait: (event) => [\n                    \"CAMERA_KIT_LENS_SPIN\",\n                    { cameraKitLensSpin: blizzard.CameraKitLensSpin.fromPartial(event) },\n                ],\n                lensContentValidationFailed: (event) => [\n                    \"CAMERA_KIT_LENS_CONTENT_VALIDATION_FAILED\",\n                    {\n                        cameraKitLensContentValidationFailed:\n                            blizzard.CameraKitLensContentValidationFailed.fromPartial(event),\n                    },\n                ],\n                session: (event) => [\n                    \"CAMERA_KIT_SESSION\",\n                    { cameraKitSession: blizzard.CameraKitSession.fromPartial(event) },\n                ],\n            },\n            configuration.apiHostname,\n            appVendorAndPartnerUuid\n        );\n    }\n);\n", "import { filter, Observable } from \"rxjs\";\nimport { stringifyError } from \"../common/errorHelpers\";\nimport { CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { getPlatformInfo } from \"../platform/platformInfo\";\nimport { logEntriesFactory } from \"./logEntries\";\nimport { LogEntry, logLevelMap } from \"./logger\";\n\n/**\n * The factory subscribes to log entry events and, based on the configured log level,\n * forwards matching log entries to the logger specified in the CameraKit configuration object.\n *\n * @internal\n */\nexport const registerLogEntriesSubscriber = Injectable(\n    \"registerLogEntriesSubscriber\",\n    [configurationToken, logEntriesFactory.token] as const,\n    (configuration: CameraKitConfiguration, logEntries: Observable<LogEntry>) => {\n        logEntries\n            .pipe(filter((entry) => logLevelMap[entry.level] >= logLevelMap[configuration.logLevel]))\n            .subscribe((logEntry) => {\n                switch (configuration.logger) {\n                    case \"console\":\n                        // Chrome doesn't print the `cause` Error property, so we need to manually construct a complete\n                        // stack trace using our `stringifyError` helper.\n                        const messages =\n                            getPlatformInfo().browser.brand === \"Chrome\"\n                                ? logEntry.messages.map((message) => {\n                                      if (!(message instanceof Error)) return message;\n                                      message.stack = stringifyError(message);\n                                      return message;\n                                  })\n                                : logEntry.messages;\n\n                        console[logEntry.level](`[CameraKit.${logEntry.module}]`, ...messages);\n                        break;\n                }\n            });\n    }\n);\n", "import { lensRepositoryFactory } from \"./lens/LensRepository\";\nimport { Container } from \"./dependency-injection/Container\";\nimport { CameraKit, cameraKitFactory } from \"./CameraKit\";\nimport { lensCoreFactory } from \"./lens-core-module/loader/lensCoreFactory\";\nimport { Injectable } from \"./dependency-injection/Injectable\";\nimport { remoteMediaAssetLoaderFactory } from \"./lens/assets/remoteMediaAssetLoaderFactory\";\nimport { deviceDependentAssetLoaderFactory } from \"./lens/assets/deviceDependentAssetLoader\";\nimport { staticAssetLoaderFactory } from \"./lens/assets/staticAssetLoader\";\nimport { defaultFetchHandlerFactory } from \"./handlers/defaultFetchHandler\";\nimport { cameraKitServiceFetchHandlerFactory } from \"./handlers/cameraKitServiceFetchHandlerFactory\";\nimport { CameraKitBootstrapConfiguration, createCameraKitConfigurationFactory } from \"./configuration\";\nimport { PublicServices } from \"./dependency-injection/RootServices\";\nimport { PartialContainer } from \"./dependency-injection/PartialContainer\";\nimport { metricsHandlerFactory } from \"./metrics/metricsHandler\";\nimport { operationalMetricReporterFactory } from \"./metrics/operational/operationalMetricsReporter\";\nimport { lensSourcesFactory } from \"./extensions/LensSources\";\nimport { uriHandlersFactory } from \"./extensions/UriHandlers\";\nimport { assert } from \"./common/assertions\";\nimport { isSafeString } from \"./common/typeguards\";\nimport { metricsEventTargetFactory } from \"./metrics/metricsEventTarget\";\nimport { reportGloballyScopedMetrics } from \"./metrics/reporters/reporters\";\nimport { getLogger } from \"./logger/logger\";\nimport { logEntriesFactory } from \"./logger/logEntries\";\nimport { assertPlatformSupported } from \"./platform/assertPlatformSupported\";\nimport { lensPersistenceStoreFactory } from \"./lens/LensPersistenceStore\";\nimport { remoteConfigurationFactory } from \"./remote-configuration/remoteConfiguration\";\nimport { lensAssetRepositoryFactory } from \"./lens/assets/LensAssetRepository\";\nimport { legalStateFactory } from \"./legal/legalState\";\nimport { legalPromptFactory } from \"./legal/legalPrompt\";\nimport { bootstrapError, ConfigurationError, configurationError, PlatformNotSupportedError } from \"./namedErrors\";\nimport { businessEventsReporterFactory } from \"./metrics/businessEventsReporter\";\nimport { reportGlobalException } from \"./metrics/reporters/reportGlobalException\";\nimport { registerLogEntriesSubscriber } from \"./logger/registerLogEntriesSubscriber\";\nimport { requestStateEventTargetFactory } from \"./handlers/requestStateEmittingHandler\";\nimport { pageVisibilityFactory } from \"./common/pageVisibility\";\nimport { cofHandlerFactory } from \"./remote-configuration/cofHandler\";\nimport { remoteApiServicesFactory } from \"./extensions/RemoteApiServices\";\n\nconst logger = getLogger(\"bootstrapCameraKit\");\n\n// The following errors are not wrapped with BootstrapError and bubble up as is.\nconst nonWrappableErrors: [ConfigurationError[\"name\"], PlatformNotSupportedError[\"name\"]] = [\n    \"ConfigurationError\",\n    \"PlatformNotSupportedError\",\n];\n\n/**\n * Returns true if given error has to be wrapped with BoostrapError.\n */\nfunction shouldWrapError(error: unknown): boolean {\n    if (error instanceof Error) {\n        return !nonWrappableErrors.some((name) => error.name === name);\n    }\n    return true;\n}\n\n/**\n * For more advanced use-cases, this DI Container holds services for which a custom implementation may be provided by\n * the application.\n *\n * @category Bootstrapping and Configuration\n */\nexport type PublicContainer = Container<PublicServices>;\n\n/**\n * Bootstrap CameraKit. This will download the WebAssembly code which powers CameraKit's rendering engine, and return\n * an instance of {@link CameraKit}.\n *\n * CameraKit must be provided with some configuration (the application's API token), and there are some additional\n * configurations which are optional.\n *\n * Descriptions of the available configurations can be found in the documentation for\n * {@link CameraKitBootstrapConfiguration}\n *\n * ---\n *\n * There is also a second, more advanced way to modify CameraKit to provide greater flexibility to support less common\n * use cases.\n *\n * This requires some knowledge of CameraKit's dependency injection system, and allows applications to provide their\n * own custom implementations of certain CameraKit components. This functionality will only be needed by applications\n * with very specific, more advanced requirements.\n *\n * @example\n * ```ts\n * // The most common way to bootstrap:\n * const cameraKit = await bootstrapCameraKit({ apiToken: myApiToken })\n *\n * // For special advanced use-cases, it is possible to provide custom implementations for certain CameraKit components.\n * const cameraKit = await bootstrapCameraKit(config, (container) => {\n *   return container.provides(myCustomRemoteMediaAssetLoaderFactory)\n * })\n * ```\n *\n * @param configuration Configure CameraKit with e.g. credentials, global resource endpoints, etc.\n * @param provide Optional function that can make modifications to CameraKit's root DI container.\n * @returns A {@link CameraKit} instance, which is the entry point to CameraKit's API.\n *\n * @throws\n *  - {@link ConfigurationError} when provided configuration object is invalid\n *  - {@link PlatformNotSupportedError} when current platform is not supported by CameraKit\n *  - {@link BootstrapError} when a failure occurs while initializing CameraKit and downloading the render engine\n * WebAssembly binary.\n *\n * @category Bootstrapping and Configuration\n */\nexport async function bootstrapCameraKit(\n    configuration: CameraKitBootstrapConfiguration,\n    provide?: (c: PublicContainer) => PublicContainer\n): Promise<CameraKit> {\n    try {\n        const startTimeMs = performance.now();\n\n        assert(isSafeString(configuration.apiToken), configurationError(\"Invalid or unsafe apiToken provided.\"));\n\n        const configurationFactory = createCameraKitConfigurationFactory(configuration);\n\n        // Public container holds services which applications can overwrite with their own implementations.\n        const defaultPublicContainer = Container.provides(configurationFactory)\n            .provides(pageVisibilityFactory)\n            .provides(defaultFetchHandlerFactory)\n            .provides(remoteMediaAssetLoaderFactory)\n            .provides(lensSourcesFactory)\n            .provides(remoteApiServicesFactory)\n            .provides(uriHandlersFactory);\n\n        const publicContainer = provide ? provide(defaultPublicContainer) : defaultPublicContainer;\n\n        // Now that the client's provide() function has completed and the configuration override is ready,\n        // we create another container to initialize the logger. This ensures that logging is available\n        // as we continue bootstrapping. We don't initialize the logger as part of the defaultPublicContainer\n        // because we don't want applications to provide their own logger implementations,\n        // and we're not interested in errors thrown by their provide() function.\n        // Below is the minimum required container to report errors to Blizzard.\n        const telemetryContainer = Container.provides(publicContainer)\n            .provides(logEntriesFactory)\n            .run(registerLogEntriesSubscriber)\n            .provides(cameraKitServiceFetchHandlerFactory)\n            .provides(requestStateEventTargetFactory)\n            .provides(metricsEventTargetFactory)\n            .provides(metricsHandlerFactory)\n            .provides(operationalMetricReporterFactory)\n            .provides(reportGlobalException)\n            .provides(cofHandlerFactory)\n            .provides(remoteConfigurationFactory)\n            .provides(legalPromptFactory)\n            .provides(legalStateFactory)\n            // We'll run a PartialContainer containing reporters for globally-scoped metrics. Running this container\n            // allows each metric reporter to initialize itself (e.g. by adding event listeners to detect when certain\n            // actions occur). This PartialContainer also includes the service which listens to locally-reported metrics\n            // and sends them to our backend.\n            .run(reportGloballyScopedMetrics)\n            .run(businessEventsReporterFactory);\n\n        // Run the exception logger so that it can subscribe to log events -- we can't use `Container.run()` because\n        // reportGlobalException is also used as a dependency by other Services (and run does not provide Services,\n        // it just runs them once).\n        telemetryContainer.get(reportGlobalException.token);\n\n        // At this point, logger is configured to report to console and Blizzard.\n\n        await assertPlatformSupported();\n\n        // LensCore is a foundational component which must be created asynchronously.\n        // But it's annoying for every consumer of LensCore to have to wait on Promise<LensCore>\n        // (which means they become async themselves). So we'll create a DI container which provides Promise<LensCore>,\n        // wait for that promise once here, then create a new DI container that just contains LensCore.\n        const lensCore = await telemetryContainer.provides(lensCoreFactory).get(lensCoreFactory.token);\n\n        const container = telemetryContainer\n            .provides(Injectable(lensCoreFactory.token, () => lensCore))\n            .provides(lensPersistenceStoreFactory)\n            .provides(deviceDependentAssetLoaderFactory)\n            .provides(staticAssetLoaderFactory)\n            .provides(lensAssetRepositoryFactory)\n            .provides(lensRepositoryFactory)\n\n            .provides(cameraKitFactory);\n        const cameraKit = container.get(cameraKitFactory.token);\n\n        const bootstrapTimeMs = performance.now() - startTimeMs;\n        const reporter = container.get(operationalMetricReporterFactory.token);\n        reporter.timer(\"bootstrap_time\", bootstrapTimeMs);\n\n        return cameraKit;\n    } catch (error) {\n        if (shouldWrapError(error)) {\n            error = bootstrapError(\"Error occurred during Camera Kit bootstrapping.\", error);\n        }\n        logger.error(error);\n        throw error;\n    }\n}\n\n/**\n * Extensions offer a way to provide custom implementations of certain parts of the CameraKit SDK.\n *\n * This enables more advanced use-cases, in which the default behavior of the SDK is substantially altered. For example,\n * replacing the default implementation that loads remote lens assets with a custom implementation that returns\n * different assets based on some business logic within the application.\n *\n * An extension is implemented as a [PartialContainer] – a collection of factory functions, each with its own\n * dependencies, which each provide some \"Service.\" A Service can be of any type, and the CameraKit SDK defines its\n * own Services, some of which can be overridden by providing a custom implementation of the type via an extension.\n *\n * Here's an example of how extensions might be used:\n * ```ts\n * import { bootstrapCameraKit, createExtension, remoteMediaAssetLoaderFactory } from '@snap/camera-kit'\n *\n * const myCustomRemoteAssetLoader = Injectable(\n *   remoteMediaAssetLoaderFactory.token,\n *   [remoteMediaAssetLoaderFactory.token] as const,\n *   (defaultLoader: AssetLoader): AssetLoader => {\n *     return async (asset, lens) => {\n *       if (lens?.id === MY_SPECIAL_LENS) {\n *         return (await fetch('my/asset.glb')).arrayBuffer()\n *       }\n *       return defaultLoader(asset, lens)\n *     }\n *   },\n * )\n *\n * const myExtension = createExtension().provides(myCustomeRemoteAssetLoader)\n * const cameraKit = bootstrapCameraKit(config, container => container.provides(myExtension))\n * ```\n *\n * This also enables greater modularity – the person/team creating the extension can do so in their own package, which\n * could be shared by many applications that all require the same functionality.\n *\n * @returns A {@link PartialContainer} which can be used to create a collection of Services, and can later be provided\n * to CameraKit's DI container during {@link bootstrapCameraKit}.\n *\n * @category Bootstrapping and Configuration\n */\nexport function createExtension(): PartialContainer {\n    return new PartialContainer({});\n}\n", "import { getCameraKitUserAgent } from \"../platform/cameraKitUserAgent\";\nimport { ExtensionRequestContext } from \"../generated-proto/pb_schema/camera_kit/v3/export\";\nimport { getPlatformInfo } from \"../platform/platformInfo\";\n\nfunction getExtensionRequestContext(): ArrayBuffer {\n    return ExtensionRequestContext.encode({\n        userAgent: getCameraKitUserAgent(),\n        locale: getPlatformInfo().fullLocale,\n    }).finish();\n}\n\n/**\n * Extension request context.\n */\nexport const extensionRequestContext = getExtensionRequestContext();\n", "import { LensCore } from \"../lens-core-module\";\nimport { CameraKitSource, CameraKitSourceOptions, CameraKitSourceSubscriber } from \"./CameraKitSource\";\n\nconst getYUVImageData = async (canvas: HTMLCanvasElement, lensCore: LensCore): Promise<ImageData> => {\n    const { width, height } = canvas;\n    // A YUV buffer has lower-res UV channels, so the total number of bytes works out like so:\n    const outputBuffer = new ArrayBuffer((width * height * 3) / 2);\n    await lensCore.imageToYuvBuffer({ image: canvas, width, height, outputBuffer });\n    const pixels = new Uint8ClampedArray(outputBuffer);\n    return new ImageData(pixels, width, height);\n};\n\nconst getRGBImageData = (output: HTMLCanvasElement, imageReader2D: CanvasRenderingContext2D | null): ImageData => {\n    if (imageReader2D === null) return new ImageData(0, 0);\n    imageReader2D.drawImage(output, 0, 0);\n    return imageReader2D.getImageData(0, 0, output.width, output.height);\n};\n\nconst getImageBitmap = async (imageData: ImageData, format: FrameFormat): Promise<ImageBitmap> => {\n    switch (format) {\n        case \"nv12\":\n        case \"yuv\":\n            if (!window.VideoFrame)\n                return Promise.reject(\n                    new Error(`Cannot process frame. ImageData in ${format} is not supported by this browser.`)\n                );\n            const frame = new VideoFrame(imageData.data.buffer, {\n                format: \"NV12\",\n                codedWidth: imageData.width,\n                codedHeight: imageData.height,\n                timestamp: 0,\n            });\n            return createImageBitmap(frame);\n        case \"rgb\":\n            return createImageBitmap(imageData);\n    }\n};\n\n/** @internal */\nexport type FrameFormat = \"rgb\" | \"yuv\" | \"nv12\";\n\n/** @internal */\nexport interface FrameInput {\n    format?: FrameFormat;\n    imageData: ImageData;\n    timestampMillis: number;\n}\n\n/** @internal */\nexport interface FrameOutput {\n    live: ImageData;\n    capture: ImageData;\n}\n\n/** @internal */\nexport interface MediaSourceFunction {\n    (render: (frame: FrameInput) => Promise<FrameOutput>): Promise<void>;\n}\n\n/**\n * Creates a {@link CameraKitSource} from a function which provides per-frame pixel data to CameraKit.\n *\n * @param sourceFunction This function will be called in a requestAnimationFrame loop. Each time it is called, it is\n * passed a `render` function. It may call `render` and CameraKit will process the pixel data passed to `render` and\n * return a Promise of the processed pixels (along with rendering them to the normal output canvases).\n * @param options\n * @param options.cameraType By default we set this to 'user', which is the camera type most Lenses expect.\n *\n * @internal\n */\nexport const createFunctionSource = (\n    sourceFunction: MediaSourceFunction,\n    options: Omit<CameraKitSourceOptions, \"fpsLimit\"> = {}\n): CameraKitSource => {\n    let width = 0;\n    let height = 0;\n    let shouldProcessFrame = true;\n\n    // We require an auxiliary canvas that we can use to read back pixel data (unless we're in YUV mode, in which case\n    // we use LensCore to convert between formats and we don't need this canvas).\n    const imageReaderCanvas = document.createElement(\"canvas\");\n    const imageReader2D = imageReaderCanvas.getContext(\"2d\");\n\n    const subscriber: CameraKitSourceSubscriber = {\n        onAttach: (source, lensCore, reportError) => {\n            const outputs = lensCore.getOutputCanvases();\n            const output = {\n                live: outputs[lensCore.CanvasType.Preview.value],\n                capture: outputs[lensCore.CanvasType.Capture.value],\n            };\n\n            const processFrame = (source: CameraKitSource, lensCore: LensCore, reportError: (error: Error) => void) =>\n                requestAnimationFrame(async () => {\n                    if (!shouldProcessFrame) return;\n                    try {\n                        await sourceFunction(({ format, imageData, timestampMillis }) => {\n                            // TODO: with processFrame promisified, we don't really need to create a wrapper promise\n                            const frameOutput = new Promise<FrameOutput>(async (resolve, reject) => {\n                                const inputFrame = await getImageBitmap(imageData, format ?? \"rgb\");\n                                if (inputFrame.width !== width || inputFrame.height !== height) {\n                                    width = imageReaderCanvas.width = inputFrame.width;\n                                    height = imageReaderCanvas.height = inputFrame.height;\n                                    // We don't await this promise, because we want to continue to process frames and\n                                    // let LensCore manage the concurrency between setting resolution and processing a\n                                    // frame.\n                                    source.setRenderSize(width, height);\n                                }\n                                lensCore\n                                    .processFrame({ inputFrame, timestampMillis })\n                                    .then(async () => {\n                                        // Closing releases graphics resources associated with the frame, now that is\n                                        // has been processed.\n                                        inputFrame.close();\n\n                                        switch (format ?? \"rgb\") {\n                                            case \"nv12\":\n                                            case \"yuv\":\n                                                const [live, capture] = await Promise.all([\n                                                    getYUVImageData(output.live, lensCore),\n                                                    getYUVImageData(output.capture, lensCore),\n                                                ]).catch((error) => {\n                                                    reject(error);\n                                                    return [undefined, undefined] as const;\n                                                });\n                                                // if either of these is undefined, we'll have already rejected\n                                                // the promise, so we can return.\n                                                if (!live || !capture) return;\n                                                return resolve({ live, capture });\n                                            case \"rgb\":\n                                                return resolve({\n                                                    live: getRGBImageData(output.live, imageReader2D),\n                                                    capture: getRGBImageData(output.capture, imageReader2D),\n                                                });\n                                        }\n                                    })\n                                    .catch((error) => {\n                                        inputFrame.close();\n                                        reject(error);\n                                    });\n                            });\n                            // Even if there's an error processing the frame, we do want to attempt to process the next\n                            // frame. We expect `sourceFunction` to handle a rejected `frameOutput` Promise.\n                            frameOutput.finally(() => processFrame(source, lensCore, reportError));\n                            return frameOutput;\n                        });\n                    } catch (error) {\n                        reportError(\n                            new Error(\n                                \"Failure to process frame, which was not handled by the provided \" +\n                                    `MediaSourceFunction ${sourceFunction.name ?? \"anonymous\"}.`,\n                                { cause: error }\n                            )\n                        );\n                    }\n                });\n            processFrame(source, lensCore, reportError);\n        },\n        onDetach: () => {\n            shouldProcessFrame = false;\n        },\n    };\n\n    return new CameraKitSource({ useManualFrameProcessing: true }, subscriber, options);\n};\n", "import { CameraKitSource, CameraKitSourceOptions } from \"./CameraKitSource\";\n\n/**\n * Create a {@link CameraKitSource} from an\n * [HTMLImageElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement).\n *\n * @param image Image element.\n * @param options\n * @param options.cameraType By default we set this to 'user', which is the camera type most Lenses expect.\n * @param options.fpsLimit By default we set no limit on FPS.\n *\n * @category Rendering\n */\nexport function createImageSource(image: HTMLImageElement, options: CameraKitSourceOptions = {}): CameraKitSource {\n    return new CameraKitSource(\n        {\n            media: image,\n        },\n        {\n            onAttach: (source) => {\n                // If the image element has no explicit width/height (which may be the case for elements that have not\n                // been added to the DOM or had their size set explicitly), we'll render at the image's native\n                // resolution.\n                const [width, height] =\n                    image.width === 0 || image.height === 0\n                        ? [image.naturalWidth, image.naturalHeight]\n                        : [image.width, image.height];\n\n                return source.setRenderSize(width, height);\n            },\n        },\n        options\n    );\n}\n", "import environment from \"./environment.json\";\nimport lensCoreWasm from \"./lensCoreWasmVersions.json\";\nconsole.info(`SDK: ${environment.PACKAGE_VERSION} \\\n(${lensCoreWasm.version}/${lensCoreWasm.buildNumber})`);\n\nexport { Keyboard, KeyboardEvents } from \"./session/LensKeyboard\";\nexport { CameraKitConfiguration, CameraKitBootstrapConfiguration, configurationToken } from \"./configuration\";\nexport { getRequiredBootstrapURLs } from \"./lens-core-module/loader/lensCoreFactory\";\nexport {\n    estimateLensPerformance,\n    EstimatedLensPerformance,\n    LensPerformanceCluster,\n} from \"./benchmark/estimateLensPerformanceCluster\";\nexport * from \"./bootstrapCameraKit\";\nexport { extensionRequestContext } from \"./extensions/extensionRequestContext\";\nexport { LensSource, LensSources, lensSourcesFactory } from \"./extensions/LensSources\";\nexport {\n    Uri,\n    UriRequest,\n    UriResponse,\n    UriCancelRequest,\n    UriHandler,\n    UriHandlers,\n    uriHandlersFactory,\n} from \"./extensions/UriHandlers\";\nexport {\n    RemoteApiStatus,\n    RemoteApiRequest,\n    RemoteApiRequestHandler,\n    RemoteApiResponse,\n    RemoteApiService,\n    RemoteApiServices,\n    remoteApiServicesFactory,\n} from \"./extensions/RemoteApiServices\";\nexport { CameraKit, CreateSessionOptions, LensMetricsEvents } from \"./CameraKit\";\nexport { LensView } from \"./metrics/reporters/reportLensView\";\nexport { LensWait } from \"./metrics/reporters/reportLensWait\";\nexport { getCameraKitUserAgent } from \"./platform/cameraKitUserAgent\";\nexport { getPlatformInfo, PlatformInfo } from \"./platform/platformInfo\";\nexport { Lens, toPublicLens, Snapcode, Preview } from \"./lens/Lens\";\nexport { AssetTiming, LensRepository } from \"./lens/LensRepository\";\nexport { LensLaunchParams } from \"./lens/LensLaunchParams\";\nexport { AssetLoader } from \"./lens/assets/LensAssetRepository\";\nexport { remoteMediaAssetLoaderFactory } from \"./lens/assets/remoteMediaAssetLoaderFactory\";\nexport * from \"./media-sources/CameraKitSource\";\nexport * from \"./media-sources/MediaStreamSource\";\nexport * from \"./media-sources/FunctionSource\";\nexport * from \"./media-sources/VideoSource\";\nexport * from \"./media-sources/ImageSource\";\nexport * from \"./session/CameraKitSession\";\nexport { CameraKitSessionEvents, CameraKitSessionEventListener } from \"./session/CameraKitSessionEvents\";\nexport { Injectable } from \"./dependency-injection/Injectable\";\nexport { PartialContainer } from \"./dependency-injection/PartialContainer\";\nexport * from \"./transforms\";\nexport * from \"./namedErrors\";\nexport { LensPerformanceMeasurement, ComputedFrameMetrics } from \"./session/LensPerformanceMeasurement\";\nexport { LensPerformanceMetrics } from \"./session/LensPerformanceMetrics\";\nexport { TypedCustomEvent } from \"./events/TypedCustomEvent\";\nexport { TypedEventTarget } from \"./events/TypedEventTarget\";\nexport { namedError } from \"./namedErrors\";\nexport { Any } from \"./generated-proto/pb_schema/google/protobuf/any\";\n"],
  "mappings": "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",
  "names": ["exports", "module", "Long", "e", "p", "log2", "not", "exports", "module", "params", "offset", "exports", "p", "n", "buffer", "i", "t", "b", "c", "exports", "module", "exports", "module", "e", "exports", "c", "buffer", "t", "exports", "module", "size", "exports", "module", "from", "exports", "isString", "isObject", "isSet", "Buffer", "e", "merge", "i", "exports", "module", "noop", "create", "exports", "module", "exports", "module", "buffer", "create_array", "create", "skip", "exports", "module", "buffer", "exports", "module", "self", "err", "exports", "exports", "module", "exports", "require_minimal", "exports", "module", "exports", "module", "a", "BrowserHeaders", "pairs", "p", "iterator", "exports", "module", "e", "t", "r", "n", "o", "s", "a", "u", "d", "c", "i", "p", "h", "f", "l", "b", "y", "v", "value", "d", "b", "p", "s", "e", "t", "p", "c", "r", "d", "P", "e", "t", "f", "y", "n", "v", "s", "m", "n", "r", "e", "from", "l", "v", "n", "a", "b", "e", "r", "f", "m", "n", "v", "d", "Subscription", "e", "empty", "timeout", "Subscriber", "ConsumerObserver", "SafeSubscriber", "Observable", "observable", "OperatorSubscriber", "err", "ConnectableObservable", "timestamp", "id", "timestamp", "Subject", "observable", "AnonymousSubject", "BehaviorSubject", "ReplaySubject", "last", "AsyncSubject", "Action", "delay", "timeout", "AsyncAction", "delay", "id", "e", "AsapAction", "id", "delay", "Scheduler", "delay", "AsyncScheduler", "AsapScheduler", "QueueAction", "delay", "id", "QueueScheduler", "AnimationFrameAction", "id", "delay", "AnimationFrameScheduler", "VirtualTimeScheduler", "VirtualAction", "delay", "id", "a", "b", "process", "delay", "repeat", "delay", "delay", "iterator", "iterator", "NotificationKind", "Notification", "config", "isArray", "i", "expand", "buffer", "a", "b", "sourceIndex", "n", "isArray", "i", "s", "combineLatest", "combineLatest", "count", "a", "b", "config", "count", "delay", "refCount", "windowTime", "refCount", "_a", "i", "e", "id", "isFunction", "v", "_a", "_a", "req", "metadata", "target", "thisArg", "args", "module", "logger", "sleep", "min", "max", "logger", "logRetry", "sleep", "defaultOptions", "timeout", "first", "WasmFeatures", "getPlatformCapabilities", "logger", "s", "r", "module", "vertexSource", "fragmentSource", "width", "height", "buffer", "n", "a", "b", "Reflect", "map", "P", "hasOwn", "iterator", "k", "e", "f", "MapIterator", "Map", "Set", "WeakMap", "buffer", "getCameraKitUserAgent", "l", "requestId", "buffer", "import_long", "import_minimal", "_m0", "globalThis", "Long", "Lens_CameraFacing", "LensAssetManifestItem_Type", "LensAssetManifestItem_RequestTiming", "_m0", "isSet", "e", "k", "v", "Long", "logger", "id", "import_long", "import_minimal", "_m0", "Long", "import_long", "import_minimal", "_m0", "v", "e", "Long", "import_long", "import_minimal", "_m0", "globalThis", "_m0", "Long", "import_long", "import_minimal", "ExportLensesByIdRequest_Context_Extension_Name", "ExportLensesByIdResponse_ExcludedLens_Code", "_m0", "e", "globalThis", "_m0", "Long", "import_long", "import_minimal", "Namespace", "_m0", "Long", "import_browser_headers", "import_long", "import_minimal", "import_long", "import_minimal", "import_long", "import_minimal", "import_long", "import_minimal", "_m0", "isSet", "globalThis", "Long", "_m0", "longToNumber", "v", "e", "globalThis", "t", "Long", "import_long", "import_minimal", "Ruid_Type", "_m0", "Long", "ConfigTargetingTriggerEventType", "ConfigTargetingAppState", "ConfigTargetingInstrumentation", "Connectivity_NetworkType", "_m0", "v", "longToNumber", "e", "globalThis", "Long", "import_long", "import_minimal", "import_long", "import_minimal", "import_long", "import_minimal", "_m0", "v", "e", "longToNumber", "globalThis", "Long", "ConfigResult_ServePlatform", "ClientTargetingExpression_Operator", "ClientTargetingExpression_PredicateOperator", "ClientTargetingExpression_Property", "ClientTargetingExpression_PropertyMetadata_SignalToHash", "_m0", "v", "longToNumber", "e", "_m0", "v", "e", "globalThis", "longToNumber", "Long", "_m0", "v", "e", "Long", "import_long", "import_minimal", "AbStep", "CofStep", "_m0", "Long", "_m0", "v", "e", "Long", "logger", "logger", "m", "logger", "v", "p", "map", "buffer", "b", "import_long", "import_minimal", "import_long", "import_minimal", "RankingData_OSType", "RankingData_ConnectivityType", "_m0", "Long", "import_long", "import_minimal", "LegalDocument_Type", "_m0", "v", "e", "isSet", "toTimestamp", "fromTimestamp", "t", "Long", "import_long", "import_minimal", "_m0", "fromTimestamp", "longToNumber", "isSet", "fromJsonTimestamp", "e", "globalThis", "t", "Long", "import_long", "import_minimal", "CameraKitFlavor", "CameraKitConnectivityType", "CameraKitEnvironment", "globalThis", "_m0", "Long", "_m0", "isSet", "_m0", "Long", "isSet", "delay", "count", "metric", "d", "m", "_a", "h", "config", "requestId", "r", "lensPerformance", "config", "c", "buffer", "buffer", "logger", "id", "requestId", "assetDescriptors", "logger", "lenses", "e", "c", "t", "k", "t", "entries", "entries", "s", "v", "a", "s", "v", "width", "height", "defaultOptions", "width", "height", "e", "defaultOptions", "width", "height", "count", "logger", "log", "logger", "id", "import_long", "import_minimal", "import_long", "import_minimal", "EncryptionData_EncryptionScheme", "SnappableMessage_ReplyType", "_m0", "_m0", "longToNumber", "globalThis", "longToNumber", "_m0", "Long", "import_long", "import_minimal", "import_long", "import_minimal", "import_long", "import_minimal", "_m0", "Long", "_m0", "Long", "_m0", "v", "e", "Long", "import_long", "import_minimal", "UserData_Zodiac", "_m0", "toTimestamp", "fromTimestamp", "longToNumber", "globalThis", "toTimestamp", "fromTimestamp", "t", "longToNumber", "_m0", "Long", "import_long", "import_minimal", "_m0", "Long", "import_long", "import_minimal", "_m0", "Long", "LaunchData_EntryPoint", "LaunchData_ApiDescriptor", "LaunchData_RenderConfig", "LaunchData_ActivationSource", "_m0", "v", "e", "Long", "b", "logger", "actions", "c", "d", "config", "d", "timestamp", "logger", "a", "dispatch", "lens", "s", "a", "logger", "log", "e", "a", "logger", "import_long", "import_minimal", "HttpRequestMethod", "ResponseCode", "GetOAuth2InfoResponse_GrantType", "TokenExchangeError_TokenExchangeErrorType", "globalThis", "_m0", "Long", "isFunction", "logger", "_a", "logger", "max", "count", "m", "entries", "e", "context", "config", "scan", "scan", "requestId", "scan", "requestId", "CameraKitSession", "AppType", "Collection", "DailySessionBucket", "CameraKitLegalPromptResult", "CameraKitEnvironment", "CameraKitConnectivityType", "CameraKitFlavor", "CameraKitVariant", "KitPluginType", "KitType", "a", "timestamp", "a", "s", "viewMetrics", "viewTimeThresholdSec", "a", "n", "count", "e", "e", "t", "n", "r", "a", "s", "c", "l", "d", "i", "o", "Orientation", "logger", "mimeTypes", "logger", "logger", "log", "e", "validate", "v", "URL", "a", "b", "c", "d", "y", "s", "t", "f", "s", "y", "n", "l", "t", "a", "b", "c", "d", "e", "logger", "relativePath", "CameraKitConnectivityType", "CameraKitFlavor", "CameraKitSession", "logger", "width", "height", "source", "lensCore", "reportError", "width", "height"]
}
